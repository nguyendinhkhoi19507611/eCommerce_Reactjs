{"ast":null,"code":"import * as XLSX from 'xlsx/xlsx.mjs';\nimport { PREFIX_CURRENCY } from '../utils/constant';\nclass CommonUtils {\n  static getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  }\n  static exportExcel(data, nameSheet, nameFile) {\n    return new Promise((resolve, reject) => {\n      var wb = XLSX.utils.book_new();\n      var ws = XLSX.utils.json_to_sheet(data);\n      XLSX.utils.book_append_sheet(wb, ws, nameSheet);\n      XLSX.writeFile(wb, `${nameFile}.xlsx`);\n      resolve('oke');\n    });\n  }\n}\nCommonUtils.formatter = new Intl.NumberFormat('en-VN', {\n  style: 'currency',\n  currency: 'VND',\n  minimumFractionDigits: PREFIX_CURRENCY.minimumFractionDigits\n});\nexport default CommonUtils;","map":{"version":3,"names":["XLSX","PREFIX_CURRENCY","CommonUtils","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","exportExcel","data","nameSheet","nameFile","wb","utils","book_new","ws","json_to_sheet","book_append_sheet","writeFile","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits"],"sources":["C:/Code/ecom/eCommerce_Reactjs/src/utils/CommonUtils.js"],"sourcesContent":["import * as XLSX from 'xlsx/xlsx.mjs'\r\nimport { PREFIX_CURRENCY } from '../utils/constant'\r\nclass CommonUtils {\r\n    static getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = error => reject(error)\r\n        })\r\n    }\r\n    static exportExcel(data, nameSheet, nameFile) {\r\n        return new Promise((resolve, reject) => {\r\n            var wb = XLSX.utils.book_new()\r\n            var ws = XLSX.utils.json_to_sheet(data)\r\n            XLSX.utils.book_append_sheet(wb, ws, nameSheet)\r\n            XLSX.writeFile(wb, `${nameFile}.xlsx`)\r\n            resolve('oke')\r\n        })\r\n    }\r\n    static formatter = new Intl.NumberFormat('en-VN', {\r\n        style: 'currency',\r\n        currency: 'VND',\r\n        minimumFractionDigits: PREFIX_CURRENCY.minimumFractionDigits\r\n    })\r\n\r\n}\r\n\r\nexport default CommonUtils;"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,eAAe;AACrC,SAASC,eAAe,QAAQ,mBAAmB;AACnD,MAAMC,WAAW,CAAC;EACd,OAAOC,SAASA,CAACC,IAAI,EAAE;IACnB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,aAAa,CAACN,IAAI,CAAC;MAC1BI,MAAM,CAACG,MAAM,GAAG,MAAML,OAAO,CAACE,MAAM,CAACI,MAAM,CAAC;MAC5CJ,MAAM,CAACK,OAAO,GAAGC,KAAK,IAAIP,MAAM,CAACO,KAAK,CAAC;IAC3C,CAAC,CAAC;EACN;EACA,OAAOC,WAAWA,CAACC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAE;IAC1C,OAAO,IAAIb,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,IAAIY,EAAE,GAAGnB,IAAI,CAACoB,KAAK,CAACC,QAAQ,CAAC,CAAC;MAC9B,IAAIC,EAAE,GAAGtB,IAAI,CAACoB,KAAK,CAACG,aAAa,CAACP,IAAI,CAAC;MACvChB,IAAI,CAACoB,KAAK,CAACI,iBAAiB,CAACL,EAAE,EAAEG,EAAE,EAAEL,SAAS,CAAC;MAC/CjB,IAAI,CAACyB,SAAS,CAACN,EAAE,EAAE,GAAGD,QAAQ,OAAO,CAAC;MACtCZ,OAAO,CAAC,KAAK,CAAC;IAClB,CAAC,CAAC;EACN;AAOJ;AAxBMJ,WAAW,CAkBNwB,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAC9CC,KAAK,EAAE,UAAU;EACjBC,QAAQ,EAAE,KAAK;EACfC,qBAAqB,EAAE9B,eAAe,CAAC8B;AAC3C,CAAC,CAAC;AAIN,eAAe7B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}