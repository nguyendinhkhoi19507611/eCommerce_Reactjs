{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\ecom\\\\eCommerce_Reactjs\\\\src\\\\component\\\\input\\\\DatePicker.js\";\nimport React, { Component } from 'react';\nimport Flatpickr from 'react-flatpickr';\nimport moment from 'moment';\nimport KeyCodeUtils from \"../../utils/KeyCodeUtils\";\nimport './DatePicker.scss';\n\n// const CustomInput = ({ value, defaultValue, inputRef, onInputChange, onInputBlur, ...props }) => {\n//     return <input {...props} className='custom-form-control custom-date-input' defaultValue={defaultValue} ref={inputRef}\n//         onChange={onInputChange}\n//         onBlur={onInputBlur}\n//     />;\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DatePicker extends Component {\n  constructor(...args) {\n    super(...args);\n    this.flatpickrNode = null;\n    this.nodeRef = element => {\n      this.flatpickr = element && element.flatpickr;\n      this.flatpickrNode = element && element.node;\n      if (this.flatpickrNode) {\n        this.flatpickrNode.addEventListener('blur', this.handleBlur);\n        this.flatpickrNode.addEventListener('keydown', this.handlerKeyDown);\n      }\n    };\n    this.handlerKeyDown = event => {\n      const keyCode = event.which || event.keyCode;\n      if (keyCode === KeyCodeUtils.ENTER) {\n        event.preventDefault();\n        const {\n          onChange\n        } = this.props;\n        const value = event.target.value;\n\n        // Take the blur event and process the string value\n        const valueMoment = moment(value, 'DD/MM/YYYY');\n        onChange([valueMoment.toDate(), valueMoment.toDate()]);\n      }\n    };\n    this.handleBlur = event => {\n      const {\n        onChange\n      } = this.props;\n      const value = event.target.value;\n\n      // Take the blur event and process the string value\n      event.preventDefault();\n      const valueMoment = moment(value, 'DD/MM/YYYY');\n      onChange([valueMoment.toDate(), valueMoment.toDate()]);\n    };\n    this.onOpen = () => {\n      if (this.flatpickrNode) {\n        this.flatpickrNode.blur();\n      }\n    };\n    this.checkDateValue = (str, max) => {\n      if (str.charAt(0) !== '0' || str === '00') {\n        var num = parseInt(str);\n        if (isNaN(num) || num <= 0 || num > max) num = 1;\n        str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString();\n      }\n      ;\n      return str;\n    };\n    this.autoFormatOnChange = (value, seperator) => {\n      var input = value;\n      let regexForDeleting = new RegExp(`\\\\D\\\\${seperator}$`);\n\n      //if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3); // dat.nt: Xóa thêm 1 ký tự nếu xóa dấu cách sau / (VD: 12 / 12 /=> 12 / 1)\n\n      if (regexForDeleting.test(input)) input = input.substr(0, input.length - 3);\n      var values = input.split(seperator).map(function (v) {\n        return v.replace(/\\D/g, '');\n      });\n      if (values[0]) values[0] = this.checkDateValue(values[0], 31);\n      if (values[1]) values[1] = this.checkDateValue(values[1], 12);\n      var output = values.map(function (v, i) {\n        return v.length === 2 && i < 2 ? v + ' ' + seperator + ' ' : v;\n      });\n      return output.join('').substr(0, 14);\n    };\n    this.onInputChange = e => {\n      if (this.DISPLAY_FORMAT === this.DATE_FORMAT_AUTO_FILL) {\n        let converted = this.autoFormatOnChange(e.target.value, this.SEPERATOR);\n        e.target.value = converted;\n      }\n    };\n    this.onInputBlur = e => {};\n    //dat.nt : Auto Fill cho dạng ngăn cách và format cụ thể (seperator có thể dc thay thế)\n    this.SEPERATOR = \"/\";\n    this.DATE_FORMAT_AUTO_FILL = \"d/m/Y\";\n    // Format không thay đổi\n    // dat.nt : Format ngày hiển thị\n    this.DISPLAY_FORMAT = \"d/m/Y\";\n  }\n  componentWillUnmount() {\n    if (this.flatpickrNode) {\n      this.flatpickrNode.removeEventListener('blur', this.handleBlur);\n      this.flatpickrNode.removeEventListener('keydown', this.handlerKeyDown);\n    }\n  }\n  close() {\n    this.flatpickr.close();\n  }\n  render() {\n    const {\n      value,\n      onChange,\n      minDate,\n      onClose,\n      ...otherProps\n    } = this.props;\n    const options = {\n      dateFormat: this.DISPLAY_FORMAT,\n      allowInput: true,\n      disableMobile: true,\n      onClose: onClose,\n      onOpen: this.onOpen\n    };\n    if (minDate) {\n      options.minDate = minDate;\n    }\n    return /*#__PURE__*/_jsxDEV(Flatpickr, {\n      ref: this.nodeRef,\n      value: value,\n      onChange: onChange,\n      options: options\n\n      // render={\n      //     ({ defaultValue, value, ...props }, ref) => {\n      //         return <CustomInput defaultValue={defaultValue} inputRef={ref} onInputChange={this.onInputChange} onInputBlur={this.onInputBlur} />\n      //     }\n      // }\n      ,\n      ...otherProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DatePicker;","map":{"version":3,"names":["React","Component","Flatpickr","moment","KeyCodeUtils","jsxDEV","_jsxDEV","DatePicker","constructor","args","flatpickrNode","nodeRef","element","flatpickr","node","addEventListener","handleBlur","handlerKeyDown","event","keyCode","which","ENTER","preventDefault","onChange","props","value","target","valueMoment","toDate","onOpen","blur","checkDateValue","str","max","charAt","num","parseInt","isNaN","toString","length","autoFormatOnChange","seperator","input","regexForDeleting","RegExp","test","substr","values","split","map","v","replace","output","i","join","onInputChange","e","DISPLAY_FORMAT","DATE_FORMAT_AUTO_FILL","converted","SEPERATOR","onInputBlur","componentWillUnmount","removeEventListener","close","render","minDate","onClose","otherProps","options","dateFormat","allowInput","disableMobile","ref","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Code/ecom/eCommerce_Reactjs/src/component/input/DatePicker.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Flatpickr from 'react-flatpickr';\r\nimport moment from 'moment';\r\n\r\nimport KeyCodeUtils from \"../../utils/KeyCodeUtils\";\r\nimport './DatePicker.scss';\r\n\r\n// const CustomInput = ({ value, defaultValue, inputRef, onInputChange, onInputBlur, ...props }) => {\r\n//     return <input {...props} className='custom-form-control custom-date-input' defaultValue={defaultValue} ref={inputRef}\r\n//         onChange={onInputChange}\r\n//         onBlur={onInputBlur}\r\n//     />;\r\n// };\r\n\r\nclass DatePicker extends Component {\r\n\r\n    flatpickrNode = null;\r\n\r\n    nodeRef = element => {\r\n        this.flatpickr = element && element.flatpickr;\r\n        this.flatpickrNode = element && element.node;\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.addEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.addEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    };\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            event.preventDefault();\r\n            const { onChange } = this.props;\r\n            const value = event.target.value;\r\n\r\n            // Take the blur event and process the string value\r\n            const valueMoment = moment(value, 'DD/MM/YYYY');\r\n            onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.removeEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.removeEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    }\r\n\r\n    handleBlur = (event) => {\r\n        const { onChange } = this.props;\r\n        const value = event.target.value;\r\n\r\n        // Take the blur event and process the string value\r\n        event.preventDefault();\r\n        const valueMoment = moment(value, 'DD/MM/YYYY');\r\n        onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n    };\r\n\r\n    onOpen = () => {\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.blur();\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.flatpickr.close();\r\n    }\r\n\r\n    checkDateValue = (str, max) => {\r\n        if (str.charAt(0) !== '0' || str === '00') {\r\n            var num = parseInt(str);\r\n            if (isNaN(num) || num <= 0 || num > max) num = 1;\r\n            str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString();\r\n        };\r\n        return str;\r\n    }\r\n\r\n    autoFormatOnChange = (value, seperator) => {\r\n        var input = value;\r\n\r\n        let regexForDeleting = new RegExp(`\\\\D\\\\${seperator}$`);\r\n\r\n        //if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3); // dat.nt: Xóa thêm 1 ký tự nếu xóa dấu cách sau / (VD: 12 / 12 /=> 12 / 1)\r\n\r\n        if (regexForDeleting.test(input)) input = input.substr(0, input.length - 3);\r\n\r\n        var values = input.split(seperator).map(function (v) {\r\n            return v.replace(/\\D/g, '')\r\n        });\r\n\r\n        if (values[0]) values[0] = this.checkDateValue(values[0], 31);\r\n        if (values[1]) values[1] = this.checkDateValue(values[1], 12);\r\n        var output = values.map(function (v, i) {\r\n            return v.length === 2 && i < 2 ? v + ' ' + seperator + ' ' : v;\r\n        });\r\n        return output.join('').substr(0, 14);\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        if (this.DISPLAY_FORMAT === this.DATE_FORMAT_AUTO_FILL) {\r\n            let converted = this.autoFormatOnChange(e.target.value, this.SEPERATOR);\r\n            e.target.value = converted;\r\n        }\r\n    }\r\n\r\n    onInputBlur = (e) => {\r\n    }\r\n\r\n    //dat.nt : Auto Fill cho dạng ngăn cách và format cụ thể (seperator có thể dc thay thế)\r\n    SEPERATOR = \"/\";\r\n    DATE_FORMAT_AUTO_FILL = \"d/m/Y\"; // Format không thay đổi\r\n\r\n    // dat.nt : Format ngày hiển thị\r\n    DISPLAY_FORMAT = \"d/m/Y\";\r\n\r\n    render() {\r\n        const { value, onChange, minDate, onClose, ...otherProps } = this.props;\r\n        const options = {\r\n            dateFormat: this.DISPLAY_FORMAT,\r\n            allowInput: true,\r\n            disableMobile: true,\r\n            onClose: onClose,\r\n            onOpen: this.onOpen,\r\n            \r\n        };\r\n        if (minDate) {\r\n            options.minDate = minDate;\r\n        }\r\n        return (\r\n            <Flatpickr\r\n                ref={this.nodeRef}\r\n                value={value}\r\n                onChange={onChange}\r\n                options={options}\r\n               \r\n                // render={\r\n                //     ({ defaultValue, value, ...props }, ref) => {\r\n                //         return <CustomInput defaultValue={defaultValue} inputRef={ref} onInputChange={this.onInputChange} onInputBlur={this.onInputBlur} />\r\n                //     }\r\n                // }\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatePicker;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,MAAM,MAAM,QAAQ;AAE3B,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAO,mBAAmB;;AAE1B;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,SAASN,SAAS,CAAC;EAAAO,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAE/BC,aAAa,GAAG,IAAI;IAAA,KAEpBC,OAAO,GAAGC,OAAO,IAAI;MACjB,IAAI,CAACC,SAAS,GAAGD,OAAO,IAAIA,OAAO,CAACC,SAAS;MAC7C,IAAI,CAACH,aAAa,GAAGE,OAAO,IAAIA,OAAO,CAACE,IAAI;MAC5C,IAAI,IAAI,CAACJ,aAAa,EAAE;QACpB,IAAI,CAACA,aAAa,CAACK,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAACC,UAAU,CAAC;QAC5D,IAAI,CAACN,aAAa,CAACK,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACE,cAAc,CAAC;MACvE;IACJ,CAAC;IAAA,KAEDA,cAAc,GAAIC,KAAK,IAAK;MACxB,MAAMC,OAAO,GAAGD,KAAK,CAACE,KAAK,IAAIF,KAAK,CAACC,OAAO;MAC5C,IAAIA,OAAO,KAAKf,YAAY,CAACiB,KAAK,EAAE;QAChCH,KAAK,CAACI,cAAc,CAAC,CAAC;QACtB,MAAM;UAAEC;QAAS,CAAC,GAAG,IAAI,CAACC,KAAK;QAC/B,MAAMC,KAAK,GAAGP,KAAK,CAACQ,MAAM,CAACD,KAAK;;QAEhC;QACA,MAAME,WAAW,GAAGxB,MAAM,CAACsB,KAAK,EAAE,YAAY,CAAC;QAC/CF,QAAQ,CAAC,CAACI,WAAW,CAACC,MAAM,CAAC,CAAC,EAAED,WAAW,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC1D;IACJ,CAAC;IAAA,KASDZ,UAAU,GAAIE,KAAK,IAAK;MACpB,MAAM;QAAEK;MAAS,CAAC,GAAG,IAAI,CAACC,KAAK;MAC/B,MAAMC,KAAK,GAAGP,KAAK,CAACQ,MAAM,CAACD,KAAK;;MAEhC;MACAP,KAAK,CAACI,cAAc,CAAC,CAAC;MACtB,MAAMK,WAAW,GAAGxB,MAAM,CAACsB,KAAK,EAAE,YAAY,CAAC;MAC/CF,QAAQ,CAAC,CAACI,WAAW,CAACC,MAAM,CAAC,CAAC,EAAED,WAAW,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;IAAA,KAEDC,MAAM,GAAG,MAAM;MACX,IAAI,IAAI,CAACnB,aAAa,EAAE;QACpB,IAAI,CAACA,aAAa,CAACoB,IAAI,CAAC,CAAC;MAC7B;IACJ,CAAC;IAAA,KAMDC,cAAc,GAAG,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC3B,IAAID,GAAG,CAACE,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIF,GAAG,KAAK,IAAI,EAAE;QACvC,IAAIG,GAAG,GAAGC,QAAQ,CAACJ,GAAG,CAAC;QACvB,IAAIK,KAAK,CAACF,GAAG,CAAC,IAAIA,GAAG,IAAI,CAAC,IAAIA,GAAG,GAAGF,GAAG,EAAEE,GAAG,GAAG,CAAC;QAChDH,GAAG,GAAGG,GAAG,GAAGC,QAAQ,CAACH,GAAG,CAACK,QAAQ,CAAC,CAAC,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,IAAIC,GAAG,CAACG,QAAQ,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,GAAG,GAAG,GAAGJ,GAAG,GAAGA,GAAG,CAACG,QAAQ,CAAC,CAAC;MAC9G;MAAC;MACD,OAAON,GAAG;IACd,CAAC;IAAA,KAEDQ,kBAAkB,GAAG,CAACf,KAAK,EAAEgB,SAAS,KAAK;MACvC,IAAIC,KAAK,GAAGjB,KAAK;MAEjB,IAAIkB,gBAAgB,GAAG,IAAIC,MAAM,CAAC,QAAQH,SAAS,GAAG,CAAC;;MAEvD;;MAEA,IAAIE,gBAAgB,CAACE,IAAI,CAACH,KAAK,CAAC,EAAEA,KAAK,GAAGA,KAAK,CAACI,MAAM,CAAC,CAAC,EAAEJ,KAAK,CAACH,MAAM,GAAG,CAAC,CAAC;MAE3E,IAAIQ,MAAM,GAAGL,KAAK,CAACM,KAAK,CAACP,SAAS,CAAC,CAACQ,GAAG,CAAC,UAAUC,CAAC,EAAE;QACjD,OAAOA,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;MAC/B,CAAC,CAAC;MAEF,IAAIJ,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAChB,cAAc,CAACgB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC7D,IAAIA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAChB,cAAc,CAACgB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC7D,IAAIK,MAAM,GAAGL,MAAM,CAACE,GAAG,CAAC,UAAUC,CAAC,EAAEG,CAAC,EAAE;QACpC,OAAOH,CAAC,CAACX,MAAM,KAAK,CAAC,IAAIc,CAAC,GAAG,CAAC,GAAGH,CAAC,GAAG,GAAG,GAAGT,SAAS,GAAG,GAAG,GAAGS,CAAC;MAClE,CAAC,CAAC;MACF,OAAOE,MAAM,CAACE,IAAI,CAAC,EAAE,CAAC,CAACR,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;IACxC,CAAC;IAAA,KAEDS,aAAa,GAAIC,CAAC,IAAK;MACnB,IAAI,IAAI,CAACC,cAAc,KAAK,IAAI,CAACC,qBAAqB,EAAE;QACpD,IAAIC,SAAS,GAAG,IAAI,CAACnB,kBAAkB,CAACgB,CAAC,CAAC9B,MAAM,CAACD,KAAK,EAAE,IAAI,CAACmC,SAAS,CAAC;QACvEJ,CAAC,CAAC9B,MAAM,CAACD,KAAK,GAAGkC,SAAS;MAC9B;IACJ,CAAC;IAAA,KAEDE,WAAW,GAAIL,CAAC,IAAK,CACrB,CAAC;IAED;IAAA,KACAI,SAAS,GAAG,GAAG;IAAA,KACfF,qBAAqB,GAAG,OAAO;IAAE;IAEjC;IAAA,KACAD,cAAc,GAAG,OAAO;EAAA;EAxExBK,oBAAoBA,CAAA,EAAG;IACnB,IAAI,IAAI,CAACpD,aAAa,EAAE;MACpB,IAAI,CAACA,aAAa,CAACqD,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC/C,UAAU,CAAC;MAC/D,IAAI,CAACN,aAAa,CAACqD,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC9C,cAAc,CAAC;IAC1E;EACJ;EAkBA+C,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACnD,SAAS,CAACmD,KAAK,CAAC,CAAC;EAC1B;EAiDAC,MAAMA,CAAA,EAAG;IACL,MAAM;MAAExC,KAAK;MAAEF,QAAQ;MAAE2C,OAAO;MAAEC,OAAO;MAAE,GAAGC;IAAW,CAAC,GAAG,IAAI,CAAC5C,KAAK;IACvE,MAAM6C,OAAO,GAAG;MACZC,UAAU,EAAE,IAAI,CAACb,cAAc;MAC/Bc,UAAU,EAAE,IAAI;MAChBC,aAAa,EAAE,IAAI;MACnBL,OAAO,EAAEA,OAAO;MAChBtC,MAAM,EAAE,IAAI,CAACA;IAEjB,CAAC;IACD,IAAIqC,OAAO,EAAE;MACTG,OAAO,CAACH,OAAO,GAAGA,OAAO;IAC7B;IACA,oBACI5D,OAAA,CAACJ,SAAS;MACNuE,GAAG,EAAE,IAAI,CAAC9D,OAAQ;MAClBc,KAAK,EAAEA,KAAM;MACbF,QAAQ,EAAEA,QAAS;MACnB8C,OAAO,EAAEA;;MAET;MACA;MACA;MACA;MACA;MAAA;MAAA,GACID;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;AACJ;AAEA,eAAetE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}