{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\ecom\\\\eCommerce_Reactjs\\\\src\\\\container\\\\User\\\\PaymentSuccess.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { paymentOrderSuccessService } from '../../services/userService';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useParams, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useQuery() {\n  _s();\n  const {\n    search\n  } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n_s(useQuery, \"I+9F+Vhfmc3otMLqUKFlYflxhf8=\", false, function () {\n  return [useLocation];\n});\nfunction PaymentSuccess(props) {\n  _s2();\n  let query = useQuery();\n  useEffect(() => {\n    let orderData = JSON.parse(localStorage.getItem(\"orderData\"));\n    localStorage.removeItem(\"orderData\");\n    if (orderData) {\n      orderData.paymentId = query.get(\"paymentId\");\n      orderData.token = query.get(\"token\");\n      orderData.PayerID = query.get(\"PayerID\");\n      createNewOrder(orderData);\n    }\n  }, []);\n  let createNewOrder = async data => {\n    let res = await paymentOrderSuccessService(data);\n    if (res && res.errCode == 0) {\n      toast.success(\"Thanh toán hóa đơn thành công\");\n      const userData = JSON.parse(localStorage.getItem('userData'));\n      setTimeout(() => {\n        window.location.href = '/user/order/' + userData.id;\n      }, 2000);\n    } else {\n      toast.error(res.errMessgae);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '50vh',\n      textAlign: 'center'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s2(PaymentSuccess, \"SCD2u/2Ws51YgbJhV3q6Zm3fxeM=\", false, function () {\n  return [useQuery];\n});\n_c = PaymentSuccess;\nexport default PaymentSuccess;\nvar _c;\n$RefreshReg$(_c, \"PaymentSuccess\");","map":{"version":3,"names":["React","useEffect","useState","toast","paymentOrderSuccessService","BrowserRouter","Router","Switch","Route","Link","Redirect","useParams","useLocation","jsxDEV","_jsxDEV","useQuery","_s","search","useMemo","URLSearchParams","PaymentSuccess","props","_s2","query","orderData","JSON","parse","localStorage","getItem","removeItem","paymentId","get","token","PayerID","createNewOrder","data","res","errCode","success","userData","setTimeout","window","location","href","id","error","errMessgae","style","height","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Code/ecom/eCommerce_Reactjs/src/container/User/PaymentSuccess.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {paymentOrderSuccessService} from '../../services/userService'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useParams,\r\n    useLocation\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction useQuery() {\r\n    const { search } = useLocation();\r\n  \r\n    return React.useMemo(() => new URLSearchParams(search), [search]);\r\n  }\r\n\r\nfunction PaymentSuccess(props) {\r\n    let query = useQuery();\r\n    \r\n    useEffect(() => {\r\n        let orderData =  JSON.parse(localStorage.getItem(\"orderData\"))\r\n        localStorage.removeItem(\"orderData\")\r\n        if(orderData){\r\n            orderData.paymentId = query.get(\"paymentId\")\r\n            orderData.token = query.get(\"token\")\r\n            orderData.PayerID = query.get(\"PayerID\")\r\n    \r\n            createNewOrder(orderData)\r\n        }\r\n    }, [])\r\n    let createNewOrder = async (data) =>{\r\n        let res = await paymentOrderSuccessService(data)\r\n        if(res && res.errCode ==0){\r\n            toast.success(\"Thanh toán hóa đơn thành công\")\r\n            const userData = JSON.parse(localStorage.getItem('userData'));\r\n            setTimeout(()=>{\r\n                window.location.href='/user/order/'+userData.id\r\n            },2000)\r\n        }else{\r\n            toast.error(res.errMessgae)\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div style={{height:'50vh',textAlign:'center'}}> \r\n          \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PaymentSuccess;\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAAQC,0BAA0B,QAAO,4BAA4B;AACrE,SACIC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,EACJC,QAAQ,EACRC,SAAS,EACTC,WAAW,QACR,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAO,CAAC,GAAGL,WAAW,CAAC,CAAC;EAEhC,OAAOZ,KAAK,CAACkB,OAAO,CAAC,MAAM,IAAIC,eAAe,CAACF,MAAM,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;AACnE;AAACD,EAAA,CAJMD,QAAQ;EAAA,QACMH,WAAW;AAAA;AAKlC,SAASQ,cAAcA,CAACC,KAAK,EAAE;EAAAC,GAAA;EAC3B,IAAIC,KAAK,GAAGR,QAAQ,CAAC,CAAC;EAEtBd,SAAS,CAAC,MAAM;IACZ,IAAIuB,SAAS,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC9DD,YAAY,CAACE,UAAU,CAAC,WAAW,CAAC;IACpC,IAAGL,SAAS,EAAC;MACTA,SAAS,CAACM,SAAS,GAAGP,KAAK,CAACQ,GAAG,CAAC,WAAW,CAAC;MAC5CP,SAAS,CAACQ,KAAK,GAAGT,KAAK,CAACQ,GAAG,CAAC,OAAO,CAAC;MACpCP,SAAS,CAACS,OAAO,GAAGV,KAAK,CAACQ,GAAG,CAAC,SAAS,CAAC;MAExCG,cAAc,CAACV,SAAS,CAAC;IAC7B;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,IAAIU,cAAc,GAAG,MAAOC,IAAI,IAAI;IAChC,IAAIC,GAAG,GAAG,MAAMhC,0BAA0B,CAAC+B,IAAI,CAAC;IAChD,IAAGC,GAAG,IAAIA,GAAG,CAACC,OAAO,IAAG,CAAC,EAAC;MACtBlC,KAAK,CAACmC,OAAO,CAAC,+BAA+B,CAAC;MAC9C,MAAMC,QAAQ,GAAGd,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MAC7DY,UAAU,CAAC,MAAI;QACXC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAC,cAAc,GAACJ,QAAQ,CAACK,EAAE;MACnD,CAAC,EAAC,IAAI,CAAC;IACX,CAAC,MAAI;MACDzC,KAAK,CAAC0C,KAAK,CAACT,GAAG,CAACU,UAAU,CAAC;IAC/B;EACJ,CAAC;EACD,oBAEIhC,OAAA;IAAKiC,KAAK,EAAE;MAACC,MAAM,EAAC,MAAM;MAACC,SAAS,EAAC;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1C,CAAC;AAGd;AAAC/B,GAAA,CAjCQF,cAAc;EAAA,QACPL,QAAQ;AAAA;AAAAuC,EAAA,GADflC,cAAc;AAmCvB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}