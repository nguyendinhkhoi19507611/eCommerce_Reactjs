{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\ecom\\\\eCommerce_Reactjs\\\\src\\\\container\\\\Message\\\\MessagePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport ChatWindow from './ChatWindow';\nimport MessageDisscution from './MessageDisscution';\nimport './MessagePage.scss';\nimport { createNewRoom, listRoomOfUser } from '../../services/userService';\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire('dotenv').config();\nfunction MessagePage(props) {\n  _s();\n  const [dataRoom, setdataRoom] = useState([]);\n  const [selectedRoom, setselectedRoom] = useState('');\n  const [dataUser, setdataUser] = useState({});\n  const host = process.env.REACT_APP_BACKEND_URL;\n  const socketRef = useRef();\n  const [id, setId] = useState();\n  useEffect(() => {\n    socketRef.current = socketIOClient.connect(host);\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    setdataUser(userData);\n    let createRoom = async () => {\n      let res = await createNewRoom({\n        userId1: userData.id\n      });\n      if (res && res.errCode) {\n        fetchListRoom(userData.id);\n      }\n    };\n    if (userData) {\n      socketRef.current.on('getId', data => {\n        setId(data);\n      }); // phần này đơn giản để gán id cho mỗi phiên kết nối vào page. Mục đích chính là để phân biệt đoạn nào là của mình đang chat.\n      createRoom();\n      fetchListRoom(userData.id);\n      socketRef.current.on('sendDataServer', dataGot => {\n        fetchListRoom(userData.id);\n      });\n      socketRef.current.on('loadRoomServer', dataGot => {\n        fetchListRoom(userData.id);\n      });\n      return () => {\n        socketRef.current.disconnect();\n      };\n    }\n  }, []);\n  let handleClickRoom = roomId => {\n    socketRef.current.emit('loadRoomClient');\n    setselectedRoom(roomId);\n  };\n  let fetchListRoom = async userId => {\n    let res = await listRoomOfUser(userId);\n    if (res && res.errCode == 0) {\n      setdataRoom(res.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ks-page-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ks-page-content-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ks-messenger\",\n          children: [/*#__PURE__*/_jsxDEV(MessageDisscution, {\n            userId: dataUser.id,\n            isAdmin: false,\n            handleClickRoom: handleClickRoom,\n            data: dataRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 18\n          }, this), selectedRoom ? /*#__PURE__*/_jsxDEV(ChatWindow, {\n            userId: dataUser.id,\n            roomId: selectedRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Ch\\u01B0a ch\\u1ECDn ph\\xF2ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(MessagePage, \"fPMhGRD/MfSrsJ0lX7BhrbDIn3g=\");\n_c = MessagePage;\nexport default MessagePage;\nvar _c;\n$RefreshReg$(_c, \"MessagePage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","ChatWindow","MessageDisscution","createNewRoom","listRoomOfUser","socketIOClient","jsxDEV","_jsxDEV","require","config","MessagePage","props","_s","dataRoom","setdataRoom","selectedRoom","setselectedRoom","dataUser","setdataUser","host","process","env","REACT_APP_BACKEND_URL","socketRef","id","setId","current","connect","userData","JSON","parse","localStorage","getItem","createRoom","res","userId1","errCode","fetchListRoom","on","data","dataGot","disconnect","handleClickRoom","roomId","emit","userId","className","children","isAdmin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Code/ecom/eCommerce_Reactjs/src/container/Message/MessagePage.js"],"sourcesContent":["import React, { useEffect, useState,useRef } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport ChatWindow from './ChatWindow';\r\nimport MessageDisscution from './MessageDisscution';\r\nimport './MessagePage.scss';\r\nimport {createNewRoom,listRoomOfUser} from '../../services/userService';\r\nimport socketIOClient from \"socket.io-client\";\r\nrequire('dotenv').config();\r\nfunction MessagePage(props) {\r\n  const [dataRoom, setdataRoom] = useState([])\r\n  const [selectedRoom, setselectedRoom] = useState('')\r\n  const [dataUser, setdataUser] = useState({})\r\n  const host = process.env.REACT_APP_BACKEND_URL;\r\n  const socketRef = useRef();\r\n  const [id, setId] = useState();\r\n  useEffect(()=>{\r\n    socketRef.current = socketIOClient.connect(host)\r\n    const userData = JSON.parse(localStorage.getItem('userData'));\r\n    setdataUser(userData)\r\n    let createRoom = async()=>{\r\n     let res = await createNewRoom({\r\n        userId1:userData.id\r\n      })\r\n      if(res && res.errCode){\r\n        fetchListRoom(userData.id)\r\n      }\r\n    }\r\n    if(userData){\r\n      socketRef.current.on('getId', data => {\r\n        setId(data)\r\n      }) // phần này đơn giản để gán id cho mỗi phiên kết nối vào page. Mục đích chính là để phân biệt đoạn nào là của mình đang chat.\r\n      createRoom()\r\n  \r\n  \r\n      \r\n      fetchListRoom(userData.id)\r\n  \r\n   socketRef.current.on('sendDataServer', dataGot => {\r\n      fetchListRoom(userData.id)\r\n      }) \r\n      socketRef.current.on('loadRoomServer', dataGot => {\r\n        fetchListRoom(userData.id)\r\n        }) \r\n      return () => {\r\n        socketRef.current.disconnect();\r\n      };\r\n    }\r\n   \r\n\r\n  },[])\r\n let handleClickRoom = (roomId)=>{\r\n  \r\n  socketRef.current.emit('loadRoomClient')\r\n    setselectedRoom(roomId)\r\n    \r\n }\r\n let fetchListRoom = async(userId) =>{\r\n  let res = await listRoomOfUser(userId)\r\n  if(res && res.errCode==0){\r\n    setdataRoom(res.data)\r\n  }\r\n}\r\n    return (\r\n\r\n        <div className=\"container\">\r\n        <div className=\"ks-page-content\">\r\n          <div className=\"ks-page-content-body\">\r\n            <div className=\"ks-messenger\">\r\n                 <MessageDisscution userId={dataUser.id} isAdmin={false} handleClickRoom={handleClickRoom} data={dataRoom}/>\r\n                 {selectedRoom ? <ChatWindow userId={dataUser.id} roomId={selectedRoom}  />\r\n                 :<div>\r\n                    <span className='title'>Chưa chọn phòng</span>\r\n                 </div> \r\n                }\r\n                \r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MessagePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}