[{"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\index.js":"1","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\reportWebVitals.js":"2","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\App.js":"3","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\Footer\\Footer.js":"4","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\store\\store.js":"5","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\utils\\constant.js":"6","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\reducer\\index.js":"7","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\reducer\\shopCartReducer.js":"8","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\Header\\Header.js":"9","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\Header\\TopMenu.js":"10","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\action\\ShopCartAction.js":"11","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\services\\userService.js":"12","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\axios.js":"13","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\Home\\HomePage.js":"14","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\HomeFeature\\MainFeature.js":"15","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\HomeFeature\\ProductFeature.js":"16","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\HomeFeature\\HomeBanner.js":"17","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\HomeFeature\\NewProductFeature.js":"18","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\HomeFeature\\HomeBlog.js":"19","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\HomeFeature\\HomeBlogItem.js":"20","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Content\\HeaderContent.js":"21","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\ItemProduct.js":"22","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\utils\\CommonUtils.js":"23","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\Shop\\ShopPage.js":"24","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Shop\\Category.js":"25","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Shop\\MainShop.js":"26","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Shop\\Pagination.js":"27","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Shop\\Brand.js":"28","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Search\\FormSearch.js":"29","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\DetailProduct\\DetailProductPage.js":"30","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\ProfileProduct.js":"31","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\InfoDetailProduct.js":"32","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\ImgDetailProduct.js":"33","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\ReviewProduct.js":"34","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\DescriptionProduct.js":"35","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\CommentProduct.js":"36","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\ReviewModal.js":"37","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\HomePageAdmin.js":"38","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Footer.js":"39","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Header.js":"40","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\SideBar.js":"41","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Home.js":"42","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\User\\ManageUser.js":"43","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\User\\Adduser.js":"44","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\User\\ChangePassword.js":"45","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Category\\ManageCategory.js":"46","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Category\\AddCategory.js":"47","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\User\\Information.js":"48","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ProductDetail\\AddProductDetail.js":"49","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ProductDetail\\EditProductDetail.js":"50","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\EditProduct.js":"51","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ManageProduct.js":"52","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Banner\\AddBanner.js":"53","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\AddProduct.js":"54","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ProductDetail\\ManageProductDetail.js":"55","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ProductImage\\ManageProductImage.js":"56","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Banner\\ManageBanner.js":"57","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\TypeShip\\ManageTypeShip.js":"58","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Brand\\ManageBrand.js":"59","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\TypeShip\\AddTypeShip.js":"60","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Subject\\ManageSubject.js":"61","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Voucher\\ManageTypeVoucher.js":"62","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Voucher\\AddTypeVoucher.js":"63","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Voucher\\ManageVoucher.js":"64","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Voucher\\AddVoucher.js":"65","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Message\\Message.js":"66","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Order\\DetailOrder.js":"67","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Supplier\\AddSupplier.js":"68","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Blog\\AddBlog.js":"69","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Brand\\AddBrand.js":"70","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Supplier\\ManageSupplier.js":"71","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Receipt\\AddReceipt.js":"72","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Order\\ManageOrder.js":"73","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Receipt\\ManageReceipt.js":"74","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Receipt\\DetailReceipt.js":"75","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Statistic\\Profit.js":"76","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Statistic\\Turnover.js":"77","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Statistic\\StockProduct.js":"78","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Blog\\ManageBlog.js":"79","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Subject\\AddSubject.js":"80","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\ShopCart\\ShopCartItem.js":"81","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ProductImage\\AddImageModal.js":"82","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ProductImage\\AddSizeModal.js":"83","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\input\\DatePicker.js":"84","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\utils\\KeyCodeUtils.js":"85"},{"size":615,"mtime":1701613285365,"results":"86","hashOfConfig":"87"},{"size":375,"mtime":1701613285368,"results":"88","hashOfConfig":"87"},{"size":1845,"mtime":1731097068499,"results":"89","hashOfConfig":"87"},{"size":2327,"mtime":1730383480373,"results":"90","hashOfConfig":"87"},{"size":1090,"mtime":1701613285741,"results":"91","hashOfConfig":"87"},{"size":1048,"mtime":1701613285744,"results":"92","hashOfConfig":"87"},{"size":636,"mtime":1701613285367,"results":"93","hashOfConfig":"87"},{"size":1584,"mtime":1701613285367,"results":"94","hashOfConfig":"87"},{"size":8328,"mtime":1730388797825,"results":"95","hashOfConfig":"87"},{"size":2578,"mtime":1701613285236,"results":"96","hashOfConfig":"87"},{"size":1930,"mtime":1731093671172,"results":"97","hashOfConfig":"87"},{"size":18700,"mtime":1731093675544,"results":"98","hashOfConfig":"87"},{"size":757,"mtime":1701613285188,"results":"99","hashOfConfig":"87"},{"size":3670,"mtime":1731094324918,"results":"100","hashOfConfig":"87"},{"size":1779,"mtime":1701613285202,"results":"101","hashOfConfig":"87"},{"size":1776,"mtime":1701613285203,"results":"102","hashOfConfig":"87"},{"size":1275,"mtime":1701613285199,"results":"103","hashOfConfig":"87"},{"size":1418,"mtime":1701613285203,"results":"104","hashOfConfig":"87"},{"size":891,"mtime":1701613285200,"results":"105","hashOfConfig":"87"},{"size":1332,"mtime":1701613285201,"results":"106","hashOfConfig":"87"},{"size":433,"mtime":1701613285197,"results":"107","hashOfConfig":"87"},{"size":1749,"mtime":1730386429879,"results":"108","hashOfConfig":"87"},{"size":996,"mtime":1701613285742,"results":"109","hashOfConfig":"87"},{"size":2787,"mtime":1701613285252,"results":"110","hashOfConfig":"87"},{"size":1789,"mtime":1731095579418,"results":"111","hashOfConfig":"87"},{"size":6504,"mtime":1730386436194,"results":"112","hashOfConfig":"87"},{"size":1007,"mtime":1701613285221,"results":"113","hashOfConfig":"87"},{"size":1744,"mtime":1701613285219,"results":"114","hashOfConfig":"87"},{"size":1115,"mtime":1701613285217,"results":"115","hashOfConfig":"87"},{"size":5425,"mtime":1701613285232,"results":"116","hashOfConfig":"87"},{"size":1707,"mtime":1701613285214,"results":"117","hashOfConfig":"87"},{"size":9718,"mtime":1701613285208,"results":"118","hashOfConfig":"87"},{"size":2223,"mtime":1701613285207,"results":"119","hashOfConfig":"87"},{"size":15241,"mtime":1701613285215,"results":"120","hashOfConfig":"87"},{"size":253,"mtime":1701613285206,"results":"121","hashOfConfig":"87"},{"size":3531,"mtime":1701613285205,"results":"122","hashOfConfig":"87"},{"size":2420,"mtime":1701613285215,"results":"123","hashOfConfig":"87"},{"size":11195,"mtime":1701613285278,"results":"124","hashOfConfig":"87"},{"size":460,"mtime":1730383493341,"results":"125","hashOfConfig":"87"},{"size":2162,"mtime":1701613285274,"results":"126","hashOfConfig":"87"},{"size":16556,"mtime":1701613285310,"results":"127","hashOfConfig":"87"},{"size":10262,"mtime":1701613285276,"results":"128","hashOfConfig":"87"},{"size":7083,"mtime":1701613285331,"results":"129","hashOfConfig":"87"},{"size":9780,"mtime":1701613285324,"results":"130","hashOfConfig":"87"},{"size":3634,"mtime":1701613285325,"results":"131","hashOfConfig":"87"},{"size":6926,"mtime":1701613285270,"results":"132","hashOfConfig":"87"},{"size":4025,"mtime":1701613285270,"results":"133","hashOfConfig":"87"},{"size":12836,"mtime":1716304935332,"results":"134","hashOfConfig":"87"},{"size":12381,"mtime":1716304934928,"results":"135","hashOfConfig":"87"},{"size":4359,"mtime":1701613285300,"results":"136","hashOfConfig":"87"},{"size":6858,"mtime":1701613285296,"results":"137","hashOfConfig":"87"},{"size":8821,"mtime":1701613285298,"results":"138","hashOfConfig":"87"},{"size":7552,"mtime":1716304935249,"results":"139","hashOfConfig":"87"},{"size":19468,"mtime":1716304935206,"results":"140","hashOfConfig":"87"},{"size":6294,"mtime":1701613285301,"results":"141","hashOfConfig":"87"},{"size":17226,"mtime":1701613285304,"results":"142","hashOfConfig":"87"},{"size":7469,"mtime":1701613285261,"results":"143","hashOfConfig":"87"},{"size":6666,"mtime":1701613285323,"results":"144","hashOfConfig":"87"},{"size":6742,"mtime":1701613285268,"results":"145","hashOfConfig":"87"},{"size":4033,"mtime":1701613285322,"results":"146","hashOfConfig":"87"},{"size":6686,"mtime":1701613285318,"results":"147","hashOfConfig":"87"},{"size":6576,"mtime":1701613285334,"results":"148","hashOfConfig":"87"},{"size":6192,"mtime":1701613285333,"results":"149","hashOfConfig":"87"},{"size":7059,"mtime":1701613285335,"results":"150","hashOfConfig":"87"},{"size":7937,"mtime":1701613285334,"results":"151","hashOfConfig":"87"},{"size":2534,"mtime":1701613285280,"results":"152","hashOfConfig":"87"},{"size":15060,"mtime":1701613285283,"results":"153","hashOfConfig":"87"},{"size":5349,"mtime":1701613285319,"results":"154","hashOfConfig":"87"},{"size":10848,"mtime":1716304934825,"results":"155","hashOfConfig":"87"},{"size":4024,"mtime":1701613285267,"results":"156","hashOfConfig":"87"},{"size":7049,"mtime":1701613285320,"results":"157","hashOfConfig":"87"},{"size":9304,"mtime":1701613285306,"results":"158","hashOfConfig":"87"},{"size":7287,"mtime":1701613285284,"results":"159","hashOfConfig":"87"},{"size":5669,"mtime":1701613285308,"results":"160","hashOfConfig":"87"},{"size":10481,"mtime":1701613285307,"results":"161","hashOfConfig":"87"},{"size":9902,"mtime":1730382852124,"results":"162","hashOfConfig":"87"},{"size":9539,"mtime":1730382852123,"results":"163","hashOfConfig":"87"},{"size":5554,"mtime":1701613285315,"results":"164","hashOfConfig":"87"},{"size":7673,"mtime":1701613285265,"results":"165","hashOfConfig":"87"},{"size":4026,"mtime":1701613285317,"results":"166","hashOfConfig":"87"},{"size":3644,"mtime":1730382852121,"results":"167","hashOfConfig":"87"},{"size":6212,"mtime":1716304934869,"results":"168","hashOfConfig":"87"},{"size":5474,"mtime":1701613285303,"results":"169","hashOfConfig":"87"},{"size":4979,"mtime":1701613285226,"results":"170","hashOfConfig":"87"},{"size":684,"mtime":1701613285742,"results":"171","hashOfConfig":"87"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},"hvatux",{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"177","messages":"178","errorCount":1,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":1,"source":"182","usedDeprecatedRules":"174"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"174"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"174"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"174"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"174"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"174"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"174"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"174"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"174"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"174"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"174"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"174"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"174"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"174"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":18,"source":"258"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":2,"source":"266"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":18,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":"294"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":13,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":15,"source":"300"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":5,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":9,"source":"306"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":13,"source":"312"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":26,"source":"315"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":"333"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":9,"source":"342"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":18,"source":"348"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":8,"source":"357"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":22,"source":"360"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":"363"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":3,"source":"369"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":3,"source":"378"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":"393"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":16,"source":"398"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":16,"source":"401"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\index.js",[],["406","407"],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\reportWebVitals.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\App.js",["408","409","410","411","412","413"],"import React, { Component, Fragment, useEffect, useState } from 'react';\r\nimport './css/App.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Header from './container/Header/Header';\r\nimport Footer from './container/Footer/Footer';\r\nimport HomePage from './container/Home/HomePage';\r\nimport ShopPage from './container/Shop/ShopPage';\r\nimport DetailProductPage from './container/DetailProduct/DetailProductPage';\r\nimport HomePageAdmin from './container/System/HomePageAdmin';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <div className=\"App\">\r\n          <Route exact path=\"/\">\r\n            <Header />\r\n            <HomePage />\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/shop\">\r\n            <Header />\r\n            <ShopPage />\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/detail-product/:id\">\r\n            <Header />\r\n            <DetailProductPage />\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/admin/\" render={() => {\r\n            if (JSON.parse(localStorage.getItem(\"userData\")) && (JSON.parse(localStorage.getItem(\"userData\")).roleId === \"R1\" || JSON.parse(localStorage.getItem(\"userData\")).roleId === \"R4\")) {\r\n              return <HomePageAdmin />\r\n            } else return <Redirect to={\"/login\"} />\r\n\r\n          }}>\r\n          </Route>\r\n          <ToastContainer\r\n            position=\"top-right\"\r\n            autoClose={4000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n        </div>\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\Footer\\Footer.js",["414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431"],"import React from 'react';\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <div>\r\n      <footer className=\"footer-area section_gap\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-2 col-md-6 single-footer-widget\">\r\n              <h4>Top Products</h4>\r\n              <ul>\r\n                <li><a href=\"#\">Managed Website</a></li>\r\n                <li><a href=\"#\">Manage Reputation</a></li>\r\n                <li><a href=\"#\">Power Tools</a></li>\r\n                <li><a href=\"#\">Marketing Service</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-lg-2 col-md-6 single-footer-widget\">\r\n              <h4>Quick Links</h4>\r\n              <ul>\r\n                <li><a href=\"#\">Jobs</a></li>\r\n                <li><a href=\"#\">Brand Assets</a></li>\r\n                <li><a href=\"#\">Investor Relations</a></li>\r\n                <li><a href=\"#\">Terms of Service</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-lg-2 col-md-6 single-footer-widget\">\r\n              <h4>Features</h4>\r\n              <ul>\r\n                <li><a href=\"#\">Jobs</a></li>\r\n                <li><a href=\"#\">Brand Assets</a></li>\r\n                <li><a href=\"#\">Investor Relations</a></li>\r\n                <li><a href=\"#\">Terms of Service</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-lg-2 col-md-6 single-footer-widget\">\r\n              <h4>Resources</h4>\r\n              <ul>\r\n                <li><a href=\"#\">Guides</a></li>\r\n                <li><a href=\"#\">Research</a></li>\r\n                <li><a href=\"#\">Experts</a></li>\r\n                <li><a href=\"#\">Agencies</a></li>\r\n              </ul>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"footer-bottom row align-items-center\">\r\n            <p className=\"footer-text m-0 col-lg-8 col-md-12\">{/* Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. */}\r\n               Đồ án tốt nghiệp <i className=\"fa fa-heart-o\" aria-hidden=\"true\" />  <a href=\"https://colorlib.com\" target=\"_blank\"></a>\r\n              {/* Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. */}</p>\r\n\r\n          </div>\r\n        </div>\r\n      </footer>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\store\\store.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\utils\\constant.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\reducer\\index.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\reducer\\shopCartReducer.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\Header\\Header.js",["432","433","434","435"],"import React from 'react';\r\nimport Logo from '../../resources/img/padora.png';\r\nimport { useEffect, useState,useRef } from 'react';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getItemCartStart } from '../../action/ShopCartAction'\r\nimport {listRoomOfUser} from '../../services/userService';\r\nimport './Header.scss';\r\nimport TopMenu from './TopMenu';\r\nimport socketIOClient from \"socket.io-client\";\r\nrequire('dotenv').config();\r\nconst Header = props => {\r\n    const [quantityMessage, setquantityMessage] = useState('')\r\n    const [user, setUser] = useState({})\r\n    const dispatch = useDispatch()\r\n    let dataCart = useSelector(state => state.shopcart.listCartItem)\r\n    const host = process.env.REACT_APP_BACKEND_URL;\r\n    const socketRef = useRef();\r\n    const [id, setId] = useState();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        socketRef.current = socketIOClient.connect(host)\r\n        const userData = JSON.parse(localStorage.getItem('userData'));\r\n        setUser(userData)\r\n        if (userData) {\r\n            dispatch(getItemCartStart(userData.id))\r\n            socketRef.current.on('getId', data => {\r\n                setId(data)\r\n              }) // phần này đơn giản để gán id cho mỗi phiên kết nối vào page. Mục đích chính là để phân biệt đoạn nào là của mình đang chat.\r\n            fetchListRoom(userData.id)\r\n    \r\n            socketRef.current.on('sendDataServer', dataGot => {\r\n               \r\n                fetchListRoom(userData.id)\r\n    \r\n                })  \r\n             socketRef.current.on('loadRoomServer', dataGot => {\r\n                    \r\n                    fetchListRoom(userData.id)\r\n        \r\n                    })  \r\n              return () => {\r\n                socketRef.current.disconnect();\r\n              };\r\n        }\r\n       \r\n    }, [])\r\n    let scrollHeader = () => {\r\n        window.addEventListener(\"scroll\", function () {\r\n            var header = document.querySelector(\".main_menu\");\r\n            if (header) {\r\n                header.classList.toggle(\"sticky\", window.scrollY > 0)\r\n            }\r\n        })\r\n    }\r\n    let fetchListRoom = async(userId) =>{\r\n        let res = await listRoomOfUser(userId)\r\n        if(res && res.errCode ==0 ){\r\n          \r\n            let count = 0;\r\n            if(res.data && res.data.length> 0 && res.data[0].messageData && res.data[0].messageData.length > 0){\r\n                res.data[0].messageData.forEach((item) =>{\r\n                    if(item.unRead === 1 && item.userId !== userId) count = count +1;\r\n                  })\r\n            }\r\n           \r\n            setquantityMessage(count)\r\n        }\r\n       \r\n      }\r\n    scrollHeader()\r\n\r\n    return (\r\n\r\n        < header className=\"header_area\" >\r\n            <TopMenu user={user && user} />\r\n            <div className=\"main_menu\">\r\n                <div className=\"container\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light w-100\">\r\n                        {/* Brand and toggle get grouped for better mobile display */}\r\n                        <NavLink to=\"/\" className=\"navbar-brand logo_h\">\r\n                            <img style={{ width: 150 }} src={Logo} alt=\"\" />\r\n                        </NavLink>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                            data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"icon-bar\" />\r\n                            <span className=\"icon-bar\" />\r\n                            <span className=\"icon-bar\" />\r\n                        </button>\r\n                        {/* Collect the nav links, forms, and other content for toggling */}\r\n                        <div className=\"collapse navbar-collapse offset w-100\" id=\"navbarSupportedContent\">\r\n                            <div className=\"row w-100 mr-0\">\r\n                                <div className=\"col-lg-9 pr-0\">\r\n                                    <ul className=\"nav navbar-nav center_nav pull-right\">\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink exact to=\"/\" className=\"nav-link\"\r\n                                                activeClassName=\"selected\" activeStyle={{ color: '#FFC0CB' }}>\r\n                                                Trang chủ\r\n                                            </NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item \">\r\n                                            <NavLink to=\"/shop\" className=\"nav-link\"\r\n                                                activeClassName=\"selected\" activeStyle={{ color: '#FFC0CB' }}>\r\n                                                Cửa hàng\r\n                                            </NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item \">\r\n                                            <NavLink to=\"/blog\" className=\"nav-link\"\r\n                                                activeClassName=\"selected\" activeStyle={{ color: '#FFC0CB' }}>\r\n                                                Tin tức\r\n                                            </NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink to=\"/voucher\" className=\"nav-link\"\r\n                                                activeClassName=\"selected\" activeStyle={{ color: '#FFC0CB' }}>\r\n                                                Giảm giá\r\n                                            </NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink to=\"/about\" className=\"nav-link\" activeClassName=\"selected\" activeStyle={{ color: '#FFC0CB' }}>\r\n                                            Giới thiệu\r\n                                            </NavLink>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"col-lg-3 pr-0\">\r\n                                    <ul className=\"nav navbar-nav navbar-right right_nav pull-right\">\r\n                                        <li className=\"nav-item\">\r\n                                        <Link to={\"/user/messenger\"} className=\"icons\">\r\n                                            <i class=\"fa-brands fa-facebook-messenger\"></i>\r\n                                            </Link>\r\n                                            {quantityMessage>0 && \r\n                                             <span className=\"box-message-quantity\">{quantityMessage}</span>\r\n                                            }\r\n                                           \r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={\"/shopcart\"} className=\"icons\">\r\n                                                <i className=\"ti-shopping-cart\" />\r\n\r\n                                            </Link>\r\n                                            <span className=\"box-quantity-cart\">{dataCart && dataCart.length}</span>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <Link to={`/user/detail/${user && user.id ? user.id : ''}`} className=\"icons\">\r\n                                                <i className=\"ti-user\" aria-hidden=\"true\" />\r\n                                            </Link>\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </header >\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\Header\\TopMenu.js",["436","437","438","439","440","441"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\nimport './Header.scss';\r\nconst TopMenu = props => {\r\n    let history = useHistory();\r\n\r\n    let handleLogout = () => {\r\n        localStorage.removeItem(\"userData\");\r\n        localStorage.removeItem(\"token\");\r\n        window.location.href = '/login'\r\n\r\n    }\r\n\r\n\r\n    let name = props.user && props.user.id ? `${props.user && props.user.firstName ? props.user.firstName : ''} ${props.user.lastName}` : ''\r\n    return (\r\n\r\n\r\n        <div className=\"top_menu\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-7\">\r\n                        <div className=\"float-left\">\r\n                            <p>Điện thoại: 0762216048 </p>\r\n                            <p>email: ptitshop@gmail.com</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-5\">\r\n                        <div className=\"float-right\">\r\n                            <ul className=\"right_side\">\r\n                                <li>\r\n                                    {props.user && props.user.id ? <NavLink exact to={`/user/detail/${props.user && props.user.id ? props.user.id : ''}`}>\r\n                                        {name}\r\n                                    </NavLink>\r\n                                        :\r\n                                        <a href=\"/login\">\r\n                                            Đăng nhập\r\n                                        </a>\r\n                                    }\r\n\r\n                                </li>\r\n                                <li style={{ cursor: 'pointer' }}>\r\n\r\n                                    {props.user && props.user.id ? <a onClick={() => handleLogout()}>\r\n                                        Đăng xuất\r\n                                    </a>\r\n                                        :\r\n                                        <a href=\"/login\">\r\n                                            Đăng ký\r\n                                        </a>\r\n                                    }\r\n                                </li>\r\n                                <li>\r\n                                    <a>VI</a>\r\n                                </li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default TopMenu;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\action\\ShopCartAction.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\services\\userService.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\axios.js",["442","443"],"import axios from \"axios\";\r\nimport _ from \"lodash\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n\r\n    //  withCredentials: true\r\n});\r\nif (localStorage.getItem(\"token\")) {\r\n    instance.interceptors.request.use(\r\n        (config) => {\r\n            config.headers.authorization =\r\n                \"Bearer \" + localStorage.getItem(\"token\").replaceAll('\"', \"\");\r\n\r\n            return config;\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error);\r\n        }\r\n    );\r\n}\r\n\r\ninstance.interceptors.response.use((response) => {\r\n    // Thrown error for request with OK status code\r\n    const { data } = response;\r\n    return response.data;\r\n});\r\n\r\nexport default instance;\r\n","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\Home\\HomePage.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\HomeFeature\\MainFeature.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\HomeFeature\\ProductFeature.js",["444","445","446"],"import React, { useEffect, useState } from 'react';\r\nimport ItemProduct from '../Product/ItemProduct';\r\nimport HeaderContent from '../Content/HeaderContent';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './ProductFeature.scss';\r\nimport { getProductFeatureService } from '../../services/userService';\r\nfunction ProductFeature(props) {\r\n    let settings = {\r\n        dots: false,\r\n        Infinity: false,\r\n        speed: 500,\r\n        slidesToShow: 4,\r\n        slidesToScroll: 1,\r\n    }\r\n\r\n    return (\r\n\r\n        <section className=\"feature_product_area section_gap_bottom_custom\">\r\n            <div className=\"container\">\r\n                <HeaderContent mainContent={props.title}\r\n                    infoContent=\"Bạn sẽ không thất vọng khi lựa chọn\"> </HeaderContent>\r\n\r\n                <div className=\"row box-productFeature\">\r\n                    <Slider {...settings}>\r\n                        {props.data && props.data.length > 3 &&\r\n                            props.data.map((item, index) => {\r\n                                return (\r\n                                    <ItemProduct id={item.id} key={index} width={350} height={419} type=\"col-lg-4 col-md-6\" name={item.name} img={item.productDetail[0].productImage[0].image}\r\n                                        price={item.productDetail[0].originalPrice} discountPrice={item.productDetail[0].discountPrice}>\r\n                                    </ItemProduct>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n\r\n                    </Slider>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </section>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ProductFeature;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\HomeFeature\\HomeBanner.js",["447","448"],"import React, { useEffect, useState } from 'react';\r\n\r\n\r\nimport './HomeBanner.scss';\r\nimport { Link } from 'react-router-dom';\r\nfunction HomeBanner(props) {\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"home_banner_area mb-40\" >\r\n            {/* class home_banner_area trong file style.css chứa background banner  */}\r\n            <div className=\"box-banner\" style={{ backgroundImage: `url(${props.image})`,backgroundPosition:'center' }}>\r\n                <div className=\"banner_inner d-flex align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"banner_content row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <p className=\"sub text-uppercase\">{props.name}</p>\r\n                                <h3><span>Show</span> Your <br />Personal <span>Style</span></h3>\r\n                                <h4>Hãy đến với cửa hàng chúng tôi</h4>\r\n                                <Link className=\"main_btn mt-40\" to={\"/shop\"}>Đến cửa hàng ngay</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default HomeBanner;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\HomeFeature\\NewProductFeature.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\HomeFeature\\HomeBlog.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\HomeFeature\\HomeBlogItem.js",["449","450","451"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction HomeBlogItem(props) {\r\n    return (\r\n        <div className=\"col-lg-4 col-md-6\">\r\n            <div className=\"single-blog\">\r\n                <div className=\"thumb\">\r\n                    <img style={{width:'350px', height:'243px', objectFit:'cover', cursor:'pointer'}} className=\"img-fluid\" src={props.data.image} alt=\"\" />\r\n                </div>\r\n                <div className=\"short_details\">\r\n                    <div className=\"meta-top d-flex\">\r\n                        <a >{props.data.userData.firstName +\" \"+props.data.userData.lastName}</a>\r\n                        <a ><i className=\"ti-comments-smiley\" />{props.data.commentData.length} Bình luận</a>\r\n                    </div>\r\n                    <Link className=\"d-block\" to={`/blog-detail/${props.data.id}`}>\r\n                        <h4>{props.data.title}</h4>\r\n                    </Link>\r\n                    <div className=\"text-wrap\">\r\n                        <p>\r\n                            {props.data.description}\r\n                        </p>\r\n                    </div>\r\n                    <a  className=\"blog_btn\">Xem thêm<span className=\"ml-2 ti-arrow-right\" /></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeBlogItem;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Content\\HeaderContent.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\ItemProduct.js",["452","453","454","455","456","457"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addItemCartStart } from '../../action/ShopCartAction';\r\nimport CommonUtils from '../../utils/CommonUtils';\r\nimport './ItemProduct.scss';\r\n// độ phân giải ảnh có thể làm vỡ layout\r\nfunction ItemProduct(props) {\r\n\r\n\r\n    return (\r\n        <div className={props.type}>\r\n            <div style={{ cursor: 'pointer' }} className=\"single-product\">\r\n                <Link to={`/detail-product/${props.id}`}>\r\n                    <div style={{ width: props.width, height: props.height }} className=\"product-img\">\r\n                        <img className=\"img-fluid w-100\" src={props.img} alt=\"\" />\r\n                        <div className=\"p_icon\">\r\n                            <a >\r\n                                <i className=\"ti-eye\" />\r\n                            </a>\r\n                            <a >\r\n                                <i className=\"ti-shopping-cart\" />\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ width: props.width, height: '99px' }} className=\"product-btm\">\r\n                        <a className=\"d-block\">\r\n                            <h4 >{props.name}</h4>\r\n                        </a>\r\n                        <div className=\"mt-3\">\r\n                            <span className=\"mr-4\">{CommonUtils.formatter.format(props.discountPrice)}</span>\r\n                            <del>{CommonUtils.formatter.format(props.price)}</del>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItemProduct;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\utils\\CommonUtils.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\Shop\\ShopPage.js",["458","459","460","461","462"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport MainShop from '../../component/Shop/MainShop';\r\nimport Category from '../../component/Shop/Category';\r\nimport Brand from '../../component/Shop/Brand';\r\nimport Pagination from '../../component/Shop/Pagination';\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nfunction ShopPage(props) {\r\n\r\n    useEffect(async () => {\r\n        window.scrollTo(0, 0);\r\n    }, [])\r\n\r\n\r\n    const [categoryId, setcategoryId] = useState('')\r\n    const [brandId, setbrandId] = useState('')\r\n    const myRef = useRef(null)\r\n    let handleRecevieDataCategory = (code) => {\r\n        setcategoryId(code)\r\n    }\r\n    let handleRecevieDataBrand = (code) => {\r\n\r\n        setbrandId(code)\r\n    }\r\n    return (\r\n        <div>\r\n            <section ref={myRef} className=\"banner_area\">\r\n                <div className=\"banner_inner d-flex align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"banner_content d-md-flex justify-content-between align-items-center\">\r\n                            <div className=\"mb-3 mb-md-0\">\r\n                                <h2>Danh mục cửa hàng</h2>\r\n                                <p>Hãy lựa chọn sản phẩm phù hợp cho chính mình</p>\r\n                            </div>\r\n                            <div className=\"page_link\">\r\n                                <Link to={\"/\"}>Trang chủ</Link>\r\n                                <Link to={\"/shop\"}>Cửa hàng</Link>\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"cat_product_area section_gap\">\r\n                <div className=\"container\">\r\n                    <div className=\"row flex-row-reverse\">\r\n                        <MainShop categoryId={categoryId} brandId={brandId} myRef={myRef} />\r\n                        <div className=\"col-lg-3\">\r\n                            <div className=\"left_sidebar_area\">\r\n                                <Category handleRecevieDataCategory={handleRecevieDataCategory} />\r\n                                <Brand handleRecevieDataBrand={handleRecevieDataBrand} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <Pagination amountPage={3}\r\n                        myFunction={{ changePage: handleChangePage, changePerPage: handleChangePage }}></Pagination> */}\r\n                </div>\r\n\r\n            </section>\r\n            {/* <Footer /> */}\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ShopPage;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Shop\\Category.js",["463"],"import React, { useState, useEffect } from 'react';\r\nimport { getAllCodeService } from '../../services/userService';\r\nfunction Category(props) {\r\n\r\n\r\n    const [arrCategory, setarrCategory] = useState([])\r\n    const [activeLinkId, setactiveLinkId] = useState('')\r\n\r\n    useEffect(() => {\r\n        let fetchCategory = async () => {\r\n            let arrData = await getAllCodeService('CATEGORY')\r\n            if (arrData && arrData.errCode === 0) {\r\n                arrData.data.unshift({\r\n                    createdAt: null,\r\n                    code: 'ALL',\r\n                    type: \"CATEGORY\",\r\n                    value: \"Tất cả\",\r\n                })\r\n                setarrCategory(arrData.data)\r\n            }\r\n        }\r\n        fetchCategory()\r\n    }, [])\r\n    let handleClickCategory = (code) => {\r\n        props.handleRecevieDataCategory(code)\r\n        setactiveLinkId(code)\r\n    }\r\n\r\n    return (\r\n\r\n        <aside className=\"left_widgets p_filter_widgets\">\r\n            <div className=\"l_w_title\">\r\n                <h3>Các danh mục</h3>\r\n            </div>\r\n            <div className=\"widgets_inner\">\r\n                <ul className=\"list\">\r\n\r\n                    {arrCategory && arrCategory.length > 0 &&\r\n                        arrCategory.map((item, index) => {\r\n                            return (\r\n                                <li className={item.code === activeLinkId ? 'active' : ''} style={{ cursor: 'pointer' }} onClick={() => handleClickCategory(item.code)} key={index}>\r\n                                    <a>{item.value}</a>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n\r\n                </ul>\r\n            </div>\r\n        </aside>\r\n\r\n    );\r\n}\r\n\r\nexport default Category;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Shop\\MainShop.js",["464","465","466"],"import React, { useState, useEffect } from 'react';\r\nimport ItemProduct from '../Product/ItemProduct';\r\nimport { getAllProductUser } from '../../services/userService';\r\nimport { PAGINATION } from '../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport FormSearch from '../Search/FormSearch';\r\nfunction MainShop(props) {\r\n\r\n    const [dataProduct, setdataProduct] = useState([])\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    const [limitPage, setlimitPage] = useState(PAGINATION.pagerow)\r\n    const [sortPrice, setsortPrice] = useState('')\r\n    const [sortName, setsortName] = useState('')\r\n    const [offset, setoffset] = useState(0)\r\n    const [categoryId, setcategoryId] = useState('')\r\n    const [brandId, setbrandId] = useState('')\r\n    const [keyword, setkeyword] = useState('')\r\n    useEffect(() => {\r\n\r\n      \r\n         loadProduct(limitPage, sortName, sortPrice, offset, categoryId,keyword)\r\n    \r\n    }, [])\r\n    useEffect(() => {\r\n        setcategoryId(props.categoryId)\r\n        setbrandId(props.brandId)\r\n        let fetchCategory = async () => {\r\n\r\n            let arrData = await getAllProductUser({\r\n\r\n                sortPrice: sortPrice,\r\n                sortName: sortName,\r\n                limit: limitPage,\r\n                offset: offset,\r\n                categoryId: props.categoryId,\r\n                brandId: props.brandId,\r\n                 keyword:keyword\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataProduct(arrData.data)\r\n                setCount(Math.ceil(arrData.count / limitPage))\r\n            }\r\n        }\r\n        fetchCategory()\r\n\r\n    }, [props.categoryId, props.brandId])\r\n\r\n\r\n    let loadProduct = async (limitPage, sortName, sortPrice, offset, categoryId,keyword) => {\r\n        let arrData = await getAllProductUser({\r\n\r\n            sortPrice: sortPrice,\r\n            sortName: sortName,\r\n            limit: limitPage,\r\n            offset: offset,\r\n            categoryId: categoryId,\r\n            brandId: brandId,\r\n            keyword:keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataProduct(arrData.data)\r\n            setCount(Math.ceil(arrData.count / limitPage))\r\n        }\r\n    }\r\n    let handleSelectLimitPage = async (event) => {\r\n\r\n         setlimitPage(event.target.value)\r\n         loadProduct(event.target.value, sortName, sortPrice, offset, categoryId,keyword)\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        loadProduct(limitPage, sortName, sortPrice, number.selected * limitPage, categoryId,keyword)\r\n        setoffset(number.selected * limitPage)\r\n        props.myRef.current.scrollIntoView()\r\n\r\n    }\r\n    let handleSelectSort = async (event) => {\r\n        let value = +event.target.value\r\n\r\n        if (value === 1) {\r\n            loadProduct(limitPage, '', '', offset, categoryId,keyword)\r\n\r\n        }\r\n        else if (value === 2) {\r\n            loadProduct(limitPage, '', true, offset, categoryId,keyword)\r\n            setsortPrice(true)\r\n            setsortName('')\r\n        }\r\n        else if (value === 3) {\r\n            loadProduct(limitPage, true, '', offset, categoryId,keyword)\r\n            setsortPrice('')\r\n            setsortName(true)\r\n        }\r\n    }\r\n    let handleSearch = (keyword) =>{\r\n       \r\n        loadProduct(limitPage, sortName, sortPrice, offset, categoryId,keyword)\r\n        setkeyword(keyword)\r\n    }\r\n    let handleOnchangeSearch = (keyword) =>{\r\n        if(keyword === ''){\r\n            loadProduct(limitPage, sortName, sortPrice, offset, categoryId,keyword)\r\n            setkeyword(keyword)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"col-lg-9\">\r\n            <div className=\"product_top_bar\">\r\n                <div className=\"left_dorp\">\r\n                    <select style={{ outline: 'none' }} onChange={(event) => handleSelectSort(event)} className=\"sorting\">\r\n                        <option value={1}>Sắp xếp</option>\r\n                        <option value={2}>Theo giá tiền</option>\r\n                        <option value={3}>Theo tên</option>\r\n                    </select>\r\n                    <select style={{ outline: 'none' }} onChange={(event) => handleSelectLimitPage(event)} className=\"show\">\r\n                        <option value={6}>Hiển thị 6</option>\r\n                        <option value={12}>Hiển thị 12</option>\r\n                        <option value={18}>Hiển thị 18</option>\r\n                    </select>\r\n                    <div style={{display:'inline-block',marginLeft:'10px',width:'300px'}}>\r\n                    <FormSearch title={\"tên tên quần áo\"} handleOnchange={handleOnchangeSearch} handleSearch={handleSearch} />\r\n                    </div>\r\n                    \r\n                    \r\n                   \r\n                </div>\r\n                \r\n            </div>\r\n            <div style={{ marginBottom: '10px' }} className=\"latest_product_inner\">\r\n                <div className=\"row\">\r\n                    {dataProduct && dataProduct.length > 0 &&\r\n                        dataProduct.map((item, index) => {\r\n                            return (\r\n                                <ItemProduct id={item.id} width={\"255px\"} height={\"254px\"} type=\"col-lg-4 col-md-6\" name={item.name} img={item.productDetail[0].productImage[0].image}\r\n                                    discountPrice={item.productDetail[0].discountPrice} price={item.productDetail[0].originalPrice}></ItemProduct>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'Quay lại'}\r\n                nextLabel={'Tiếp'}\r\n                breakLabel={'...'}\r\n                pageCount={count}\r\n                marginPagesDisplayed={3}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                activeClassName={\"active\"}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainShop;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Shop\\Pagination.js",["467","468","469"],"import React from 'react';\r\n\r\nfunction Pagination(props) {\r\n    var item = [];\r\n    for (var i = 0; i < props.amountPage; i++) {\r\n        item.push(<li className=\"page-item\" key= {i+1}><a className=\"page-link\" href=\"#\">{i+1}</a></li>);\r\n    }\r\n    return (\r\n        <nav aria-label=\"Page navigation example\" style={{ marginTop: '50px', }}>\r\n            <ul className=\"pagination justify-content-center\" style={{ marginLeft: '70%', }}>\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n                        <span aria-hidden=\"true\">&laquo;</span>\r\n                    </a>\r\n                </li>\r\n                {item}\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                        <span aria-hidden=\"true\">&raquo;</span>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n   \r\n}\r\n\r\nexport default Pagination;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Shop\\Brand.js",["470"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { getAllCodeService } from '../../services/userService';\r\nfunction Brand(props) {\r\n\r\n\r\n    const [activeLinkId, setactiveLinkId] = useState('')\r\n    const [arrBrand, setarrBrand] = useState([])\r\n    let handleClickBrand = (code) => {\r\n        props.handleRecevieDataBrand(code)\r\n        setactiveLinkId(code)\r\n    }\r\n    useEffect(() => {\r\n        let fetchBrand = async () => {\r\n            let arrData = await getAllCodeService('BRAND')\r\n            if (arrData && arrData.errCode === 0) {\r\n                arrData.data.unshift({\r\n                    createdAt: null,\r\n                    code: \"ALL\",\r\n                    type: \"BRAND\",\r\n                    value: \"Tất cả\",\r\n                })\r\n                setarrBrand(arrData.data)\r\n            }\r\n        }\r\n        fetchBrand()\r\n    }, [])\r\n    return (\r\n\r\n        <aside className=\"left_widgets p_filter_widgets\">\r\n            <div className=\"l_w_title\">\r\n                <h3>Các thương hiệu</h3>\r\n            </div>\r\n            <div className=\"widgets_inner\">\r\n                <ul className=\"list\">\r\n                    {arrBrand && arrBrand.length > 0 &&\r\n                        arrBrand.map((item, index) => {\r\n                            return (\r\n                                <li className={item.code === activeLinkId ? 'active' : ''} style={{ cursor: 'pointer' }} onClick={() => handleClickBrand(item.code)} key={index}>\r\n                                    <a >{item.value}</a>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n        </aside>\r\n\r\n    );\r\n}\r\n\r\nexport default Brand;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Search\\FormSearch.js",["471","472","473"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { useParams } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst FormSearch = (props) => {\r\n    const [keyword, setkeyword] = useState('')\r\n\r\n    let handleSearchProduct = () =>{\r\n        props.handleSearch(keyword)\r\n    }\r\n    let handleOnchange = (keyword)=>{\r\n        setkeyword(keyword)\r\n        props.handleOnchange(keyword)\r\n    }\r\n\r\n\r\n    return (\r\n        <form   >\r\n        <div className=\"form-group\">\r\n            <div className=\"input-group mb-3\">\r\n                <input onChange={(e) => handleOnchange(e.target.value)} value={keyword} type=\"text\" className=\"form-control\" placeholder={`Tìm kiếm theo ${props.title}`} />\r\n                <div className=\"input-group-append\">\r\n                    <button onClick={() =>handleSearchProduct()}  className=\"btn\" type=\"button\"><i className=\"ti-search\" /></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        </form>\r\n    )\r\n}\r\nexport default FormSearch;\r\n\r\n\r\n\r\n","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\DetailProduct\\DetailProductPage.js",["474","475","476","477","478"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getDetailProductByIdService, getProductRecommendService } from '../../services/userService';\r\nimport ImgDetailProduct from '../../component/Product/ImgDetailProduct';\r\nimport InfoDetailProduct from '../../component/Product/InfoDetailProduct';\r\nimport CommentProduct from '../../component/Product/CommentProduct';\r\nimport ProfileProduct from '../../component/Product/ProfileProduct';\r\nimport ReviewProduct from '../../component/Product/ReviewProduct';\r\nimport DescriptionProduct from '../../component/Product/DescriptionProduct';\r\nimport NewProductFeature from \"../../component/HomeFeature/NewProductFeature\"\r\nimport ProductFeature from '../../component/HomeFeature/ProductFeature';\r\nfunction DetailProductPage(props) {\r\n    const [dataProduct, setDataProduct] = useState({})\r\n    const [dataDetailSize, setdataDetailSize] = useState({})\r\n    const { id } = useParams();\r\n    const [user, setUser] = useState({})\r\n    const [dataProductRecommend, setdataProductRecommend] = useState([])\r\n    useEffect(async () => {\r\n\r\n        const userData = JSON.parse(localStorage.getItem('userData'));\r\n        if (userData) {\r\n            fetchProductFeature(userData.id)\r\n            setUser(userData)\r\n        }\r\n\r\n        window.scrollTo(0, 0);\r\n\r\n\r\n        fetchDetailProduct()\r\n\r\n\r\n    }, [])\r\n    let sendDataFromInforDetail = (data) => {\r\n        setdataDetailSize(data)\r\n    }\r\n    let fetchDetailProduct = async () => {\r\n        let res = await getDetailProductByIdService(id)\r\n        if (res && res.errCode === 0) {\r\n            setDataProduct(res.data)\r\n        }\r\n    }\r\n    let fetchProductFeature = async (userId) => {\r\n        let res = await getProductRecommendService({\r\n            limit: 20,\r\n            userId: userId\r\n        })\r\n        if (res && res.errCode === 0) {\r\n            setdataProductRecommend(res.data)\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <section className=\"banner_area\">\r\n                <div className=\"banner_inner d-flex align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"banner_content d-md-flex justify-content-between align-items-center\">\r\n                            <div className=\"mb-3 mb-md-0\">\r\n                                <h2>Chi tiết sản phẩm</h2>\r\n                                <p>\r\n                                    Thông số chi tiết về sản phẩm\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"page_link\">\r\n                                <Link to={\"/\"}>Trang chủ</Link>\r\n                                <Link to={\"/shop\"}>Cửa hàng</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <div className=\"product_image_area\">\r\n                <div className=\"container\">\r\n\r\n                    <InfoDetailProduct userId={user && user.id ? user.id : ''} dataProduct={dataProduct} sendDataFromInforDetail={sendDataFromInforDetail} > </InfoDetailProduct>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <section className=\"product_description_area\">\r\n                <div className=\"container\">\r\n                    <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" id=\"profile-tab\" data-toggle=\"tab\" href=\"#profile\"\r\n                                role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Thông số chi tiết</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link \" id=\"home-tab\" data-toggle=\"tab\" href=\"#home\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Mô tả chi tiết</a>\r\n                        </li>\r\n\r\n\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" id=\"review-tab\" data-toggle=\"tab\" href=\"#review\"\r\n                                role=\"tab\" aria-controls=\"review\" aria-selected=\"false\">Đánh giá</a>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    <div className=\"tab-content\" id=\"myTabContent\">\r\n                        <div className=\"tab-pane fade show active\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\r\n\r\n                            < ProfileProduct data={dataDetailSize} />\r\n\r\n                        </div>\r\n                        <div className=\"tab-pane fade \" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\r\n                            <DescriptionProduct data={dataProduct.contentHTML} />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"tab-pane fade\" id=\"review\" role=\"tabpanel\" aria-labelledby=\"review-tab\">\r\n                            <ReviewProduct />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                {user && dataProductRecommend && dataProductRecommend.length > 0 &&\r\n                    <ProductFeature title={\"Sản phẩm bạn quan tâm\"} data={dataProductRecommend}></ProductFeature>\r\n\r\n                }\r\n            </section>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default DetailProductPage;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\ProfileProduct.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\InfoDetailProduct.js",["479","480","481","482","483","484","485"],"import React, { useEffect, useState } from 'react';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { addItemCartStart } from '../../action/ShopCartAction';\r\nimport './InfoDetailProduct.scss';\r\nimport CommonUtils from '../../utils/CommonUtils';\r\nfunction InfoDetailProduct(props) {\r\n    let { dataProduct } = props\r\n    let [arrDetail, setarrDetail] = useState([])\r\n    const [productDetail, setproductDetail] = useState([])\r\n    const [isOpen, setisOpen] = useState(false)\r\n    const [imgPreview, setimgPreview] = useState('')\r\n    const [activeLinkId, setactiveLinkId] = useState('')\r\n    const [quantity, setquantity] = useState('')\r\n    const [quantityProduct, setquantityProduct] = useState(1)\r\n    useEffect(() => {\r\n\r\n        let { productDetail } = dataProduct ? dataProduct : []\r\n\r\n        if (productDetail) {\r\n            setproductDetail(productDetail)\r\n\r\n            setarrDetail(productDetail[0])\r\n            setactiveLinkId(productDetail[0].productDetailSize[0].id)\r\n            setquantity(productDetail[0].productDetailSize[0].stock)\r\n\r\n            props.sendDataFromInforDetail(productDetail[0].productDetailSize[0])\r\n        }\r\n    }, [props.dataProduct])\r\n\r\n    let handleSelectDetail = (event) => {\r\n        setarrDetail(productDetail[event.target.value])\r\n        if (productDetail[event.target.value] && productDetail[event.target.value].productDetailSize.length > 0) {\r\n            setactiveLinkId(productDetail[event.target.value].productDetailSize[0].id)\r\n            setquantity(productDetail[event.target.value].productDetailSize[0].stock)\r\n            props.sendDataFromInforDetail(productDetail[event.target.value].productDetailSize[0])\r\n        }\r\n\r\n    }\r\n    let openPreviewImage = (url) => {\r\n\r\n\r\n        setimgPreview(url);\r\n        setisOpen(true);\r\n\r\n    }\r\n    let handleClickBoxSize = (data) => {\r\n\r\n        setactiveLinkId(data.id)\r\n        setquantity(data.stock)\r\n        props.sendDataFromInforDetail(data)\r\n    }\r\n    const dispatch = useDispatch()\r\n    let handleAddShopCart = () => {\r\n        if (props.userId) {\r\n            dispatch(addItemCartStart({\r\n                userId: props.userId,\r\n                productdetailsizeId: activeLinkId,\r\n                quantity: quantityProduct,\r\n            }))\r\n        } else {\r\n            toast.error(\"Đăng nhập để thêm vào giỏ hàng\")\r\n        }\r\n\r\n    }\r\n    return (\r\n\r\n\r\n        <div className=\"row s_product_inner\">\r\n            <div className=\"col-lg-6\">\r\n                <div className=\"s_product_img\">\r\n                    <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                        <div>\r\n                            <ol className=\"carousel-indicators\">\r\n                                {arrDetail && arrDetail.productImage && arrDetail.productImage.length > 0 &&\r\n                                    arrDetail.productImage.map((item, index) => {\r\n                                        if (index === 0) {\r\n                                            return (\r\n                                                <li data-target=\"#carouselExampleIndicators\" data-slide-to={index} className=\"active\">\r\n                                                    <img height=\"60px\" className=\"w-100\" src={item.image} alt=\"\" />\r\n                                                </li>\r\n                                            )\r\n                                        } else {\r\n                                            return (\r\n                                                <li data-target=\"#carouselExampleIndicators\" data-slide-to={index} className=\"\">\r\n                                                    <img height=\"60px\" className=\"w-100\" src={item.image} alt=\"\" />\r\n                                                </li>\r\n                                            )\r\n                                        }\r\n\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </ol>\r\n                        </div>\r\n                        <div className=\"carousel-inner\">\r\n\r\n                            {arrDetail && arrDetail.productImage && arrDetail.productImage.length > 0 &&\r\n                                arrDetail.productImage.map((item, index) => {\r\n                                    if (index === 0) {\r\n                                        return (\r\n\r\n                                            <div onClick={() => openPreviewImage(item.image)} style={{ cursor: 'pointer' }} className=\"carousel-item active\">\r\n                                                <img className=\"d-block w-100\"\r\n                                                    src={item.image} alt=\"Ảnh bị lỗi\" />\r\n                                            </div>\r\n                                        )\r\n                                    } else {\r\n                                        return (\r\n\r\n                                            <div onClick={() => openPreviewImage(item.image)} style={{ cursor: 'pointer' }} className=\"carousel-item \">\r\n                                                <img className=\"d-block w-100\"\r\n                                                    src={item.image} alt=\"Ảnh bị lỗi\" />\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n\r\n\r\n\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-lg-5 offset-lg-1\">\r\n                <div className=\"s_product_text\">\r\n                    <h3>{dataProduct.name}</h3>\r\n                    <h2>{CommonUtils.formatter.format(arrDetail.discountPrice)}</h2>\r\n                    <ul className=\"list\">\r\n                        <li>\r\n                            <a className=\"active\" href=\"#\">\r\n                                <span>Loại</span> : {dataProduct && dataProduct.categoryData ? dataProduct.categoryData.value : ''}</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#\"> <span>Trạng thái</span> : {quantity > 0 ? 'Còn hàng' : 'Hết hàng'}</a>\r\n                        </li>\r\n                        <li>\r\n                            <div className=\"box-size\">\r\n                                <a href=\"#\"> <span>Size</span></a>\r\n                                {arrDetail && arrDetail.productDetailSize && arrDetail.productDetailSize.length > 0 &&\r\n                                    arrDetail.productDetailSize.map((item, index) => {\r\n\r\n                                        return (\r\n                                            <div onClick={() => handleClickBoxSize(item)} key={index} className={item.id === activeLinkId ? 'product-size active' : 'product-size'}>\r\n                                                {item.sizeData.value}\r\n                                            </div>\r\n                                        )\r\n\r\n\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#\">{quantity} sản phẩm có sẵn</a>\r\n                        </li>\r\n                    </ul>\r\n                    <p>\r\n                        {arrDetail.description}\r\n                    </p>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <div className=\"product_count\">\r\n                            <label htmlFor=\"qty\">Số lượng</label>\r\n                            {/* <input type=\"text\" name=\"qty\" id=\"sst\" maxLength={12} defaultValue={1} title=\"Quantity:\" className=\"input-text qty\" /> */}\r\n                            <input type=\"number\" value={quantityProduct} onChange={(event) => setquantityProduct(event.target.value)} min=\"1\" />\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label style={{ fontSize: '14px', color: '#797979', fontFamily: '\"Roboto\",sans-serif', marginLeft: '16px' }} htmlFor=\"type\">Loại sản phẩm</label>\r\n                            <select onChange={(event) => handleSelectDetail(event)} className=\"sorting\" name=\"type\" style={{ outline: 'none', border: '1px solid #eee', marginLeft: '16px' }}>\r\n                                {dataProduct && productDetail && productDetail.length > 0 &&\r\n                                    productDetail.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index} value={index}>{item.nameDetail}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"card_area\">\r\n                        <a className=\"main_btn\" onClick={() => handleAddShopCart()}>Thêm vào giỏ</a>\r\n                        <a className=\"icon_btn\" href=\"#\">\r\n                            <i className=\"lnr lnr lnr-heart\" />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                isOpen === true &&\r\n                <Lightbox mainSrc={imgPreview}\r\n                    onCloseRequest={() => setisOpen(false)}\r\n                />\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default InfoDetailProduct;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\ImgDetailProduct.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\ReviewProduct.js",["486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512"],"import React, { useEffect, useState } from 'react';\r\nimport './ReviewProduct.scss';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport CommonUtils from '../../utils/CommonUtils';\r\nimport { createNewReviewService, getAllReviewByProductIdService, ReplyReviewService, deleteReviewService } from '../../services/userService';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport ReviewModal from './ReviewModal';\r\nfunction ReviewProduct(props) {\r\n    const { id } = useParams()\r\n    const [inputValues, setInputValues] = useState({\r\n        activeStar: '', imageReview: '', image: '', content: '', user: JSON.parse(localStorage.getItem('userData')), dataReview: [], countStar: {}, isOpen: false,\r\n        isOpenModal: false, parentId: ''\r\n    });\r\n    useEffect(() => {\r\n        let fetchAllReview = async () => {\r\n            await loadAllReview()\r\n        }\r\n        fetchAllReview()\r\n    }, [])\r\n    let openPreviewImage = (url) => {\r\n\r\n        setInputValues({ ...inputValues, [\"imageReview\"]: url, [\"isOpen\"]: true })\r\n\r\n\r\n    }\r\n    let loadAllReview = async () => {\r\n\r\n        let res = await getAllReviewByProductIdService(id)\r\n        if (res && res.errCode === 0) {\r\n            let count5 = res.data.filter(item => item.star === 5)\r\n            let count4 = res.data.filter(item => item.star === 4)\r\n            let count3 = res.data.filter(item => item.star === 3)\r\n            let count2 = res.data.filter(item => item.star === 2)\r\n            let count1 = res.data.filter(item => item.star === 1)\r\n\r\n            await setInputValues({\r\n                ...inputValues, [\"dataReview\"]: res.data, [\"countStar\"]: {\r\n                    star5: count5.length,\r\n                    star4: count4.length,\r\n                    star3: count3.length,\r\n                    star2: count2.length,\r\n                    star1: count1.length,\r\n                    average: ((count5.length * 5) + (count4.length * 4) + (count3.length * 3) + (count2.length * 2) + (count1.length * 1)) / (count5.length + count4.length + count3.length + count2.length + count1.length),\r\n                    quantity: count5.length + count4.length + count3.length + count2.length + count1.length\r\n                },\r\n                [\"content\"]: '', [\"image\"]: '', [\"imageReview\"]: '', [\"activeStar\"]: '', [\"isOpenModal\"]: false\r\n            })\r\n        }\r\n    }\r\n    let handleChooseStart = (number) => {\r\n        setInputValues({ ...inputValues, [\"activeStar\"]: number })\r\n    }\r\n    let handleOnChangeImage = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if(file.size > 31312281){\r\n            toast.error(\"Dung lượng file bé hơn 30mb\")\r\n        }\r\n        else{\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file)\r\n            setInputValues({ ...inputValues, [\"image\"]: base64, [\"imageReview\"]: objectUrl })\r\n        }\r\n       \r\n    }\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    let handleSaveComment = async () => {\r\n        if (!inputValues.activeStar) toast.error(\"Bạn chưa chọn sao !\")\r\n        else if (!inputValues.content) toast.error(\"Nội dung không được để trống !\")\r\n        else {\r\n            let response = await createNewReviewService({\r\n                productId: id,\r\n                content: inputValues.content,\r\n                image: inputValues.image,\r\n                userId: inputValues.user.id,\r\n                star: inputValues.activeStar\r\n            })\r\n            if (response && response.errCode === 0) {\r\n                toast.success(\"Đăng đánh giá thành công !\")\r\n\r\n                await loadAllReview()\r\n\r\n            } else {\r\n                toast.error(response.errMessage)\r\n            }\r\n        }\r\n    }\r\n    let closeModal = () => {\r\n        setInputValues({ ...inputValues, [\"isOpenModal\"]: false, [\"parentId\"]: '' })\r\n\r\n    }\r\n    let handleOpenModal = (id) => {\r\n        setInputValues({ ...inputValues, [\"isOpenModal\"]: true, [\"parentId\"]: id })\r\n\r\n    }\r\n    let sendDataFromReViewModal = async (content) => {\r\n        let res = await ReplyReviewService({\r\n            content: content,\r\n            productId: id,\r\n            userId: inputValues.user.id,\r\n            parentId: inputValues.parentId\r\n        })\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Phản hồi thành công !\");\r\n\r\n            await loadAllReview()\r\n        }\r\n    }\r\n    let handleDeleteReply = async (id) => {\r\n        let res = await deleteReviewService({\r\n            data: {\r\n                id: id\r\n            }\r\n        })\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Xóa phản hồi thành công !\")\r\n            await loadAllReview()\r\n        } else {\r\n            toast.error(res.errMessage)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n                <div className=\"row total_rate\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"box_total\">\r\n                            <h5>Sao trung bình</h5>\r\n                            <h4>{inputValues.countStar.average ? Math.round(inputValues.countStar.average * 10) / 10 : 0}</h4>\r\n                            <h6>({inputValues.countStar.quantity} lượt đánh giá)</h6>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"rating_list\">\r\n                            <h3>{inputValues.countStar.quantity} lượt đánh giá</h3>\r\n                            <ul className=\"list\">\r\n                                <li>\r\n                                    <a href=\"#\">5\r\n                                        <i className=\"fa fa-star\" />\r\n                                        <i className=\"fa fa-star\" />\r\n                                        <i className=\"fa fa-star\" />\r\n                                        <i className=\"fa fa-star\" />\r\n                                        <i className=\"fa fa-star\" /> Có {inputValues.countStar.star5} lượt đánh giá</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">4\r\n                                        <i className=\"fa fa-star\" />\r\n                                        <i className=\"fa fa-star\" />\r\n                                        <i className=\"fa fa-star\" />\r\n\r\n                                        <i className=\"fa fa-star\" /> Có {inputValues.countStar.star4} lượt đánh giá</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">3\r\n                                        <i className=\"fa fa-star\" />\r\n                                        <i className=\"fa fa-star\" />\r\n\r\n                                        <i className=\"fa fa-star\" /> Có {inputValues.countStar.star3} lượt đánh giá</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">2\r\n                                        <i className=\"fa fa-star\" />\r\n\r\n                                        <i className=\"fa fa-star\" /> Có {inputValues.countStar.star2} lượt đánh giá</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">1\r\n\r\n                                        <i className=\"fa fa-star\" /> Có {inputValues.countStar.star1} lượt đánh giá</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"review_list\">\r\n                    {inputValues.user &&\r\n                        <div className=\"review_item\">\r\n                            <div className=\"form-group\">\r\n                                <label style={{ color: '#333', fontSize: '16px', fontWeight: '600' }}>Viết đánh giá của bạn</label>\r\n                                <textarea name=\"content\" value={inputValues.content} onChange={(event) => handleOnChange(event)} rows=\"3\" className=\"form-control\"></textarea>\r\n                            </div>\r\n                            <div className=\"content-review\">\r\n                                <div className=\"content-left\">\r\n                                    <label style={{ marginBottom: '0', cursor: 'pointer' }} htmlFor=\"cmtImg\"><i className=\"fas fa-camera\" ></i></label>\r\n\r\n                                    <input type=\"file\" id=\"cmtImg\" accept=\".jpg,.png\"\r\n                                        hidden onChange={(event) => handleOnChangeImage(event)}\r\n                                    />\r\n                                    <div className={inputValues.activeStar === 1 ? 'box-star active' : 'box-star'} onClick={() => handleChooseStart(1)}><i className=\"fa fa-star\" /></div>\r\n                                    <div className={inputValues.activeStar === 2 ? 'box-star active' : 'box-star'} onClick={() => handleChooseStart(2)} ><i className=\"fa fa-star\" /><i className=\"fa fa-star\" /></div>\r\n                                    <div className={inputValues.activeStar === 3 ? 'box-star active' : 'box-star'} onClick={() => handleChooseStart(3)}><i className=\"fa fa-star\" /><i className=\"fa fa-star\" /><i className=\"fa fa-star\" /></div>\r\n                                    <div className={inputValues.activeStar === 4 ? 'box-star active' : 'box-star'} onClick={() => handleChooseStart(4)}><i className=\"fa fa-star\" /><i className=\"fa fa-star\" /><i className=\"fa fa-star\" /><i className=\"fa fa-star\" /></div>\r\n                                    <div className={inputValues.activeStar === 5 ? 'box-star active' : 'box-star'} onClick={() => handleChooseStart(5)}><i className=\"fa fa-star\" /><i className=\"fa fa-star\" /><i className=\"fa fa-star\" /><i className=\"fa fa-star\" /><i className=\"fa fa-star\" /></div>\r\n                                </div>\r\n                                <div className=\"content-right\">\r\n                                    <button onClick={() => handleSaveComment()} className=\"btn btn-primary\"><i className=\"fas fa-pencil-alt\"></i> Share</button>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ backgroundImage: `url(${inputValues.imageReview})` }} className=\"preview-cmt-img\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                    {inputValues.dataReview && inputValues.dataReview.length > 0 &&\r\n                        inputValues.dataReview.map((item, index) => {\r\n                            if (!item.parentId) {\r\n                                let name = `${item.user.firstName ? item.user.firstName : ''} ${item.user.lastName}`\r\n                                let arrStar = []\r\n                                for (let i = 0; i < item.star; i++) {\r\n                                    arrStar[i] = 1\r\n                                }\r\n                                return (\r\n                                    <div key={index} className=\"review_item\">\r\n                                        <div className=\"media\">\r\n                                            <div className=\"d-flex\">\r\n                                                <img className=\"img-avatar\" src={item.user.image} alt=\"\" />\r\n                                            </div>\r\n                                            <div className=\"media-body\">\r\n                                                <h4>{name}</h4>\r\n                                                {arrStar && arrStar.length > 0 &&\r\n                                                    arrStar.map((item, index) => {\r\n\r\n                                                        return (\r\n                                                            <i key={index} className=\"fa fa-star\" />\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                {inputValues.user && inputValues.user.roleId === \"R1\" &&\r\n                                                    <a style={{ cursor: 'pointer' }} onClick={() => handleOpenModal(item.id)} className=\"reply_btn\" >Phản hồi</a>\r\n                                                }\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style={{ marginLeft: '88px' }}>\r\n                                            <p style={{ paddingTop: '0px' }}>\r\n                                                {item.content}\r\n                                            </p>\r\n                                            {item.image &&\r\n                                                <img onClick={() => openPreviewImage(item.image)} className=\"img-cmt\" src={item.image}></img>\r\n                                            }\r\n                                            {item.childComment && item.childComment.length > 0 &&\r\n                                                item.childComment.map((item, index) => {\r\n                                                    return (\r\n                                                        <div key={index} className=\"box-reply\">\r\n                                                            <span>Phản hồi của người bán</span>\r\n                                                            <p>{item.content}</p>\r\n                                                            {inputValues.user && inputValues.user.roleId === \"R1\" &&\r\n                                                                <button onClick={() => handleDeleteReply(item.id)} className=\"btn-delete-reply\" type=\"button\">Xóa</button>\r\n                                                            }\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                        })\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n            {\r\n                inputValues.isOpen === true &&\r\n                <Lightbox mainSrc={inputValues.imageReview}\r\n                    onCloseRequest={() => setInputValues({ ...inputValues, [\"isOpen\"]: false, [\"imageReview\"]: '' })}\r\n                />\r\n            }\r\n            <ReviewModal\r\n                isOpenModal={inputValues.isOpenModal}\r\n                closeModal={closeModal}\r\n                sendDataFromReViewModal={sendDataFromReViewModal}\r\n\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReviewProduct;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\DescriptionProduct.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\CommentProduct.js",["513","514","515"],"import React from 'react';\r\n\r\nfunction CommentProduct(props) {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n                <div className=\"comment_list\">\r\n                    <div className=\"review_item\">\r\n                        <div className=\"media\">\r\n                            <div className=\"d-flex\">\r\n                                <img src=\"https://technext.github.io/eiser/img/product/single-product/review-1.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"media-body\">\r\n                                <h4>Blake Ruiz</h4>\r\n                                <h5>12th Feb, 2017 at 05:56 pm</h5>\r\n                                <a className=\"reply_btn\" href=\"#\">Phản hồi</a>\r\n                            </div>\r\n                        </div>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit,\r\n                            sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                            aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                            ullamco laboris nisi ut aliquip ex ea commodo\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"review_item reply\">\r\n                        <div className=\"media\">\r\n                            <div className=\"d-flex\">\r\n                                <img src=\"https://technext.github.io/eiser/img/product/single-product/review-1.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"media-body\">\r\n                                <h4>Blake Ruiz</h4>\r\n                                <h5>12th Feb, 2017 at 05:56 pm</h5>\r\n                                <a className=\"reply_btn\" href=\"#\">Phản hồi</a>\r\n                            </div>\r\n                        </div>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit,\r\n                            sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                            aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                            ullamco laboris nisi ut aliquip ex ea commodo\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"review_item\">\r\n                        <div className=\"media\">\r\n                            <div className=\"d-flex\">\r\n                                <img src=\"https://technext.github.io/eiser/img/product/single-product/review-1.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"media-body\">\r\n                                <h4>Blake Ruiz</h4>\r\n                                <h5>12th Feb, 2017 at 05:56 pm</h5>\r\n                                <a className=\"reply_btn\" href=\"#\">Phản hồi</a>\r\n                            </div>\r\n                        </div>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit,\r\n                            sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                            aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                            ullamco laboris nisi ut aliquip ex ea commodo\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentProduct;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\Product\\ReviewModal.js",["516","517","518","519","520","521","522","523","524","525","526","527","528"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport CommonUtils from '../../utils/CommonUtils';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nimport { Modal, ModalHeader, ModalFooter, ModalBody, Button } from 'reactstrap';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst ReviewModal = (props) => {\r\n    const [inputValues, setInputValues] = useState({\r\n        content: ''\r\n    });\r\n\r\n\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    let handleCloseModal = () => {\r\n        props.closeModal()\r\n        setInputValues({ ...inputValues, [\"content\"]: '' })\r\n\r\n    }\r\n    let handleSaveInfor = () => {\r\n        setInputValues({ ...inputValues, [\"content\"]: '' })\r\n        props.sendDataFromReViewModal(inputValues.content)\r\n    }\r\n    return (\r\n        <div className=\"\">\r\n            <Modal isOpen={props.isOpenModal} className={'booking-modal-container'}\r\n                size=\"md\" centered\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Viết phản hồi đánh giá sản phẩm</h5>\r\n                    <button onClick={handleCloseModal} type=\"button\" className=\"btn btn-time\" aria-label=\"Close\">X</button>\r\n                </div>\r\n                <ModalBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 form-group\">\r\n                            <label>Phản hồi</label>\r\n                            <textarea name=\"content\" value={inputValues.content} onChange={(event) => handleOnChange(event)} className=\"form-control\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        onClick={handleSaveInfor}\r\n                    >\r\n                        Lưu thông tin\r\n                    </Button>\r\n                    {' '}\r\n                    <Button onClick={handleCloseModal}>\r\n                        Hủy\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div >\r\n    )\r\n}\r\nexport default ReviewModal;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\HomePageAdmin.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Footer.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Header.js",["529","530","531"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nconst Header = () => {\r\n    let history = useHistory();\r\n    const [user, setUser] = useState({})\r\n    let handleLogout = () => {\r\n        localStorage.removeItem(\"userData\");\r\n        localStorage.removeItem(\"token\");\r\n        window.location.href = '/login'\r\n    }\r\n    useEffect(() => {\r\n        const userData = JSON.parse(localStorage.getItem('userData'));\r\n        setUser(userData)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n            {/* Navbar Brand*/}\r\n            <a className=\"navbar-brand ps-3\" href=\"index.html\">Trang quản trị</a>\r\n            {/* Sidebar Toggle*/}\r\n            <button className=\"btn btn-link btn-sm order-1 order-lg-0 me-4 me-lg-0\" id=\"sidebarToggle\" href=\"#!\"><i className=\"fas fa-bars\" /></button>\r\n            {/* Navbar Search*/}\r\n            <form className=\"d-none d-md-inline-block form-inline ms-auto me-0 me-md-3 my-2 my-md-0\">\r\n                \r\n            </form>\r\n            {/* Navbar*/}\r\n            <ul className=\"navbar-nav ms-auto ms-md-0 me-3 me-lg-4\">\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"><i className=\"fas fa-user fa-fw\" /></a>\r\n                    <ul className=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"navbarDropdown\">\r\n                        <li><Link to={`/admin/infor/${user.id}`} className=\"dropdown-item\" >{user.firstName} {user.lastName}</Link></li>\r\n                        <li><Link to={`/admin/change-password/${user.id}`} className=\"dropdown-item\">Đổi mật khẩu</Link></li>\r\n                        <li><hr className=\"dropdown-divider\" /></li>\r\n                        <li><a className=\"dropdown-item\" onClick={() => handleLogout()} >Đăng xuất</a></li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nexport default Header;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\SideBar.js",["532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nconst SideBar = () => {\r\n    const [user, setUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        const userData = JSON.parse(localStorage.getItem('userData'));\r\n        setUser(userData)\r\n    }, [])\r\n    return (\r\n        <div id=\"layoutSidenav_nav\">\r\n            <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\r\n                <div className=\"sb-sidenav-menu\">\r\n                    <div className=\"nav\">\r\n                        <div className=\"sb-sidenav-menu-heading\"></div>\r\n                        <Link to=\"/admin\" className=\"nav-link\">\r\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\" /></div>\r\n                            Trang chủ\r\n                        </Link>\r\n\r\n                        <div className=\"sb-sidenav-menu-heading\">Quản lý</div>\r\n                        {user && user.roleId === \"R1\" &&\r\n                            <>\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseLayouts\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-users\"></i></div>\r\n                                    Quản lý người dùng\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                                </a>\r\n                                <div className=\"collapse\" id=\"collapseLayouts\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                        <Link to={'/admin/list-user'} className=\"nav-link\" >Danh sách người dùng</Link>\r\n                                        <Link to={'/admin/add-user'} className=\"nav-link\" >Thêm người dùng</Link>\r\n                                    </nav>\r\n                                </div>\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseCategory\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-list-ol\"></i></div>\r\n                                    Quản lý danh mục\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                                </a>\r\n                                <div className=\"collapse\" id=\"collapseCategory\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                        <Link to={'/admin/list-category'} className=\"nav-link\" >Danh sách danh mục</Link>\r\n                                        <Link to={'/admin/add-category'} className=\"nav-link\" >Thêm danh mục</Link>\r\n                                    </nav>\r\n                                </div>\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseBrand\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"far fa-copyright\"></i></div>\r\n                                    Quản lý nhãn hàng\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                                </a>\r\n                                <div className=\"collapse\" id=\"collapseBrand\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                        <Link to={'/admin/list-brand'} className=\"nav-link\" >Danh sách nhãn hàng</Link>\r\n                                        <Link to={'/admin/add-brand'} className=\"nav-link\" >Thêm nhãn hàng</Link>\r\n                                    </nav>\r\n                                </div>\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseProduct\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tshirt\"></i></div>\r\n                                    Quản lý sản phẩm\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                                </a>\r\n                                <div className=\"collapse\" id=\"collapseProduct\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                        <Link to={'/admin/list-product'} className=\"nav-link\" >Danh sách sản phẩm</Link>\r\n                                        <Link to={'/admin/add-product'} className=\"nav-link\" >Thêm sản phẩm</Link>\r\n                                    </nav>\r\n                                </div>\r\n\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseBanner\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fab fa-adversal\"></i></div>\r\n                                    Quản lý băng rôn\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                                </a>\r\n                                <div className=\"collapse\" id=\"collapseBanner\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                        <Link to={'/admin/list-banner'} className=\"nav-link\" >Danh sách băng rôn</Link>\r\n                                        <Link to={'/admin/add-banner'} className=\"nav-link\" >Thêm băng rôn</Link>\r\n                                    </nav>\r\n                                </div>\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseSubject\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fab fa-blogger\"></i></div>\r\n                                    Quản lý chủ đề\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                                </a>\r\n                                <div className=\"collapse\" id=\"collapseSubject\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                        <Link to={'/admin/list-subject'} className=\"nav-link\" >Danh sách chủ đề</Link>\r\n                                        <Link to={'/admin/add-subject'} className=\"nav-link\" >Thêm chủ đề</Link>\r\n                                    </nav>\r\n                                </div>\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseBlog\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-feather-alt\"></i></div>\r\n                                    Quản lý bài đăng\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                                </a>\r\n                                <div className=\"collapse\" id=\"collapseBlog\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                        <Link to={'/admin/list-blog'} className=\"nav-link\" >Danh sách bài đăng</Link>\r\n                                        <Link to={'/admin/add-blog'} className=\"nav-link\" >Thêm bài đăng</Link>\r\n                                    </nav>\r\n                                </div>\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseShip\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-shipping-fast\"></i></div>\r\n                                    Quản lý loại ship\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                                </a>\r\n                                <div className=\"collapse\" id=\"collapseShip\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                        <Link to={'/admin/list-typeship'} className=\"nav-link\" >DS loại giao hàng</Link>\r\n                                        <Link to={'/admin/add-typeship'} className=\"nav-link\" >Thêm loại giao hàng</Link>\r\n                                    </nav>\r\n                                </div>\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseVoucher\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-percentage\"></i></div>\r\n                                    Quản lý voucher\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                                </a>\r\n                                <div className=\"collapse\" id=\"collapseVoucher\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                        <Link to={'/admin/list-typevoucher'} className=\"nav-link\" >DS loại khuyến mãi</Link>\r\n                                        <Link to={'/admin/list-voucher'} className=\"nav-link\" >DS mã khuyến mãi</Link>\r\n                                        <Link to={'/admin/add-typevoucher'} className=\"nav-link\" >Thêm loại khuyến mãi</Link>\r\n                                        <Link to={'/admin/add-voucher'} className=\"nav-link\" >Thêm mã khuyến mãi</Link>\r\n                                    </nav>\r\n                                </div>\r\n                            </>\r\n                        }\r\n\r\n                        <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseSupplier\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                            <div className=\"sb-nav-link-icon\"><i class=\"fa-solid fa-person-military-pointing\"></i></div>\r\n                            Quản lý NCC\r\n                            <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                        </a>\r\n                        <div className=\"collapse\" id=\"collapseSupplier\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                            <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                <Link to={'/admin/list-supplier'} className=\"nav-link\" >Danh sách NCC</Link>\r\n                                <Link to={'/admin/add-supplier'} className=\"nav-link\" >Thêm nhà cung cấp</Link>\r\n                            </nav>\r\n                        </div>\r\n                        <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseReceipt\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                            <div className=\"sb-nav-link-icon\"><i class=\"fa-solid fa-file-import\"></i></div>\r\n                            Quản lý nhập hàng\r\n                            <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                        </a>\r\n                        <div className=\"collapse\" id=\"collapseReceipt\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                            <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                <Link to={'/admin/list-receipt'} className=\"nav-link\" >Danh sách nhập hàng</Link>\r\n                                <Link to={'/admin/add-receipt'} className=\"nav-link\" >Thêm nhập hàng</Link>\r\n                            </nav>\r\n                        </div>\r\n                        <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOrder\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                            <div className=\"sb-nav-link-icon\"><i className=\"fas fa-cart-plus\"></i></div>\r\n                            Quản lý đơn hàng\r\n                            <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                        </a>\r\n                        <div className=\"collapse\" id=\"collapseOrder\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                            <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                <Link to={'/admin/list-order'} className=\"nav-link\" >Danh sách đơn hàng</Link>\r\n\r\n                            </nav>\r\n                        </div>\r\n                        <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOrder\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                            <div className=\"sb-nav-link-icon\"><i class=\"fa-brands fa-facebook-messenger\"></i></div>\r\n                            Quản lý tin nhắn\r\n                            <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                        </a>\r\n                        <div className=\"collapse\" id=\"collapseOrder\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                            <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                <Link to={'/admin/chat'} className=\"nav-link\" >Messenger</Link>\r\n\r\n                            </nav>\r\n                        </div>\r\n                        {user && user.roleId === \"R1\" &&\r\n                            <>\r\n                                <a className=\"nav-link collapsed\" href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseStatistic\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                                    <div className=\"sb-nav-link-icon\"><i class=\"fa-solid fa-magnifying-glass-chart\"></i></div>\r\n                                    Thống kê\r\n                                    <div className=\"sb-sidenav-collapse-arrow\"><i className=\"fas fa-angle-down\" /></div>\r\n                                </a>\r\n\r\n                                <div className=\"collapse\" id=\"collapseStatistic\" aria-labelledby=\"headingOne\" data-bs-parent=\"#sidenavAccordion\">\r\n                                    <nav className=\"sb-sidenav-menu-nested nav\">\r\n                                        <Link to={'/admin/turnover'} className=\"nav-link\" >Thống kê doanh thu</Link>\r\n\r\n                                        <Link to={'/admin/profit'} className=\"nav-link\" >Thống kê lợi nhuận</Link>\r\n                                        <Link to={'/admin/stock-product'} className=\"nav-link\" >Thống kê tồn kho</Link>\r\n\r\n\r\n                                    </nav>\r\n                                </div>\r\n                            </>\r\n\r\n                        }\r\n\r\n\r\n                    </div>\r\n                </div >\r\n                <div className=\"sb-sidenav-footer\">\r\n                   \r\n                    Trang quản trị\r\n                </div>\r\n            </nav >\r\n        </div >\r\n    )\r\n}\r\nexport default SideBar;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Home.js",["550","551","552","553","554","555","556","557","558","559"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement\r\n} from 'chart.js';\r\nimport { Line, Pie, Bar } from 'react-chartjs-2';\r\nimport { getCountCardStatistic, getCountStatusOrder, getStatisticByMonth, getStatisticByDay } from '../../services/userService'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement\r\n);\r\n\r\n\r\n\r\nlet getOptions = (title) => {\r\n  return {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: title,\r\n      },\r\n    },\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst Home = () => {\r\n  const [CountCard, setCountCard] = useState({})\r\n  const [CountStatusOrder, setCountStatusOrder] = useState({})\r\n  const [StatisticOrderByMonth, setStatisticOrderByMonth] = useState({})\r\n  const [StatisticOrderByDay, setStatisticOrderByDay] = useState({})\r\n  const [dateRange, setDateRange] = useState([null, null]);\r\n  const [startDate, endDate] = dateRange;\r\n  const [DateTime, setDateTime] = useState(new Date());\r\n  const [type, settype] = useState('month')\r\n  const [month, setmonth] = useState(new Date());\r\n  const [year, setyear] = useState(new Date());\r\n  useEffect(() => {\r\n    loadCountCard()\r\n    loadStatusOrder()\r\n    loadStatisticOrderByMonth(moment(year).format(\"YYYY\"))\r\n    loadStatisticOrderByDay(moment(year).format(\"YYYY\"), moment(new Date()).format(\"M\"))\r\n\r\n  }, [])\r\n\r\n  const dataPie = {\r\n    labels: CountStatusOrder.arrayLable,\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: CountStatusOrder.arrayValue,\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.2)',\r\n          'rgba(54, 162, 235, 0.2)',\r\n          'rgba(255, 206, 86, 0.2)',\r\n          'rgba(75, 192, 192, 0.2)',\r\n          'rgba(153, 102, 255, 0.2)',\r\n\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(153, 102, 255, 1)',\r\n\r\n        ],\r\n        borderWidth: 1,\r\n\r\n      },\r\n\r\n    ],\r\n\r\n\r\n  };\r\n  const dataLine = {\r\n    labels: StatisticOrderByMonth.arrayMonthLable,\r\n    datasets: [\r\n\r\n      {\r\n        label: 'Doanh thu',\r\n        data: StatisticOrderByMonth.arrayMonthValue,\r\n        borderColor: 'rgb(53, 162, 235)',\r\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n      },\r\n    ],\r\n  };\r\n  const dataBar = {\r\n    labels: StatisticOrderByDay.arrayDayLable,\r\n    datasets: [\r\n      {\r\n        label: 'Doanh thu',\r\n        data: StatisticOrderByDay.arrayDayValue,\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n      },\r\n\r\n    ],\r\n  };\r\n  let loadCountCard = async () => {\r\n\r\n    let res = await getCountCardStatistic()\r\n    if (res && res.errCode == 0) {\r\n      setCountCard(res.data)\r\n    }\r\n\r\n\r\n  }\r\n\r\n  let loadStatusOrder = async () => {\r\n\r\n    let res = await getCountStatusOrder({\r\n      oneDate: type == 'day' ? startDate : DateTime,\r\n      twoDate: endDate,\r\n      type: type\r\n    })\r\n    if (res && res.errCode == 0) {\r\n      setCountStatusOrder(res.data)\r\n    }\r\n  }\r\n  let handleOnclick = () => {\r\n\r\n    loadStatusOrder()\r\n  }\r\n  let loadStatisticOrderByMonth = async (year) => {\r\n    let res = await getStatisticByMonth(year)\r\n    if (res && res.errCode == 0) {\r\n      setStatisticOrderByMonth(res.data)\r\n    }\r\n  }\r\n  let loadStatisticOrderByDay = async (year, month) => {\r\n    let res = await getStatisticByDay({ year, month })\r\n    if (res && res.errCode == 0) {\r\n      setStatisticOrderByDay(res.data)\r\n    }\r\n  }\r\n  let handleOnChangeYear = (year) => {\r\n    setyear(year)\r\n    loadStatisticOrderByMonth(moment(year).format(\"YYYY\"))\r\n  }\r\n  let handleOnChangeDatePickerFromDate = (date) => {\r\n\r\n    setmonth(date)\r\n    loadStatisticOrderByDay(moment(date).format(\"YYYY\"), moment(date).format(\"M\"))\r\n  }\r\n  return (\r\n    <div className=\"container-fluid px-4\">\r\n      <h1 className=\"mt-4\">THỐNG KÊ</h1>\r\n      <ol className=\"breadcrumb mb-4\">\r\n        <li className=\"breadcrumb-item active\">Trang thống kê</li>\r\n      </ol>\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-3 col-md-6\">\r\n          <div className=\"card bg-primary text-white mb-4\">\r\n            <div className=\"card-body\">TỔNG SỐ ĐƠN HÀNG ({CountCard.countOrder})</div>\r\n            <div className=\"card-footer d-flex align-items-center justify-content-between\">\r\n              <Link className=\"small text-white stretched-link\" to={'/admin/list-order'}>Chi tiết</Link>\r\n              <div className=\"small text-white\"><i className=\"fas fa-angle-right\" /></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-md-6\">\r\n          <div className=\"card bg-warning text-white mb-4\">\r\n            <div className=\"card-body\">ĐÁNH GIÁ ({CountCard.countReview})</div>\r\n            <div className=\"card-footer d-flex align-items-center justify-content-between\">\r\n              <a className=\"small text-white stretched-link\" href=\"#\">Chi tiết</a>\r\n              <div className=\"small text-white\"><i className=\"fas fa-angle-right\" /></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-md-6\">\r\n          <div className=\"card bg-success text-white mb-4\">\r\n            <div className=\"card-body\">SẢN PHẨM ({CountCard.countProduct})</div>\r\n            <div className=\"card-footer d-flex align-items-center justify-content-between\">\r\n              <Link className=\"small text-white stretched-link\" to={'/admin/list-product'}>Chi tiết</Link>\r\n              <div className=\"small text-white\"><i className=\"fas fa-angle-right\" /></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-md-6\">\r\n          <div className=\"card bg-danger text-white mb-4\">\r\n            <div className=\"card-body\">THÀNH VIÊN ({CountCard.countUser})</div>\r\n            <div className=\"card-footer d-flex align-items-center justify-content-between\">\r\n              <Link className=\"small text-white stretched-link\" to={'/admin/list-user'}>Chi tiết</Link>\r\n              <div className=\"small text-white\"><i className=\"fas fa-angle-right\" /></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className=\"col-md-8\">\r\n          <label>Chọn năm</label>\r\n          <DatePicker\r\n            selected={year}\r\n            onChange={(date) => handleOnChangeYear(date)}\r\n            dateFormat=\"yyyy\"\r\n            showYearPicker\r\n            className='form-control col-md-2'\r\n          />\r\n          <Line options={getOptions('Biểu đồ doanh thu theo từng tháng trong năm')} data={dataLine} />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <form>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-8\">\r\n                <label htmlFor=\"inputZip\">Loại thống kê</label>\r\n                <select value={type} name=\"type\" onChange={(event) => settype(event.target.value)} id=\"inputState\" className=\"form-control\">\r\n                  <option value=\"day\">Ngày</option>\r\n                  <option value=\"month\">Tháng</option>\r\n                  <option value=\"year\">Năm</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              {type == \"day\" &&\r\n                <>\r\n\r\n                  <div className=\"form-group col-md-8\">\r\n                    <DatePicker\r\n                      showMonthDropdown\r\n                      showYearDropdown\r\n                      selectsRange={true}\r\n                      startDate={startDate}\r\n                      endDate={endDate}\r\n                      onChange={(update) => {\r\n                        setDateRange(update);\r\n                      }}\r\n                      className=\"form-control\"\r\n                      isClearable={true}\r\n                    />\r\n                  </div>\r\n\r\n\r\n                </>\r\n              }\r\n              {type == \"month\" &&\r\n                <>\r\n                  <div className=\"form-group col-md-8\">\r\n                    <label htmlFor=\"inputCity\">Chọn tháng</label>\r\n                    <DatePicker\r\n                      selected={DateTime}\r\n                      onChange={(date) => setDateTime(date)}\r\n                      dateFormat=\"MM/yyyy\"\r\n                      showMonthYearPicker\r\n                      className='form-control'\r\n                    />\r\n                  </div>\r\n                </>\r\n              }\r\n              {type == \"year\" &&\r\n                <>\r\n                  <div className=\"form-group col-md-8\">\r\n                    <label htmlFor=\"inputCity\">Chọn năm</label>\r\n                    <DatePicker\r\n                      selected={DateTime}\r\n                      onChange={(date) => setDateTime(date)}\r\n                      dateFormat=\"yyyy\"\r\n                      showYearPicker\r\n                      className='form-control'\r\n                    />\r\n                  </div>\r\n                </>\r\n              }\r\n\r\n\r\n            </div>\r\n            <button type=\"button\" onClick={() => handleOnclick()} className=\"btn btn-primary\">Lọc</button>\r\n          </form>\r\n          <Pie data={dataPie} options={getOptions('Thống kê trạng thái đơn hàng')} />;\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col-sm-11'>\r\n          <label>Chọn tháng</label>\r\n          <DatePicker\r\n            selected={month}\r\n            onChange={(date) => handleOnChangeDatePickerFromDate(date)}\r\n            dateFormat=\"MM/yyyy\"\r\n            showMonthYearPicker\r\n            className='form-control col-md-2'\r\n          />\r\n          <Bar options={getOptions('Biểu đồ doanh thu theo từng ngày trong tháng')} data={dataBar} />\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Home;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\User\\ManageUser.js",["560","561","562","563","564","565","566"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { getAllUsers, DeleteUserService } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport FormSearch from '../../../component/Search/FormSearch';\r\n\r\nconst ManageUser = () => {\r\n\r\n    const [dataUser, setdataUser] = useState([]);\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    const [keyword, setkeyword] = useState('')\r\n    \r\n    useEffect(() => {\r\n         fetchAllUser(keyword)\r\n    }, [])\r\n    let fetchAllUser = async (keyword) => {\r\n        let res = await getAllUsers({\r\n            limit: PAGINATION.pagerow,\r\n            offset: 0,\r\n            keyword:keyword\r\n        })\r\n        if (res && res.errCode === 0) {\r\n\r\n            setdataUser(res.data);\r\n            setCount(Math.ceil(res.count / PAGINATION.pagerow))\r\n        }\r\n    }\r\n    let handleBanUser = async (event, id) => {\r\n        event.preventDefault();\r\n\r\n        let res = await DeleteUserService(id)\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Xóa người dùng thành công\")\r\n            let user = await getAllUsers({\r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow,\r\n                keyword:keyword\r\n            })\r\n            if (user && user.errCode === 0) {\r\n\r\n                setdataUser(user.data);\r\n                setCount(Math.ceil(user.count / PAGINATION.pagerow))\r\n            }\r\n        } else {\r\n            toast.error(\"Xóa người dùng thất bại\")\r\n        }\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getAllUsers({\r\n\r\n\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow,\r\n            keyword:keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataUser(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleSearchUser = (keyword) =>{\r\n        fetchAllUser(keyword)\r\n        setkeyword(keyword)\r\n    }\r\n    let handleOnchangeSearch = (keyword) =>{\r\n        if(keyword === ''){\r\n            fetchAllUser(keyword)\r\n            setkeyword(keyword)\r\n        }\r\n    }\r\n    let handleOnClickExport =async () =>{\r\n        let res = await getAllUsers({\r\n            limit: '',\r\n            offset: '',\r\n            keyword:''\r\n        })\r\n        if(res && res.errCode == 0){\r\n            await CommonUtils.exportExcel(res.data,\"Danh sách người dùng\",\"ListUser\")\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý người dùng</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách người dùng\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className='row'>\r\n                    <div  className='col-4'>\r\n                    <FormSearch title={\"số điện thoại\"} handleOnchange={handleOnchangeSearch} handleSearch={handleSearchUser} />\r\n                    </div>\r\n                    <div className='col-8'>\r\n                    <button  style={{float:'right'}} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                    </div>\r\n                    </div>\r\n               \r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Email</th>\r\n                                    <th>Họ và tên</th>\r\n                                    <th>Số điện thoại</th>\r\n                                    <th>Ngày sinh</th>\r\n                                    <th>Giới tính</th>\r\n                                    <th>Quyền</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataUser && dataUser.length > 0 &&\r\n                                    dataUser.map((item, index) => {\r\n                                        let date = moment.unix(item.dob / 1000).format('DD/MM/YYYY')\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.email}</td>\r\n                                                <td>{`${item.firstName} ${item.lastName}`}</td>\r\n                                                <td>{item.phonenumber}</td>\r\n                                                <td>{date}</td>\r\n                                                <td>{item.genderData.value}</td>\r\n                                                <td>{item.roleData.value}</td>\r\n                                                <td>\r\n                                                    <Link to={`/admin/edit-user/${item.id}`}>Edit</Link>\r\n                                                    &nbsp; &nbsp;\r\n                                                    <a href=\"#\" onClick={(event) => handleBanUser(event, item.id)} >Delete</a>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'Quay lại'}\r\n                nextLabel={'Tiếp'}\r\n                breakLabel={'...'}\r\n                pageCount={count}\r\n                marginPagesDisplayed={3}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                activeClassName={\"active\"}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ManageUser;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\User\\Adduser.js",["567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { createNewUser, getDetailUserById, UpdateUserService } from '../../../services/userService';\r\nimport DatePicker from '../../../component/input/DatePicker';\r\nimport { toast } from 'react-toastify';\r\nimport { useParams } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useFetchAllcode } from '../../customize/fetch';\r\nimport localization from 'moment/locale/vi';\r\nimport moment from 'moment';\r\nconst Adduser = (props) => {\r\n\r\n\r\n    const [birthday, setbirthday] = useState('');\r\n\r\n    const [isActionADD, setisActionADD] = useState(true)\r\n    const [isChangeDate, setisChangeDate] = useState(false)\r\n    const { id } = useParams();\r\n\r\n    const [inputValues, setInputValues] = useState({\r\n        email: '', password: '', firstName: '', lastName: '', address: '', phonenumber: '', genderId: '', roleId: '', id: '', dob: ''\r\n    });\r\n\r\n    let setStateUser = (data) => {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"firstName\"]: data.firstName,\r\n            [\"lastName\"]: data.lastName,\r\n            [\"address\"]: data.address,\r\n            [\"phonenumber\"]: data.phonenumber,\r\n            [\"genderId\"]: data.genderId,\r\n            [\"roleId\"]: data.roleId,\r\n            [\"email\"]: data.email,\r\n            [\"id\"]: data.id,\r\n            [\"dob\"]: data.dob\r\n        })\r\n        setbirthday(moment.unix(+data.dob / 1000).locale('vi').format('DD/MM/YYYY'))\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (id) {\r\n            let fetchUser = async () => {\r\n                setisActionADD(false)\r\n                let user = await getDetailUserById(id)\r\n                if (user && user.errCode === 0) {\r\n                    setStateUser(user.data)\r\n                }\r\n            }\r\n            fetchUser()\r\n        }\r\n    }, [])\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n\r\n    const { data: dataGender } = useFetchAllcode('GENDER');\r\n    const { data: dataRole } = useFetchAllcode('ROLE')\r\n\r\n\r\n    if (dataGender && dataGender.length > 0 && inputValues.genderId === '' && dataRole && dataRole.length > 0 && inputValues.roleId === '') {\r\n        console.log(dataRole)\r\n        setInputValues({ ...inputValues, [\"genderId\"]: dataGender[0].code, [\"roleId\"]: dataRole[0].code })\r\n    }\r\n\r\n\r\n\r\n    let handleOnChangeDatePicker = (date) => {\r\n        setbirthday(date[0])\r\n        setisChangeDate(true)\r\n\r\n    }\r\n    let handleSaveUser = async () => {\r\n        if (isActionADD === true) {\r\n            let res = await createNewUser({\r\n                email: inputValues.email,\r\n                password: inputValues.password,\r\n                firstName: inputValues.firstName,\r\n                lastName: inputValues.lastName,\r\n                address: inputValues.address,\r\n                roleId: inputValues.roleId,\r\n                genderId: inputValues.genderId,\r\n                phonenumber: inputValues.phonenumber,\r\n\r\n                dob: new Date(birthday).getTime(),\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Thêm mới người dùng thành công\")\r\n                setInputValues({\r\n                    ...inputValues,\r\n                    [\"firstName\"]: '',\r\n                    [\"lastName\"]: '',\r\n                    [\"address\"]: '',\r\n                    [\"phonenumber\"]: '',\r\n                    [\"genderId\"]: '',\r\n                    [\"roleId\"]: '',\r\n                    [\"email\"]: '',\r\n\r\n                })\r\n                setbirthday('')\r\n            } else {\r\n                toast.error(res.errMessage)\r\n            }\r\n        } else {\r\n\r\n            let res = await UpdateUserService({\r\n                id: inputValues.id,\r\n                firstName: inputValues.firstName,\r\n                lastName: inputValues.lastName,\r\n                address: inputValues.address,\r\n                roleId: inputValues.roleId,\r\n                genderId: inputValues.genderId,\r\n                phonenumber: inputValues.phonenumber,\r\n                dob: isChangeDate === false ? inputValues.dob : new Date(birthday).getTime()\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Cập nhật người dùng thành công\")\r\n\r\n            } else {\r\n                toast.error(res.errMessage)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý người dùng</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    {isActionADD === true ? 'Thêm mới người dùng' : 'Cập nhật thông tin người dùng'}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Email</label>\r\n                                <input type=\"email\" value={inputValues.email} disabled={isActionADD === true ? false : true} name=\"email\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">Password</label>\r\n                                <input type=\"password\" disabled={isActionADD === true ? false : true} name=\"password\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-4\">\r\n                                <label htmlFor=\"inputEmail4\">Họ</label>\r\n                                <input type=\"text\" value={inputValues.firstName} name=\"firstName\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-4\">\r\n                                <label htmlFor=\"inputEmail4\">Tên</label>\r\n                                <input type=\"text\" value={inputValues.lastName} name=\"lastName\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-4\">\r\n                                <label htmlFor=\"inputEmail4\">Số điện thoại</label>\r\n                                <input type=\"text\" value={inputValues.phonenumber} name=\"phonenumber\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"inputAddress\">Địa chỉ</label>\r\n                            <input type=\"text\" value={inputValues.address} name=\"address\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputAddress\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputCity\">Ngày sinh</label>\r\n                                <DatePicker className=\"form-control\" onChange={handleOnChangeDatePicker}\r\n                                    value={birthday}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputState\">Giới tính</label>\r\n                                <select value={inputValues.genderId} name=\"genderId\" onChange={(event) => handleOnChange(event)} id=\"inputState\" className=\"form-control\">\r\n                                    {dataGender && dataGender.length > 0 &&\r\n                                        dataGender.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.code}>{item.value}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputZip\">Quyền</label>\r\n                                <select value={inputValues.roleId} name=\"roleId\" onChange={(event) => handleOnChange(event)} id=\"inputState\" className=\"form-control\">\r\n                                    {dataRole && dataRole.length > 0 &&\r\n                                        dataRole.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.code}>{item.value}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"button\" onClick={() => handleSaveUser()} className=\"btn btn-primary\">Lưu thông tin</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Adduser;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\User\\ChangePassword.js",["587","588","589","590"],"import React from \"react\";\r\nimport { useEffect, useState } from 'react';\r\nimport './ChangePassword.scss';\r\nimport { handleChangePassword } from '../../../services/userService';\r\nimport { toast } from \"react-toastify\";\r\nimport { useParams } from \"react-router\";\r\nconst ChangePassword = () => {\r\n    const { id } = useParams()\r\n    const [inputValues, setInputValues] = useState({\r\n        newpassword: '', confirmpassword: '', oldpassword: ''\r\n    });\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    let handleSavePassword = async () => {\r\n        if (!inputValues.newpassword || !inputValues.confirmpassword || !inputValues.oldpassword) {\r\n            toast.error(\"Không được để thông tin trống\")\r\n        }\r\n        else if (inputValues.newpassword !== inputValues.confirmpassword) {\r\n            toast.error(\"Mật khẩu nhập lại không trùng khớp !\")\r\n        }\r\n        else {\r\n            let res = await handleChangePassword({\r\n                id: id,\r\n                password: inputValues.confirmpassword,\r\n                oldpassword: inputValues.oldpassword\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Đổi mật khẩu thành công\")\r\n                setInputValues({ ...inputValues, [\"newpassword\"]: '', [\"confirmpassword\"]: '', [\"oldpassword\"]: '' })\r\n            } else {\r\n                toast.error(res.errMessage)\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container-fluid px-4\">\r\n                <h4 className=\"mt-4\">Thay đổi thông tin tài khoản</h4>\r\n\r\n\r\n                <div className=\"card mb-4\">\r\n                    <div className=\"card-header\">\r\n                        <i className=\"fas fa-table me-1\" />\r\n                        Đổi mật khẩu\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form>\r\n                            <div className=\"form-group col-6\">\r\n                                <label htmlFor=\"exampleInputEmail1\">Mật khẩu cũ</label>\r\n                                <input type=\"password\" value={inputValues.oldpassword} name=\"oldpassword\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n\r\n                            </div>\r\n                            <div className=\"form-group col-6\">\r\n                                <label htmlFor=\"exampleInputEmail1\">Mật khẩu mới</label>\r\n                                <input type=\"password\" value={inputValues.newpassword} name=\"newpassword\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n\r\n                            </div>\r\n                            <div className=\"form-group col-6\">\r\n                                <label htmlFor=\"exampleInputPassword1\">Nhập lại mật khẩu</label>\r\n                                <input type=\"password\" value={inputValues.confirmpassword} name=\"confirmpassword\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"exampleInputPassword1\" />\r\n                            </div>\r\n\r\n                            <button onClick={() => handleSavePassword()} type=\"button\" className=\"btn btn-primary ml-3\">Lưu thông tin</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePassword;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Category\\ManageCategory.js",["591","592","593","594","595","596","597","598","599"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useFetchAllcode } from '../../customize/fetch';\r\nimport { DeleteAllcodeService, getListAllCodeService } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport FormSearch from '../../../component/Search/FormSearch';\r\n\r\nconst ManageCategory = () => {\r\n\r\n    const [dataCategory, setdataCategory] = useState([])\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    const [keyword, setkeyword] = useState('')\r\n    useEffect(() => {\r\n       \r\n            fetchData(keyword);\r\n        \r\n\r\n    }, [])\r\n    let fetchData = async (keyword) => {\r\n        let arrData = await getListAllCodeService({\r\n\r\n            type: 'CATEGORY',\r\n            limit: PAGINATION.pagerow,\r\n            offset: 0,\r\n            keyword:keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataCategory(arrData.data)\r\n            setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n        }\r\n    }\r\n    let handleDeleteCategory = async (event, id) => {\r\n        event.preventDefault();\r\n        let res = await DeleteAllcodeService(id)\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Xóa danh mục thành công\")\r\n            let arrData = await getListAllCodeService({\r\n\r\n                type: 'CATEGORY',\r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow,\r\n                keyword:keyword\r\n\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataCategory(arrData.data)\r\n                setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n            }\r\n\r\n        } else toast.error(\"Xóa danh mục thất bại\")\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getListAllCodeService({\r\n\r\n            type: 'CATEGORY',\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow,\r\n            keyword:keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataCategory(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleSearchCategory = (keyword) =>{\r\n        fetchData(keyword)\r\n        setkeyword(keyword)\r\n    }\r\n    let handleOnchangeSearch = (keyword) =>{\r\n        if(keyword === ''){\r\n            fetchData(keyword)\r\n            setkeyword(keyword)\r\n        }\r\n    }\r\n    let handleOnClickExport =async () =>{\r\n        let res = await getListAllCodeService({\r\n            type: 'CATEGORY',\r\n            limit: '',\r\n            offset: '',\r\n            keyword:''\r\n        })\r\n        if(res && res.errCode == 0){\r\n            await CommonUtils.exportExcel(res.data,\"Danh sách danh mục\",\"ListCategory\")\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý danh mục</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách danh mục sản phẩm\r\n                </div>\r\n                <div className=\"card-body\">\r\n                \r\n                    <div className='row'>\r\n                    <div  className='col-4'>\r\n                    <FormSearch title={\"tên danh mục\"}  handleOnchange={handleOnchangeSearch} handleSearch={handleSearchCategory} />\r\n                    </div>\r\n                    <div className='col-8'>\r\n                    <button  style={{float:'right'}} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Tên</th>\r\n                                    <th>mã code</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataCategory && dataCategory.length > 0 &&\r\n                                    dataCategory.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.value}</td>\r\n                                                <td>{item.code}</td>\r\n                                                <td>\r\n                                                    <Link to={`/admin/edit-category/${item.id}`}>Edit</Link>\r\n                                                    &nbsp; &nbsp;\r\n                                                    <a href=\"#\" onClick={(event) => handleDeleteCategory(event, item.id)} >Delete</a>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                        <ReactPaginate\r\n                            previousLabel={'Quay lại'}\r\n                            nextLabel={'Tiếp'}\r\n                            breakLabel={'...'}\r\n                            pageCount={count}\r\n                            marginPagesDisplayed={3}\r\n                            containerClassName={\"pagination justify-content-center\"}\r\n                            pageClassName={\"page-item\"}\r\n                            pageLinkClassName={\"page-link\"}\r\n                            previousLinkClassName={\"page-link\"}\r\n                            nextClassName={\"page-item\"}\r\n                            nextLinkClassName={\"page-link\"}\r\n                            breakLinkClassName={\"page-link\"}\r\n                            breakClassName={\"page-item\"}\r\n                            activeClassName={\"active\"}\r\n                            onPageChange={handleChangePage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ManageCategory;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Category\\AddCategory.js",["600","601","602","603","604","605"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { createAllCodeService, getDetailAllcodeById, UpdateAllcodeService } from '../../../services/userService';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { useParams } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport moment from 'moment';\r\nconst AddCategory = (props) => {\r\n\r\n\r\n\r\n    const [isActionADD, setisActionADD] = useState(true)\r\n\r\n\r\n    const { id } = useParams();\r\n\r\n    const [inputValues, setInputValues] = useState({\r\n        value: '', code: ''\r\n    });\r\n    useEffect(() => {\r\n\r\n        if (id) {\r\n            let fetchDetailCategory = async () => {\r\n                setisActionADD(false)\r\n                let allcode = await getDetailAllcodeById(id)\r\n                if (allcode && allcode.errCode === 0) {\r\n                    setInputValues({ ...inputValues, [\"value\"]: allcode.data.value, [\"code\"]: allcode.data.code })\r\n                }\r\n            }\r\n            fetchDetailCategory()\r\n        }\r\n    }, [])\r\n\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    let handleSaveCategory = async () => {\r\n        if (isActionADD === true) {\r\n            let res = await createAllCodeService({\r\n                value: inputValues.value,\r\n                code: inputValues.code,\r\n                type: 'CATEGORY'\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Thêm danh mục thành công\")\r\n                setInputValues({\r\n                    ...inputValues,\r\n                    [\"value\"]: '',\r\n                    [\"code\"]: ''\r\n                })\r\n            }\r\n            else if (res && res.errCode === 2) {\r\n                toast.error(res.errMessage)\r\n            }\r\n            else toast.error(\"Thêm danh mục thất bại\")\r\n        } else {\r\n            let res = await UpdateAllcodeService({\r\n                value: inputValues.value,\r\n                code: inputValues.code,\r\n                id: id\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Cập nhật danh mục thành công\")\r\n\r\n            }\r\n            else if (res && res.errCode === 2) {\r\n                toast.error(res.errMessage)\r\n            }\r\n            else toast.error(\"Cập nhật danh mục thất bại\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý danh mục</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    {isActionADD === true ? 'Thêm mới danh mục' : 'Cập nhật thông tin danh mục'}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Tên danh mục</label>\r\n                                <input type=\"text\" value={inputValues.value} name=\"value\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">Mã code</label>\r\n                                <input type=\"text\" value={inputValues.code} name=\"code\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => handleSaveCategory()} className=\"btn btn-primary\">Lưu thông tin</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddCategory;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\User\\Information.js",["606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport DatePicker from \"../../../component/input/DatePicker\";\r\nimport moment from \"moment\";\r\nimport {\r\n    getDetailUserById,\r\n    UpdateUserService,\r\n    handleSendVerifyEmail,\r\n} from \"../../../services/userService\";\r\nimport { useFetchAllcode } from \"../../customize/fetch\";\r\nimport CommonUtils from \"../../../utils/CommonUtils\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nconst Information = () => {\r\n    const { id } = useParams();\r\n\r\n    const [birthday, setbirthday] = useState(\"\");\r\n    const [isChangeDate, setisChangeDate] = useState(false);\r\n    const [inputValues, setInputValues] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        address: \"\",\r\n        phonenumber: \"\",\r\n        genderId: \"\",\r\n        dob: \"\",\r\n        roleId: \"\",\r\n        email: \"\",\r\n        image: \"\",\r\n        isActiveEmail: \"\",\r\n        imageReview: \"\",\r\n    });\r\n    const { data: dataGender } = useFetchAllcode(\"GENDER\");\r\n    useEffect(() => {\r\n        let fetchUser = async () => {\r\n            let res = await getDetailUserById(id);\r\n            if (res && res.errCode === 0) {\r\n                setStateUser(res.data);\r\n            }\r\n        };\r\n        fetchUser();\r\n    }, []);\r\n    let setStateUser = (data) => {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"firstName\"]: data.firstName,\r\n            [\"lastName\"]: data.lastName,\r\n            [\"address\"]: data.address,\r\n            [\"phonenumber\"]: data.phonenumber,\r\n            [\"genderId\"]: data.genderId,\r\n            [\"roleId\"]: data.roleId,\r\n            [\"email\"]: data.email,\r\n            [\"id\"]: data.id,\r\n            [\"dob\"]: data.dob,\r\n            [\"image\"]: data.image\r\n                ? data.image\r\n                : \"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\",\r\n            [\"isActiveEmail\"]: data.isActiveEmail,\r\n        });\r\n        setbirthday(\r\n            moment\r\n                .unix(+data.dob / 1000)\r\n                .locale(\"vi\")\r\n                .format(\"DD/MM/YYYY\")\r\n        );\r\n    };\r\n    const handleOnChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n    };\r\n    let handleOnChangeDatePicker = (date) => {\r\n        setbirthday(date[0]);\r\n        setisChangeDate(true);\r\n    };\r\n    let handleSaveInfor = async () => {\r\n        console.log(inputValues.image);\r\n        let res = await UpdateUserService({\r\n            id: id,\r\n            firstName: inputValues.firstName,\r\n            lastName: inputValues.lastName,\r\n            address: inputValues.address,\r\n            roleId: inputValues.roleId,\r\n            genderId: inputValues.genderId,\r\n            phonenumber: inputValues.phonenumber,\r\n            dob:\r\n                isChangeDate === false\r\n                    ? inputValues.dob\r\n                    : new Date(birthday).getTime(),\r\n            image: inputValues.image,\r\n        });\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Cập nhật người dùng thành công\");\r\n        } else {\r\n            toast.error(res.errMessage);\r\n        }\r\n    };\r\n    let handleSendEmail = async () => {\r\n        let res = await handleSendVerifyEmail({\r\n            id: id,\r\n        });\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Vui lòng kiểm tra email !\");\r\n        } else {\r\n            toast.error(res.errMessage);\r\n        }\r\n    };\r\n    let handleOnChangeImage = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if (file?.size > 31312281) {\r\n            toast.error(\"Dung lượng file bé hơn 30mb\");\r\n        } else {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            setInputValues({\r\n                ...inputValues,\r\n                [\"image\"]: base64,\r\n                [\"imageReview\"]: objectUrl,\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container rounded bg-white mt-5 mb-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 border-right\">\r\n                    <div className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n                        <img\r\n                            className=\"rounded-circle mt-5\"\r\n                            height=\"170px\"\r\n                            style={{ objectFit: \"cover\" }}\r\n                            width=\"150px\"\r\n                            src={inputValues.image}\r\n                        />\r\n                        <span className=\"font-weight-bold\">\r\n                            {inputValues.lastName}\r\n                        </span>\r\n                        <div className=\"box-email-verify\">\r\n                            <span className=\"text-black-50\">\r\n                                {inputValues.email}\r\n                            </span>\r\n                            {inputValues.isActiveEmail === 0 && (\r\n                                <i\r\n                                    style={{ color: \"#dc0707\" }}\r\n                                    className=\"fas fa-times-circle\"\r\n                                ></i>\r\n                            )}\r\n                            {inputValues.isActiveEmail === 1 && (\r\n                                <i\r\n                                    style={{ color: \"green\" }}\r\n                                    className=\"fas fa-check-circle\"\r\n                                ></i>\r\n                            )}\r\n                        </div>\r\n\r\n                        {inputValues.isActiveEmail === 0 && (\r\n                            <span\r\n                                onClick={() => handleSendEmail()}\r\n                                className=\"text-verify\"\r\n                            >\r\n                                xác thực\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6 border-right\">\r\n                    <div className=\"p-3 py-5\">\r\n                        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <h4 className=\"text-right\">Thông tin cá nhân</h4>\r\n                        </div>\r\n                        <div className=\"row mt-2\">\r\n                            <div className=\"col-md-6\">\r\n                                <label className=\"labels\">Họ</label>\r\n                                <input\r\n                                    name=\"firstName\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    value={inputValues.firstName}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label className=\"labels\">Tên</label>\r\n                                <input\r\n                                    name=\"lastName\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    value={inputValues.lastName}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-md-12\">\r\n                                <label className=\"labels\">Số điện thoại</label>\r\n                                <input\r\n                                    name=\"phonenumber\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={inputValues.phonenumber}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <label className=\"labels\">Địa chỉ</label>\r\n                                <input\r\n                                    name=\"address\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={inputValues.address}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-md-6\">\r\n                                <label className=\"labels\">Giới tính</label>\r\n                                <select\r\n                                    value={inputValues.genderId}\r\n                                    name=\"genderId\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    id=\"inputState\"\r\n                                    className=\"form-control\"\r\n                                >\r\n                                    {dataGender &&\r\n                                        dataGender.length > 0 &&\r\n                                        dataGender.map((item, index) => {\r\n                                            return (\r\n                                                <option\r\n                                                    key={index}\r\n                                                    value={item.code}\r\n                                                >\r\n                                                    {item.value}\r\n                                                </option>\r\n                                            );\r\n                                        })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label className=\"labels\">Ngày sinh</label>{\" \"}\r\n                                <DatePicker\r\n                                    className=\"form-control\"\r\n                                    onChange={handleOnChangeDatePicker}\r\n                                    value={birthday}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-2\">\r\n                            <div className=\"col-md-3\">\r\n                                <label className=\"labels\">Chọn ảnh</label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"previewImg\"\r\n                                    accept=\".jpg,.png\"\r\n                                    hidden\r\n                                    onChange={(event) =>\r\n                                        handleOnChangeImage(event)\r\n                                    }\r\n                                />\r\n                                <label\r\n                                    style={{\r\n                                        backgroundColor: \"#eee\",\r\n                                        borderRadius: \"5px\",\r\n                                        padding: \"6px\",\r\n                                        cursor: \"pointer\",\r\n                                    }}\r\n                                    className=\"label-upload\"\r\n                                    htmlFor=\"previewImg\"\r\n                                >\r\n                                    Tải ảnh <i className=\"fas fa-upload\"></i>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            onClick={() => handleSaveInfor()}\r\n                            className=\"mt-5 text-center\"\r\n                        >\r\n                            <button\r\n                                className=\"btn btn-primary profile-button\"\r\n                                type=\"button\"\r\n                            >\r\n                                Lưu thông tin\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Information;\r\n","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ProductDetail\\AddProductDetail.js",["623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport CommonUtils from \"../../../../utils/CommonUtils\";\r\nimport \"../AddProduct.scss\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { useFetchAllcode } from \"../../../customize/fetch\";\r\nimport { CreateNewProductDetailService } from \"../../../../services/userService\";\r\nconst AddProductDetail = (props) => {\r\n    const { data: dataSize } = useFetchAllcode(\"SIZE\");\r\n    const { id } = useParams();\r\n    const [inputValues, setInputValues] = useState({\r\n        width: \"\",\r\n        height: \"\",\r\n        sizeId: \"\",\r\n        originalPrice: \"\",\r\n        discountPrice: \"\",\r\n        image: \"\",\r\n        imageReview: \"\",\r\n        isOpen: false,\r\n        nameDetail: \"\",\r\n        description: \"\",\r\n        weight: \"\",\r\n    });\r\n\r\n    if (dataSize && dataSize.length > 0 && inputValues.sizeId === \"\") {\r\n        setInputValues({ ...inputValues, [\"sizeId\"]: dataSize[0].code });\r\n    }\r\n    const handleOnChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n    };\r\n\r\n    let handleOnChangeImage = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if (file?.size > 31312281) {\r\n            toast.error(\"Dung lượng file bé hơn 30mb\");\r\n        } else {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            setInputValues({\r\n                ...inputValues,\r\n                [\"image\"]: base64,\r\n                [\"imageReview\"]: objectUrl,\r\n            });\r\n        }\r\n    };\r\n    let openPreviewImage = () => {\r\n        if (!inputValues.imageReview) return;\r\n\r\n        setInputValues({ ...inputValues, [\"isOpen\"]: true });\r\n    };\r\n    let handleSaveProductDetail = async () => {\r\n        let res = await CreateNewProductDetailService({\r\n            id: id,\r\n            width: inputValues.width,\r\n            height: inputValues.height,\r\n            description: inputValues.description,\r\n            sizeId: inputValues.sizeId,\r\n\r\n            originalPrice: inputValues.originalPrice,\r\n            discountPrice: inputValues.discountPrice,\r\n            image: inputValues.image,\r\n            nameDetail: inputValues.nameDetail,\r\n            weight: inputValues.weight,\r\n        });\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Tạo mới loại sản phẩm thành công!\");\r\n            setInputValues({\r\n                ...inputValues,\r\n\r\n                [\"width\"]: \"\",\r\n                [\"height\"]: \"\",\r\n                [\"description\"]: \"\",\r\n                [\"sizeId\"]: \"\",\r\n\r\n                [\"originalPrice\"]: \"\",\r\n                [\"discountPrice\"]: \"\",\r\n                [\"image\"]: \"\",\r\n                [\"imageReview\"]: \"\",\r\n                [\"nameDetail\"]: \"\",\r\n                [\"weight\"]: \"\",\r\n            });\r\n        } else {\r\n            toast.error(res.errMessage);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý chi tiết sản phẩm</h1>\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Thêm mới chi tiết sản phẩm\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">\r\n                                    Tên loại sản phẩm\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputValues.nameDetail}\r\n                                    name=\"nameDetail\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputEmail4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Chiều rộng</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputValues.width}\r\n                                    name=\"width\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputEmail4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPassword4\">\r\n                                    chiều dài\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputValues.height}\r\n                                    name=\"height\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputPassword4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label htmlFor=\"inputEmail4\">Giá gốc</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={inputValues.originalPrice}\r\n                                    name=\"originalPrice\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputEmail4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label htmlFor=\"inputPassword4\">\r\n                                    Giá khuyến mãi\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={inputValues.discountPrice}\r\n                                    name=\"discountPrice\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputPassword4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPassword4\">\r\n                                    Khối lượng\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputValues.weight}\r\n                                    name=\"weight\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputPassword4\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"inputAddress\">Mô tả chi tiết</label>\r\n                            <textarea\r\n                                rows=\"4\"\r\n                                value={inputValues.description}\r\n                                name=\"description\"\r\n                                onChange={(event) => handleOnChange(event)}\r\n                                className=\"form-control\"\r\n                            ></textarea>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPassword4\">\r\n                                    Kích thước\r\n                                </label>\r\n                                <select\r\n                                    value={inputValues.sizeId}\r\n                                    name=\"sizeId\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    id=\"inputState\"\r\n                                    className=\"form-control\"\r\n                                >\r\n                                    {dataSize &&\r\n                                        dataSize.length > 0 &&\r\n                                        dataSize.map((item, index) => {\r\n                                            return (\r\n                                                <option\r\n                                                    key={index}\r\n                                                    value={item.code}\r\n                                                >\r\n                                                    {item.value}\r\n                                                </option>\r\n                                            );\r\n                                        })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label htmlFor=\"inputPassword4\">\r\n                                    Chọn hình ảnh\r\n                                </label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"previewImg\"\r\n                                    accept=\".jpg,.png\"\r\n                                    hidden\r\n                                    onChange={(event) =>\r\n                                        handleOnChangeImage(event)\r\n                                    }\r\n                                />\r\n                                <br></br>\r\n                                <label\r\n                                    style={{\r\n                                        backgroundColor: \"#eee\",\r\n                                        borderRadius: \"5px\",\r\n                                        padding: \"6px\",\r\n                                        cursor: \"pointer\",\r\n                                    }}\r\n                                    className=\"label-upload\"\r\n                                    htmlFor=\"previewImg\"\r\n                                >\r\n                                    Tải ảnh <i className=\"fas fa-upload\"></i>\r\n                                </label>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundImage: `url(${inputValues.imageReview})`,\r\n                                    }}\r\n                                    onClick={() => openPreviewImage()}\r\n                                    className=\"box-image\"\r\n                                ></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button\r\n                            onClick={() => handleSaveProductDetail()}\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                        >\r\n                            Lưu thông tin\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            {inputValues.isOpen === true && (\r\n                <Lightbox\r\n                    mainSrc={inputValues.imageReview}\r\n                    onCloseRequest={() =>\r\n                        setInputValues({ ...inputValues, [\"isOpen\"]: false })\r\n                    }\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default AddProductDetail;\r\n","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ProductDetail\\EditProductDetail.js",["639","640","641","642","643","644","645"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useParams } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CommonUtils from '../../../../utils/CommonUtils';\r\nimport '../AddProduct.scss';\r\nimport { getProductDetailByIdService, UpdateProductDetailService } from '../../../../services/userService';\r\nconst EditProductDetail = (props) => {\r\n\r\n    const [inputValues, setInputValues] = useState({\r\n\r\n        originalPrice: '', discountPrice: '',\r\n        image: '', imageReview: '', isOpen: false, nameDetail: '', description: ''\r\n    });\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        let fetchProductDetail = async () => {\r\n            let res = await getProductDetailByIdService(id)\r\n            if (res && res.errCode === 0) {\r\n                setStateProductdetail(res.data)\r\n            }\r\n        }\r\n        fetchProductDetail();\r\n    }, [])\r\n    let setStateProductdetail = (data) => {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"originalPrice\"]: data.originalPrice,\r\n            [\"stock\"]: data.stock,\r\n            [\"discountPrice\"]: data.discountPrice,\r\n            [\"nameDetail\"]: data.nameDetail,\r\n            [\"description\"]: data.description,\r\n        })\r\n\r\n    }\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n\r\n    let handleSaveProductDetail = async () => {\r\n\r\n        let res = await UpdateProductDetailService({\r\n            id: id,\r\n\r\n            description: inputValues.description,\r\n\r\n\r\n            originalPrice: inputValues.originalPrice,\r\n            discountPrice: inputValues.discountPrice,\r\n            nameDetail: inputValues.nameDetail\r\n        })\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Cập nhật loại sản phẩm thành công!\")\r\n        } else {\r\n            toast.error(res.errMessage)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý chi tiết sản phẩm</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Cập nhật chi tiết sản phẩm\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Tên loại sản phẩm</label>\r\n                                <input type=\"text\" value={inputValues.nameDetail} name=\"nameDetail\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Giá gốc</label>\r\n                                <input type=\"number\" value={inputValues.originalPrice} name=\"originalPrice\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPassword4\">Giá khuyến mãi</label>\r\n                                <input type=\"number\" value={inputValues.discountPrice} name=\"discountPrice\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"inputAddress\">Mô tả chi tiết</label>\r\n                            <textarea rows=\"4\" value={inputValues.description} name=\"description\" onChange={(event) => handleOnChange(event)} className=\"form-control\"></textarea>\r\n                        </div>\r\n\r\n                        <button onClick={() => handleSaveProductDetail()} type=\"button\" className=\"btn btn-primary\">Lưu thông tin</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default EditProductDetail;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\EditProduct.js",["646","647","648","649","650","651","652","653","654","655"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { useParams } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useFetchAllcode } from '../../customize/fetch';\r\nimport './AddProduct.scss';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport { getDetailProductByIdService, UpdateProductService } from '../../../services/userService';\r\nconst EditProduct = (props) => {\r\n    const mdParser = new MarkdownIt();\r\n    const { id } = useParams();\r\n    const { data: dataBrand } = useFetchAllcode('BRAND');\r\n    const { data: dataCategory } = useFetchAllcode('CATEGORY')\r\n\r\n    const [inputValues, setInputValues] = useState({\r\n        brandId: '', categoryId: '', name: '',contentHTML: '', contentMarkdown: '',\r\n        madeby: '', material: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        let fetchProduct = async () => {\r\n            let res = await getDetailProductByIdService(id)\r\n            if (res && res.errCode === 0) {\r\n                setStateProduct(res.data)\r\n            }\r\n        }\r\n        fetchProduct();\r\n    }, [])\r\n    let setStateProduct = (data) => {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"brandId\"]: data.brandId,\r\n            [\"categoryId\"]: data.categoryId,\r\n            [\"name\"]: data.name,\r\n            [\"contentMarkdown\"]: data.contentMarkdown,\r\n            [\"contentHTML\"]: data.contentHTML,\r\n            [\"madeby\"]: data.madeby,\r\n            [\"material\"]: data.material,\r\n        })\r\n\r\n    }\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    let handleSaveProduct = async () => {\r\n        let res = await UpdateProductService({\r\n            name: inputValues.name,\r\n            material: inputValues.material,\r\n            madeby: inputValues.madeby,\r\n            brandId: inputValues.brandId,\r\n            categoryId: inputValues.categoryId,\r\n            contentHTML: inputValues.contentHTML,\r\n            contentMarkdown: inputValues.contentMarkdown,\r\n            id: id\r\n        })\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Cập nhật sản phẩm thành công !\")\r\n        } else {\r\n            toast.error(res.errMessage)\r\n        }\r\n    }\r\n    let handleEditorChange = ({ html, text }) => {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"contentMarkdown\"]: text,\r\n            [\"contentHTML\"]: html\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý sản phẩm</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Cập nhật sản phẩm\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Tên sản phẩm</label>\r\n                                <input type=\"text\" value={inputValues.name} name=\"name\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPassword4\">Chất liệu</label>\r\n                                <input type=\"text\" value={inputValues.material} name=\"material\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPassword4\">Được làm bởi</label>\r\n                                <input type=\"text\" value={inputValues.madeby} name=\"madeby\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"inputAddress\">Mô tả sản phẩm</label>\r\n                            <MdEditor\r\n                                style={{ height: '400px' }}\r\n                                renderHTML={text => mdParser.render(text)}\r\n                                onChange={handleEditorChange}\r\n                                value={inputValues.contentMarkdown}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Danh mục sản phẩm</label>\r\n                                <select value={inputValues.categoryId} name=\"categoryId\" onChange={(event) => handleOnChange(event)} id=\"inputState\" className=\"form-control\">\r\n                                    {dataCategory && dataCategory.length > 0 &&\r\n                                        dataCategory.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.code}>{item.value}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">Nhãn hàng</label>\r\n                                <select value={inputValues.brandId} name=\"brandId\" onChange={(event) => handleOnChange(event)} id=\"inputState\" className=\"form-control\">\r\n                                    {dataBrand && dataBrand.length > 0 &&\r\n                                        dataBrand.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.code}>{item.value}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <button onClick={() => handleSaveProduct()} type=\"button\" className=\"btn btn-primary\">Lưu thông tin</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default EditProduct;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ManageProduct.js",["656","657","658","659","660","661","662"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { getAllProductAdmin, handleBanProductService, handleActiveProductService } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport FormSearch from '../../../component/Search/FormSearch';\r\nconst ManageProduct = () => {\r\n\r\n    const [dataProduct, setdataProduct] = useState([])\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    const [keyword, setkeyword] = useState('')\r\n    useEffect(() => {\r\n\r\n        let fetchProduct = async () => {\r\n            await loadProduct(keyword)\r\n        }\r\n        fetchProduct()\r\n    }, [])\r\n    let loadProduct = async (keyword) => {\r\n        let arrData = await getAllProductAdmin({\r\n\r\n            sortName: '',\r\n            sortPrice: '',\r\n            categoryId: 'ALL',\r\n            brandId: 'ALL',\r\n            limit: PAGINATION.pagerow,\r\n            offset: 0,\r\n            keyword:keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataProduct(arrData.data)\r\n            setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n        }\r\n    }\r\n    let handleBanProduct = async (id) => {\r\n\r\n        let data = await handleBanProductService({\r\n            id: id\r\n        })\r\n        if (data && data.errCode === 0) {\r\n            toast.success(\"Ẩn sản phẩm thành công!\")\r\n            let arrData = await getAllProductAdmin({\r\n\r\n                sortName: '',\r\n                sortPrice: '',\r\n                categoryId: 'ALL',\r\n                brandId: 'ALL',\r\n                keyword:'',\r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow\r\n\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataProduct(arrData.data)\r\n                setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n            }\r\n        } else {\r\n            toast.error(\"Ẩn sản phẩm thất bại!\")\r\n        }\r\n    }\r\n    let handleActiveProduct = async (id) => {\r\n\r\n        let data = await handleActiveProductService({\r\n            id: id\r\n        })\r\n        if (data && data.errCode === 0) {\r\n            toast.success(\"Hiện sản phẩm thành công!\")\r\n            loadProduct('');\r\n        } else {\r\n            toast.error(\"Hiện sản phẩm thất bại!\")\r\n        }\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getAllProductAdmin({\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow,\r\n            sortName: '',\r\n            sortPrice: '',\r\n            categoryId: 'ALL',\r\n            brandId: 'ALL',\r\n            keyword:keyword\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataProduct(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleSearchProduct = (keyword) =>{\r\n        loadProduct(keyword)\r\n        setkeyword(keyword)\r\n    }\r\n    let handleOnchangeSearch = (keyword) =>{\r\n        if(keyword === ''){\r\n            loadProduct(keyword)\r\n            setkeyword(keyword)\r\n         }\r\n        \r\n    }\r\n    let handleOnClickExport =async () =>{\r\n        let res = await getAllProductAdmin({\r\n            sortName: '',\r\n            sortPrice: '',\r\n            categoryId: 'ALL',\r\n            brandId: 'ALL',\r\n            keyword:'',\r\n            limit: '',\r\n            offset: ''\r\n        })\r\n        if(res && res.errCode == 0){\r\n            await CommonUtils.exportExcel(res.data,\"Danh sách sản phẩm\",\"ListProduct\")\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý sản phẩm</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách sản phẩm\r\n\r\n                </div>\r\n             \r\n                   \r\n              \r\n                <div className=\"card-body\">\r\n                  \r\n                    <div className='row'>\r\n                    <div  className='col-4'>\r\n                    <FormSearch title={\"tên sản phẩm\"} handleOnchange={handleOnchangeSearch} handleSearch={handleSearchProduct} />                    </div>\r\n                    <div className='col-8'>\r\n                    <button  style={{float:'right'}} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Tên sản phẩm</th>\r\n                                    <th>Danh mục</th>\r\n                                    <th>Nhãn hàng</th>\r\n                                    <th>Chất liệu</th>\r\n                                    <th>Được làm bởi</th>\r\n                                    <th>Lượt xem</th>\r\n                                    <th>Trạng thái</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataProduct && dataProduct.length > 0 &&\r\n                                    dataProduct.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.name}</td>\r\n                                                <td>{item.categoryData.value}</td>\r\n                                                <td>{item.brandData.value}</td>\r\n                                                <td>{item.material}</td>\r\n                                                <td>{item.madeby}</td>\r\n                                                <td>{item.view ? item.view : 0}</td>\r\n                                                <td>{item.statusData.value}</td>\r\n                                                <td style={{ width: '12%' }}>\r\n                                                    <Link to={`/admin/list-product-detail/${item.id}`}>View</Link>\r\n                                                    &nbsp; &nbsp;\r\n                                                    <Link to={`/admin/edit-product/${item.id}`}>Edit</Link>\r\n                                                    &nbsp; &nbsp;\r\n                                                    {item.statusData.code === 'S1' ?\r\n                                                        <span onClick={() => handleBanProduct(item.id)} style={{ color: '#0E6DFE', cursor: 'pointer' }} >Ban</span>\r\n                                                        : <span onClick={() => handleActiveProduct(item.id)} style={{ color: '#0E6DFE', cursor: 'pointer' }}   >Active</span>\r\n                                                    }\r\n\r\n\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'Quay lại'}\r\n                nextLabel={'Tiếp'}\r\n                breakLabel={'...'}\r\n                pageCount={count}\r\n                marginPagesDisplayed={3}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                activeClassName={\"active\"}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ManageProduct;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Banner\\AddBanner.js",["663","664","665","666","667","668","669","670","671","672","673","674","675","676","677"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n    createNewBannerService,\r\n    getDetailBannerByIdService,\r\n    updateBannerService,\r\n} from \"../../../services/userService\";\r\nimport CommonUtils from \"../../../utils/CommonUtils\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./AddBanner.scss\";\r\nimport moment from \"moment\";\r\nconst AddBanner = (props) => {\r\n    const { id } = useParams();\r\n\r\n    const [inputValues, setInputValues] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        image: \"\",\r\n        isActionADD: true,\r\n        imageReview: \"\",\r\n        isOpen: false,\r\n    });\r\n    useEffect(() => {\r\n        if (id) {\r\n            let fetchBanner = async () => {\r\n                let res = await getDetailBannerByIdService(id);\r\n                if (res && res.errCode === 0) {\r\n                    setStateBanner(res.data);\r\n                }\r\n            };\r\n            fetchBanner();\r\n        }\r\n    }, []);\r\n    let setStateBanner = (data) => {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"name\"]: data.name,\r\n            [\"description\"]: data.description,\r\n            [\"image\"]: data.image,\r\n            [\"imageReview\"]: data.image,\r\n            [\"isActionADD\"]: false,\r\n        });\r\n    };\r\n    const handleOnChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n    };\r\n    let handleOnChangeImage = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if (file?.size > 31312281) {\r\n            toast.error(\"Dung lượng file bé hơn 30mb\");\r\n        } else {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            console.log(base64);\r\n            setInputValues({\r\n                ...inputValues,\r\n                [\"image\"]: base64,\r\n                [\"imageReview\"]: objectUrl,\r\n            });\r\n        }\r\n    };\r\n    let openPreviewImage = () => {\r\n        if (!inputValues.imageReview) return;\r\n\r\n        setInputValues({ ...inputValues, [\"isOpen\"]: true });\r\n    };\r\n    let handleSaveBanner = async () => {\r\n        if (inputValues.isActionADD === true) {\r\n            let res = await createNewBannerService({\r\n                name: inputValues.name,\r\n                description: inputValues.description,\r\n                image: inputValues.image,\r\n            });\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Tạo mới băng rôn thành công !\");\r\n                setInputValues({\r\n                    ...inputValues,\r\n                    [\"name\"]: \"\",\r\n                    [\"image\"]: \"\",\r\n                    [\"description\"]: \"\",\r\n                    [\"imageReview\"]: \"\",\r\n                });\r\n            } else {\r\n                toast.error(res.errMessage);\r\n            }\r\n        } else {\r\n            let res = await updateBannerService({\r\n                name: inputValues.name,\r\n                description: inputValues.description,\r\n                image: inputValues.image,\r\n                id: id,\r\n            });\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Cập nhật băng rôn thành công !\");\r\n            } else {\r\n                toast.error(res.errMessage);\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý băng rôn</h1>\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    {inputValues.isActionADD === true\r\n                        ? \"Thêm mới băng rôn\"\r\n                        : \"Cập nhật thông tin băng rôn\"}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">\r\n                                    Tên băng rôn\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputValues.name}\r\n                                    name=\"name\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputEmail4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-4 form-group\">\r\n                                <label>Chọn hình ảnh</label>\r\n                                <input\r\n                                    accept=\".jpg,.png\"\r\n                                    onChange={(event) =>\r\n                                        handleOnChangeImage(event)\r\n                                    }\r\n                                    type=\"file\"\r\n                                    className=\"form-control form-file\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">\r\n                                    Hình ảnh hiển thị\r\n                                </label>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundImage: `url(${inputValues.imageReview})`,\r\n                                    }}\r\n                                    onClick={() => openPreviewImage()}\r\n                                    className=\"box-img-preview\"\r\n                                ></div>\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label htmlFor=\"inputAddress\">\r\n                                    Mô tả chi tiết\r\n                                </label>\r\n                                <textarea\r\n                                    rows=\"4\"\r\n                                    value={inputValues.description}\r\n                                    name=\"description\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                ></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            onClick={() => handleSaveBanner()}\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                        >\r\n                            Lưu thông tin\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            {inputValues.isOpen === true && (\r\n                <Lightbox\r\n                    mainSrc={inputValues.imageReview}\r\n                    onCloseRequest={() =>\r\n                        setInputValues({ ...inputValues, [\"isOpen\"]: false })\r\n                    }\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default AddBanner;\r\n","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\AddProduct.js",["678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useFetchAllcode } from \"../../customize/fetch\";\r\nimport CommonUtils from \"../../../utils/CommonUtils\";\r\nimport localization from \"moment/locale/vi\";\r\nimport moment from \"moment\";\r\nimport \"./AddProduct.scss\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { CreateNewProduct } from \"../../../services/userService\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nconst AddProduct = (props) => {\r\n    const mdParser = new MarkdownIt();\r\n    const { data: dataBrand } = useFetchAllcode(\"BRAND\");\r\n    const { data: dataCategory } = useFetchAllcode(\"CATEGORY\");\r\n    const { data: dataSize } = useFetchAllcode(\"SIZE\");\r\n    const [inputValues, setInputValues] = useState({\r\n        brandId: \"\",\r\n        categoryId: \"\",\r\n        name: \"\",\r\n        shortdescription: \"\",\r\n        description: \"\",\r\n        madeby: \"\",\r\n        material: \"\",\r\n        width: \"\",\r\n        height: \"\",\r\n        sizeId: \"\",\r\n        originalPrice: \"\",\r\n        discountPrice: \"\",\r\n        image: \"\",\r\n        imageReview: \"\",\r\n        isOpen: false,\r\n        nameDetail: \"\",\r\n        contentHTML: \"\",\r\n        contentMarkdown: \"\",\r\n        weight: \"\",\r\n    });\r\n\r\n    if (\r\n        dataBrand &&\r\n        dataBrand.length > 0 &&\r\n        inputValues.brandId === \"\" &&\r\n        dataCategory &&\r\n        dataCategory.length > 0 &&\r\n        inputValues.categoryId === \"\" &&\r\n        dataSize &&\r\n        dataSize.length > 0 &&\r\n        inputValues.sizeId === \"\"\r\n    ) {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"brandId\"]: dataBrand[0].code,\r\n            [\"categoryId\"]: dataCategory[0].code,\r\n            [\"sizeId\"]: dataSize[0].code,\r\n        });\r\n    }\r\n    const handleOnChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n    };\r\n\r\n    let handleOnChangeImage = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if (file?.size > 31312281) {\r\n            toast.error(\"Dung lượng file bé hơn 30mb\");\r\n        } else {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            setInputValues({\r\n                ...inputValues,\r\n                [\"image\"]: base64,\r\n                [\"imageReview\"]: objectUrl,\r\n            });\r\n        }\r\n    };\r\n    let openPreviewImage = () => {\r\n        if (!inputValues.imageReview) return;\r\n\r\n        setInputValues({ ...inputValues, [\"isOpen\"]: true });\r\n    };\r\n    let handleSaveProduct = async () => {\r\n        console.log(inputValues.sizeId);\r\n        let res = await CreateNewProduct({\r\n            name: inputValues.name,\r\n            description: inputValues.description,\r\n            categoryId: inputValues.categoryId,\r\n            madeby: inputValues.madeby,\r\n            material: inputValues.material,\r\n            brandId: inputValues.brandId,\r\n            width: inputValues.width,\r\n            height: inputValues.height,\r\n            sizeId: inputValues.sizeId,\r\n\r\n            originalPrice: inputValues.originalPrice,\r\n            discountPrice: inputValues.discountPrice,\r\n            image: inputValues.image,\r\n            nameDetail: inputValues.nameDetail,\r\n            contentMarkdown: inputValues.contentMarkdown,\r\n            contentHTML: inputValues.contentHTML,\r\n            weight: inputValues.weight,\r\n        });\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Tạo mới sản phẩm thành công!\");\r\n            setInputValues({\r\n                ...inputValues,\r\n                [\"name\"]: \"\",\r\n                [\"shortdescription\"]: \"\",\r\n                [\"categoryId\"]: \"\",\r\n                [\"madeby\"]: \"\",\r\n                [\"material\"]: \"\",\r\n                [\"brandId\"]: \"\",\r\n                [\"height\"]: \"\",\r\n                [\"width\"]: \"\",\r\n                [\"sizeId\"]: \"\",\r\n\r\n                [\"originalPrice\"]: \"\",\r\n                [\"discountPrice\"]: \"\",\r\n                [\"image\"]: \"\",\r\n                [\"imageReview\"]: \"\",\r\n                [\"nameDetail\"]: \"\",\r\n                [\"contentHTML\"]: \"\",\r\n                [\"contenMarkdown\"]: \"\",\r\n                [\"weight\"]: \"\",\r\n            });\r\n        } else {\r\n            toast.error(res.errMessage);\r\n        }\r\n    };\r\n    let handleEditorChange = ({ html, text }) => {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"contentMarkdown\"]: text,\r\n            [\"contentHTML\"]: html,\r\n        });\r\n    };\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý sản phẩm</h1>\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Thêm mới sản phẩm\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">\r\n                                    Tên sản phẩm\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputValues.name}\r\n                                    name=\"name\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputEmail4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPassword4\">\r\n                                    Chất liệu\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputValues.material}\r\n                                    name=\"material\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputPassword4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPassword4\">\r\n                                    Được làm bởi\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputValues.madeby}\r\n                                    name=\"madeby\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputPassword4\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">\r\n                                    Danh mục sản phẩm\r\n                                </label>\r\n                                <select\r\n                                    value={inputValues.categoryId}\r\n                                    name=\"categoryId\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    id=\"inputState\"\r\n                                    className=\"form-control\"\r\n                                >\r\n                                    {dataCategory &&\r\n                                        dataCategory.length > 0 &&\r\n                                        dataCategory.map((item, index) => {\r\n                                            return (\r\n                                                <option\r\n                                                    key={index}\r\n                                                    value={item.code}\r\n                                                >\r\n                                                    {item.value}\r\n                                                </option>\r\n                                            );\r\n                                        })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">\r\n                                    Nhãn hàng\r\n                                </label>\r\n                                <select\r\n                                    value={inputValues.brandId}\r\n                                    name=\"brandId\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    id=\"inputState\"\r\n                                    className=\"form-control\"\r\n                                >\r\n                                    {dataBrand &&\r\n                                        dataBrand.length > 0 &&\r\n                                        dataBrand.map((item, index) => {\r\n                                            return (\r\n                                                <option\r\n                                                    key={index}\r\n                                                    value={item.code}\r\n                                                >\r\n                                                    {item.value}\r\n                                                </option>\r\n                                            );\r\n                                        })}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"inputAddress\">Mô tả sản phẩm</label>\r\n                            <MdEditor\r\n                                style={{ height: \"400px\" }}\r\n                                renderHTML={(text) => mdParser.render(text)}\r\n                                onChange={handleEditorChange}\r\n                                value={inputValues.contentMarkdown}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">\r\n                                    Tên loại sản phẩm\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputValues.nameDetail}\r\n                                    name=\"nameDetail\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputEmail4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Chiều rộng</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputValues.width}\r\n                                    name=\"width\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputEmail4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPassword4\">\r\n                                    chiều dài\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputValues.height}\r\n                                    name=\"height\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputPassword4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Giá gốc</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={inputValues.originalPrice}\r\n                                    name=\"originalPrice\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputEmail4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPassword4\">\r\n                                    Giá khuyến mãi\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={inputValues.discountPrice}\r\n                                    name=\"discountPrice\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputPassword4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Khối lượng</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputValues.weight}\r\n                                    name=\"weight\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputEmail4\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"inputAddress\">Mô tả chi tiết</label>\r\n                            <textarea\r\n                                rows=\"4\"\r\n                                value={inputValues.description}\r\n                                name=\"description\"\r\n                                onChange={(event) => handleOnChange(event)}\r\n                                className=\"form-control\"\r\n                            ></textarea>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Kích thước</label>\r\n                                <select\r\n                                    value={inputValues.sizeId}\r\n                                    name=\"sizeId\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    id=\"inputState\"\r\n                                    className=\"form-control\"\r\n                                >\r\n                                    {dataSize &&\r\n                                        dataSize.length > 0 &&\r\n                                        dataSize.map((item, index) => {\r\n                                            return (\r\n                                                <option\r\n                                                    key={index}\r\n                                                    value={item.code}\r\n                                                >\r\n                                                    {item.value}\r\n                                                </option>\r\n                                            );\r\n                                        })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPassword4\">\r\n                                    Chọn hình ảnh\r\n                                </label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"previewImg\"\r\n                                    accept=\".jpg,.png\"\r\n                                    hidden\r\n                                    onChange={(event) =>\r\n                                        handleOnChangeImage(event)\r\n                                    }\r\n                                />\r\n                                <br></br>\r\n                                <label\r\n                                    style={{\r\n                                        backgroundColor: \"#eee\",\r\n                                        borderRadius: \"5px\",\r\n                                        padding: \"6px\",\r\n                                        cursor: \"pointer\",\r\n                                    }}\r\n                                    className=\"label-upload\"\r\n                                    htmlFor=\"previewImg\"\r\n                                >\r\n                                    Tải ảnh <i className=\"fas fa-upload\"></i>\r\n                                </label>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundImage: `url(${inputValues.imageReview})`,\r\n                                    }}\r\n                                    onClick={() => openPreviewImage()}\r\n                                    className=\"box-image\"\r\n                                ></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button\r\n                            onClick={() => handleSaveProduct()}\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                        >\r\n                            Lưu thông tin\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            {inputValues.isOpen === true && (\r\n                <Lightbox\r\n                    mainSrc={inputValues.imageReview}\r\n                    onCloseRequest={() =>\r\n                        setInputValues({ ...inputValues, [\"isOpen\"]: false })\r\n                    }\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default AddProduct;\r\n","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ProductDetail\\ManageProductDetail.js",["708","709","710","711","712","713"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { getAllProductDetailByIdService, DeleteProductDetailService } from '../../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { PAGINATION } from '../../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CommonUtils from '../../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nconst ManageProductDetail = () => {\r\n\r\n    const { id } = useParams()\r\n    const [dataProductDetail, setdataProductDetail] = useState([])\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    useEffect(() => {\r\n\r\n        let fetchProductDetail = async () => {\r\n            await loadProductDetail()\r\n        }\r\n        fetchProductDetail()\r\n    }, [])\r\n    let loadProductDetail = async () => {\r\n        let arrData = await getAllProductDetailByIdService({\r\n\r\n            id: id,\r\n            limit: PAGINATION.pagerow,\r\n            offset: 0\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataProductDetail(arrData.data)\r\n            setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n        }\r\n    }\r\n    let handleDeleteProductDetail = async (productdetailId) => {\r\n        let response = await DeleteProductDetailService({\r\n            data: {\r\n                id: productdetailId\r\n            }\r\n        })\r\n        if (response && response.errCode === 0) {\r\n            toast.success(\"Xóa chi tiết sản phẩm thành công !\")\r\n\r\n            let arrData = await getAllProductDetailByIdService({\r\n\r\n                id: id,\r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow\r\n\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataProductDetail(arrData.data)\r\n                setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n            }\r\n\r\n        } else {\r\n            toast.error(\"Xóa sản phẩm thất bại\")\r\n        }\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getAllProductDetailByIdService({\r\n\r\n            id: id,\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataProductDetail(arrData.data)\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý chi tiết sản phẩm</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách chi tiết sản phẩm\r\n                    <div className=\"float-right\"><Link to={`/admin/add-product-detail/${id}`}><i style={{ fontSize: '35px', cursor: 'pointer', color: '#0D6EFD' }} className=\"fas fa-plus-square\"></i></Link></div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Tên loại sản phẩm</th>\r\n                                    <th>Giá gốc</th>\r\n                                    <th>Giá khuyến mãi</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataProductDetail && dataProductDetail.length > 0 &&\r\n                                    dataProductDetail.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.nameDetail}</td>\r\n                                                <td>{CommonUtils.formatter.format(item.originalPrice)}</td>\r\n                                                <td>{CommonUtils.formatter.format(item.discountPrice)}</td>\r\n                                                <td>\r\n                                                    <Link to={`/admin/list-product-detail-image/${item.id}`}>View</Link>\r\n                                                    &nbsp; &nbsp;\r\n                                                    <Link to={`/admin/update-product-detail/${item.id}`}>Edit</Link>\r\n                                                    &nbsp; &nbsp;\r\n                                                    <span onClick={() => handleDeleteProductDetail(item.id)} style={{ color: '#0E6DFE', cursor: 'pointer' }}   >Delete</span>\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'Quay lại'}\r\n                nextLabel={'Tiếp'}\r\n                breakLabel={'...'}\r\n                pageCount={count}\r\n                marginPagesDisplayed={3}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                activeClassName={\"active\"}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ManageProductDetail;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ProductImage\\ManageProductImage.js",["714","715","716","717","718","719","720"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n    getAllProductDetailImageByIdService, createNewProductImageService, UpdateProductDetailImageService,\r\n    DeleteProductDetailImageService, getAllProductDetailSizeByIdService, createNewProductSizeService,\r\n    UpdateProductDetailSizeService, DeleteProductDetailSizeService\r\n} from '../../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport './ManageProductImage.scss';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport { PAGINATION } from '../../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport AddImageModal from './AddImageModal';\r\nimport AddSizeModal from './AddSizeModal';\r\nconst ManageProductImage = () => {\r\n\r\n    const { id } = useParams()\r\n    const [dataProductDetailImage, setdataProductDetailImage] = useState([])\r\n    const [dataProductDetailSize, setdataProductDetailSize] = useState([])\r\n    const [isOpen, setisOpen] = useState(false)\r\n    const [isOpenModal, setisOpenModal] = useState(false)\r\n    const [isOpenModalSize, setisOpenModalSize] = useState(false)\r\n    const [imgPreview, setimgPreview] = useState('')\r\n    const [productImageId, setproductImageId] = useState('')\r\n    const [productSizeId, setproductSizeId] = useState('')\r\n    const [count, setCount] = useState('')\r\n    const [countSize, setcountSizes] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    useEffect(() => {\r\n\r\n        let fetchProductDetailImage = async () => {\r\n            await loadProductDetailImage()\r\n        }\r\n        let fetchProductSize = async () => {\r\n            await loadProductDetailSize()\r\n        }\r\n        fetchProductDetailImage()\r\n        fetchProductSize()\r\n\r\n    }, [])\r\n    let loadProductDetailImage = async () => {\r\n\r\n        let arrData = await getAllProductDetailImageByIdService({\r\n\r\n            id: id,\r\n            limit: PAGINATION.pagerow,\r\n            offset: 0\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataProductDetailImage(arrData.data)\r\n            setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n        }\r\n    }\r\n    let loadProductDetailSize = async () => {\r\n        let arrSize = await getAllProductDetailSizeByIdService({\r\n            id: id,\r\n            limit: PAGINATION.pagerow,\r\n            offset: 0\r\n        })\r\n        if (arrSize && arrSize.errCode === 0) {\r\n            setdataProductDetailSize(arrSize.data)\r\n            setcountSizes(Math.ceil(arrSize.count / PAGINATION.pagerow))\r\n        }\r\n    }\r\n    let openPreviewImage = (url) => {\r\n\r\n\r\n        setimgPreview(url);\r\n        setisOpen(true);\r\n\r\n    }\r\n    let closeModal = () => {\r\n        setisOpenModal(false)\r\n        setproductImageId('')\r\n    }\r\n    let handleOpenModal = () => {\r\n        setisOpenModal(true)\r\n    }\r\n    let closeModalSize = () => {\r\n        setisOpenModalSize(false)\r\n        setproductSizeId('')\r\n    }\r\n    let handleOpenModalSize = () => {\r\n        setisOpenModalSize(true)\r\n    }\r\n    let sendDataFromModal = async (data) => {\r\n        if (data.isActionUpdate === false) {\r\n            let response = await createNewProductImageService({\r\n                caption: data.caption,\r\n                image: data.image,\r\n                id: id\r\n            })\r\n            if (response && response.errCode === 0) {\r\n                toast.success(\"Thêm hình ảnh thành công !\")\r\n                setisOpenModal(false)\r\n                await loadProductDetailImage()\r\n            } else {\r\n                toast.error(\"Thêm hình ảnh thất bại !\")\r\n            }\r\n        } else {\r\n            let response = await UpdateProductDetailImageService({\r\n                caption: data.caption,\r\n                image: data.image,\r\n                id: data.id\r\n            })\r\n            if (response && response.errCode === 0) {\r\n                setproductImageId('')\r\n                toast.success(\"Cập nhật hình ảnh thành công !\")\r\n                setisOpenModal(false)\r\n                await loadProductDetailImage()\r\n\r\n            } else {\r\n                toast.error(\"Cập nhật ảnh thất bại !\")\r\n            }\r\n        }\r\n\r\n    }\r\n    let sendDataFromModalSize = async (data) => {\r\n        if (data.isActionUpdate === false) {\r\n            let response = await createNewProductSizeService({\r\n                productdetailId: id,\r\n                sizeId: data.sizeId,\r\n                width: data.width,\r\n                height: data.height,\r\n                stock: data.stock,\r\n                weight: data.weight\r\n            })\r\n            if (response && response.errCode === 0) {\r\n                toast.success(\"Thêm kích thước thành công !\")\r\n                setisOpenModalSize(false)\r\n                await loadProductDetailSize()\r\n\r\n            } else {\r\n                toast.error(\"Thêm kích thước thất bại\")\r\n            }\r\n        } else {\r\n            let response = await UpdateProductDetailSizeService({\r\n                sizeId: data.sizeId,\r\n                width: data.width,\r\n                height: data.height,\r\n                stock: data.stock,\r\n                id: data.id,\r\n                weight: data.weight\r\n            })\r\n            if (response && response.errCode === 0) {\r\n                setproductSizeId('')\r\n                toast.success(\"Cập nhật kích thước thành công !\")\r\n                setisOpenModalSize(false)\r\n                await loadProductDetailSize()\r\n\r\n            } else {\r\n                toast.error(\"Cập nhật kích thước thất bại !\")\r\n            }\r\n        }\r\n    }\r\n    let handleEditProductImage = (id) => {\r\n        setproductImageId(id)\r\n        setisOpenModal(true)\r\n    }\r\n    let handleEditProductSize = (id) => {\r\n        setproductSizeId(id)\r\n        setisOpenModalSize(true)\r\n    }\r\n    let handleDeleteProductImage = async (productdetailImageId) => {\r\n\r\n        let response = await DeleteProductDetailImageService({\r\n            data: {\r\n                id: productdetailImageId\r\n            }\r\n        })\r\n        if (response && response.errCode === 0) {\r\n            toast.success(\"Xóa hình ảnh thành công !\")\r\n            let arrData = await getAllProductDetailImageByIdService({\r\n\r\n                id: id,\r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow\r\n\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataProductDetailImage(arrData.data)\r\n                setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n            }\r\n        } else {\r\n            toast.error(\"Xóa hình ảnh thất bại !\")\r\n        }\r\n    }\r\n    let handleDeleteProductSize = async (productdetailsizeId) => {\r\n        let response = await DeleteProductDetailSizeService({\r\n            data: {\r\n                id: productdetailsizeId\r\n            }\r\n        })\r\n        if (response && response.errCode === 0) {\r\n            toast.success(\"Xóa kích thước thành công !\")\r\n            let arrData = await getAllProductDetailSizeByIdService({\r\n\r\n                id: id,\r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow\r\n\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataProductDetailSize(arrData.data)\r\n                setcountSizes(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n            }\r\n        } else {\r\n            toast.error(\"Xóa hình ảnh thất bại !\")\r\n        }\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getAllProductDetailImageByIdService({\r\n\r\n            id: id,\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataProductDetailImage(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleChangePageProductSize = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrSize = await getAllProductDetailSizeByIdService({\r\n            id: id,\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow\r\n        })\r\n        if (arrSize && arrSize.errCode === 0) {\r\n            setdataProductDetailSize(arrSize.data)\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Thông tin chi tiết sản phẩm</h1>\r\n\r\n            <div>\r\n                <div className=\"card mb-4\">\r\n                    <div className=\"card-header\">\r\n                        <i className=\"fas fa-table me-1\" />\r\n                        Danh sách hình ảnh chi tiết sản phẩm\r\n                        <div onClick={() => handleOpenModal()} className=\"float-right\"><i style={{ fontSize: '35px', cursor: 'pointer', color: '#0D6EFD' }} className=\"fas fa-plus-square\"></i></div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>STT</th>\r\n                                        <th>Tên hình ảnh</th>\r\n                                        <th>Hình ảnh</th>\r\n                                        <th>Thao tác</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {dataProductDetailImage && dataProductDetailImage.length > 0 &&\r\n                                        dataProductDetailImage.map((item, index) => {\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>{item.caption}</td>\r\n                                                    <td ><div onClick={() => openPreviewImage(item.image)} className=\"box-image\" style={{ backgroundImage: `url(${item.image})` }}></div></td>\r\n                                                    <td>\r\n\r\n                                                        <span onClick={() => handleEditProductImage(item.id)} style={{ color: '#0E6DFE', cursor: 'pointer' }}   >Edit</span>\r\n                                                        &nbsp; &nbsp;\r\n                                                        <span onClick={() => handleDeleteProductImage(item.id)} style={{ color: '#0E6DFE', cursor: 'pointer' }}   >Delete</span>\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n\r\n\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <AddImageModal\r\n                        isOpenModal={isOpenModal}\r\n                        closeModal={closeModal}\r\n                        sendDataFromModal={sendDataFromModal}\r\n                        productImageId={productImageId}\r\n                    />\r\n                </div>\r\n\r\n                {\r\n                    isOpen === true &&\r\n                    <Lightbox mainSrc={imgPreview}\r\n                        onCloseRequest={() => setisOpen(false)}\r\n                    />\r\n                }\r\n                <ReactPaginate\r\n                    previousLabel={'Quay lại'}\r\n                    nextLabel={'Tiếp'}\r\n                    breakLabel={'...'}\r\n                    pageCount={count}\r\n                    marginPagesDisplayed={3}\r\n                    containerClassName={\"pagination justify-content-center\"}\r\n                    pageClassName={\"page-item\"}\r\n                    pageLinkClassName={\"page-link\"}\r\n                    previousLinkClassName={\"page-link\"}\r\n                    nextClassName={\"page-item\"}\r\n                    nextLinkClassName={\"page-link\"}\r\n                    breakLinkClassName={\"page-link\"}\r\n                    breakClassName={\"page-item\"}\r\n                    activeClassName={\"active\"}\r\n                    onPageChange={handleChangePage}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"card mb-4\">\r\n                    <div className=\"card-header\">\r\n                        <i className=\"fas fa-table me-1\" />\r\n                        Danh sách kích thước chi tiết sản phẩm\r\n                        <div onClick={() => handleOpenModalSize()} className=\"float-right\"><i style={{ fontSize: '35px', cursor: 'pointer', color: '#0D6EFD' }} className=\"fas fa-plus-square\"></i></div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>STT</th>\r\n                                        <th>Kích thước</th>\r\n                                        <th>Chiều rộng</th>\r\n                                        <th>Chiều dài</th>\r\n                                        <th>Khối lượng</th>\r\n                                        <th>Số lượng tồn</th>\r\n                                        <th>Thao tác</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {dataProductDetailSize && dataProductDetailSize.length > 0 &&\r\n                                        dataProductDetailSize.map((item, index) => {\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>{item.sizeData.value}</td>\r\n                                                    <td>{item.width}</td>\r\n                                                    <td>{item.height}</td>\r\n                                                    <td>{item.weight}</td>\r\n                                                    <td>{item.stock}</td>\r\n                                                    <td>\r\n\r\n                                                        <span onClick={() => handleEditProductSize(item.id)} style={{ color: '#0E6DFE', cursor: 'pointer' }}   >Edit</span>\r\n                                                        &nbsp; &nbsp;\r\n                                                        <span onClick={() => handleDeleteProductSize(item.id)} style={{ color: '#0E6DFE', cursor: 'pointer' }}   >Delete</span>\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <AddSizeModal\r\n                        isOpenModal={isOpenModalSize}\r\n                        closeModal={closeModalSize}\r\n                        sendDataFromModalSize={sendDataFromModalSize}\r\n                        productSizeId={productSizeId}\r\n                    />\r\n                </div>\r\n\r\n                {\r\n                    isOpen === true &&\r\n                    <Lightbox mainSrc={imgPreview}\r\n                        onCloseRequest={() => setisOpen(false)}\r\n                    />\r\n                }\r\n                <ReactPaginate\r\n                    previousLabel={'Quay lại'}\r\n                    nextLabel={'Tiếp'}\r\n                    breakLabel={'...'}\r\n                    pageCount={countSize}\r\n                    marginPagesDisplayed={3}\r\n                    containerClassName={\"pagination justify-content-center\"}\r\n                    pageClassName={\"page-item\"}\r\n                    pageLinkClassName={\"page-link\"}\r\n                    previousLinkClassName={\"page-link\"}\r\n                    nextClassName={\"page-item\"}\r\n                    nextLinkClassName={\"page-link\"}\r\n                    breakLinkClassName={\"page-link\"}\r\n                    breakClassName={\"page-item\"}\r\n                    activeClassName={\"active\"}\r\n                    onPageChange={handleChangePageProductSize}\r\n                />\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default ManageProductImage;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Banner\\ManageBanner.js",["721","722","723","724","725","726","727","728"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { getAllBanner, deleteBannerService } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport './AddBanner.scss';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport FormSearch from '../../../component/Search/FormSearch';\r\n\r\nconst ManageBanner = () => {\r\n    const [keyword, setkeyword] = useState('')\r\n    const [dataBanner, setdataBanner] = useState([])\r\n    const [imgPreview, setimgPreview] = useState('')\r\n    const [isOpen, setisOpen] = useState(false)\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    useEffect(() => {\r\n      \r\n         loadBanner(keyword)\r\n     \r\n    }, [])\r\n    let loadBanner = async (keyword) => {\r\n        let arrData = await getAllBanner({\r\n\r\n            limit: PAGINATION.pagerow,\r\n            offset: 0,\r\n            keyword:keyword\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataBanner(arrData.data)\r\n            setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n        }\r\n    }\r\n\r\n\r\n    let openPreviewImage = (url) => {\r\n        setimgPreview(url);\r\n        setisOpen(true);\r\n    }\r\n    let handleDeleteBanner = async (id) => {\r\n        let response = await deleteBannerService({\r\n            data: {\r\n                id: id\r\n            }\r\n        })\r\n        if (response && response.errCode === 0) {\r\n            toast.success(\"Xóa băng rôn thành công !\")\r\n            let arrData = await getAllBanner({\r\n\r\n\r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow,\r\n                keyword:keyword\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataBanner(arrData.data)\r\n                setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n            }\r\n        } else {\r\n            toast.error(\"Xóa băng rôn thất bại\")\r\n        }\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getAllBanner({\r\n\r\n\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow,\r\n            keyword:keyword\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataBanner(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleSearchBanner = (keyword) =>{\r\n        loadBanner(keyword)\r\n        setkeyword(keyword)\r\n    }\r\n    let handleOnchangeSearch = (keyword) =>{\r\n        if(keyword === ''){\r\n            loadBanner(keyword)\r\n            setkeyword(keyword)\r\n        }\r\n    }\r\n    let handleOnClickExport =async () =>{\r\n        let res = await getAllBanner({\r\n            limit: '',\r\n            offset: '',\r\n            keyword:''\r\n        })\r\n       \r\n        if(res && res.errCode == 0){\r\n            res.data.forEach(element => {\r\n                element.image = \"\"\r\n            })\r\n           \r\n           await CommonUtils.exportExcel(res.data,\"Danh sách băng rôn\",\"ListBanner\")\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý băng rôn</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách băng rôn\r\n                </div>\r\n                <div className=\"card-body\">\r\n                \r\n                    <div className='row'>\r\n                    <div  className='col-4'>\r\n                    <FormSearch title={\"tên băng rôn\"} handleOnchange={handleOnchangeSearch} handleSearch={handleSearchBanner} />\r\n                    </div>\r\n                    <div className='col-8'>\r\n                    <button  style={{float:'right'}} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Tên băng rôn</th>\r\n                                    <th>Hình ảnh</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataBanner && dataBanner.length > 0 &&\r\n                                    dataBanner.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.name}</td>\r\n                                                <td style={{ width: '30%' }} ><div onClick={() => openPreviewImage(item.image)} className=\"box-img-preview\" style={{ backgroundImage: `url(${item.image})`, width: '100%' }}></div></td>\r\n                                                <td style={{ width: '20%' }}>\r\n                                                    <Link to={`/admin/edit-banner/${item.id}`}>Edit</Link>\r\n                                                    &nbsp; &nbsp;\r\n\r\n                                                    <span onClick={() => handleDeleteBanner(item.id)} style={{ color: '#0E6DFE', cursor: 'pointer' }} >Delete</span>\r\n\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <ReactPaginate\r\n                    previousLabel={'Quay lại'}\r\n                    nextLabel={'Tiếp'}\r\n                    breakLabel={'...'}\r\n                    pageCount={count}\r\n                    marginPagesDisplayed={3}\r\n                    containerClassName={\"pagination justify-content-center\"}\r\n                    pageClassName={\"page-item\"}\r\n                    pageLinkClassName={\"page-link\"}\r\n                    previousLinkClassName={\"page-link\"}\r\n                    nextClassName={\"page-item\"}\r\n                    nextLinkClassName={\"page-link\"}\r\n                    breakLinkClassName={\"page-link\"}\r\n                    breakClassName={\"page-item\"}\r\n                    activeClassName={\"active\"}\r\n                    onPageChange={handleChangePage}\r\n                />\r\n            </div>\r\n            {\r\n                isOpen === true &&\r\n                <Lightbox mainSrc={imgPreview}\r\n                    onCloseRequest={() => setisOpen(false)}\r\n                />\r\n            }\r\n        </div >\r\n    )\r\n}\r\nexport default ManageBanner;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\TypeShip\\ManageTypeShip.js",["729","730","731","732","733","734","735","736"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useFetchAllcode } from '../../customize/fetch';\r\nimport { deleteTypeShipService, getAllTypeShip } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport FormSearch from '../../../component/Search/FormSearch';\r\nconst ManageTypeShip = () => {\r\n\r\n    const [dataTypeShip, setdataTypeShip] = useState([])\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    const [keyword, setkeyword] = useState('')\r\n    useEffect(() => {\r\n\r\n        fetchData(keyword);\r\n\r\n\r\n    }, [])\r\n    let fetchData = async (keyword) => {\r\n        let arrData = await getAllTypeShip({\r\n\r\n            limit: PAGINATION.pagerow,\r\n            offset: 0,\r\n            keyword: keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataTypeShip(arrData.data)\r\n            setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n        }\r\n    }\r\n    let handleDeleteTypeShip = async (id) => {\r\n\r\n        let res = await deleteTypeShipService({\r\n            data: {\r\n                id: id\r\n            }\r\n        })\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Xóa loại ship thành công\")\r\n            let arrData = await getAllTypeShip({\r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow,\r\n                keyword: keyword\r\n\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataTypeShip(arrData.data)\r\n                setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n            }\r\n\r\n        } else toast.error(\"Xóa loại ship thất bại\")\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getAllTypeShip({\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow,\r\n            keyword: keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataTypeShip(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleSearchTypeShip = (keyword) => {\r\n        fetchData(keyword)\r\n        setkeyword(keyword)\r\n    }\r\n    let handleOnchangeSearch = (keyword) => {\r\n        if (keyword === '') {\r\n            fetchData(keyword)\r\n            setkeyword(keyword)\r\n        }\r\n    }\r\n    let handleOnClickExport = async () => {\r\n        let res = await getAllTypeShip({\r\n\r\n            limit: '',\r\n            offset: '',\r\n            keyword: ''\r\n        })\r\n        if (res && res.errCode == 0) {\r\n            await CommonUtils.exportExcel(res.data, \"Danh sách loại ship\", \"ListTypeShip\")\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý loại ship</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách loại ship\r\n                </div>\r\n                <div className=\"card-body\">\r\n\r\n                    <div className='row'>\r\n                        <div className='col-4'>\r\n                            <FormSearch title={\"tên loại ship\"} handleOnchange={handleOnchangeSearch} handleSearch={handleSearchTypeShip} />\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <button style={{ float: 'right' }} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Tên loại ship</th>\r\n                                    <th>Giá tiền</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataTypeShip && dataTypeShip.length > 0 &&\r\n                                    dataTypeShip.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.type}</td>\r\n                                                <td>{CommonUtils.formatter.format(item.price)}</td>\r\n                                                <td>\r\n                                                    <Link to={`/admin/edit-typeship/${item.id}`}>Edit</Link>\r\n                                                    &nbsp; &nbsp;\r\n                                                    <span onClick={() => handleDeleteTypeShip(item.id)} style={{ color: '#0E6DFE', cursor: 'pointer' }}   >Delete</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'Quay lại'}\r\n                nextLabel={'Tiếp'}\r\n                breakLabel={'...'}\r\n                pageCount={count}\r\n                marginPagesDisplayed={3}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                activeClassName={\"active\"}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ManageTypeShip;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Brand\\ManageBrand.js",["737","738","739","740","741","742","743","744","745"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useFetchAllcode } from '../../customize/fetch';\r\nimport { DeleteAllcodeService, getListAllCodeService } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport FormSearch from '../../../component/Search/FormSearch';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nconst ManageBrand = () => {\r\n    const [keyword, setkeyword] = useState('')\r\n    const [dataBrand, setdataBrand] = useState([])\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    useEffect(() => {\r\n        try {\r\n           \r\n            fetchData(keyword);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [])\r\n    let fetchData = async (keyword) => {\r\n        let arrData = await getListAllCodeService({\r\n\r\n            type: 'BRAND',\r\n            limit: PAGINATION.pagerow,\r\n            offset: 0,\r\n            keyword:keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataBrand(arrData.data)\r\n            setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n        }\r\n    }\r\n    let handleDeleteBrand = async (event, id) => {\r\n        event.preventDefault();\r\n        let res = await DeleteAllcodeService(id)\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Xóa nhãn hàng thành công\")\r\n            let arrData = await getListAllCodeService({\r\n\r\n                type: 'BRAND',\r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow,\r\n                keyword:keyword\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataBrand(arrData.data)\r\n                setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n            }\r\n\r\n        } else toast.error(\"Xóa nhãn hàng thất bại\")\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getListAllCodeService({\r\n\r\n            type: 'BRAND',\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow,\r\n            keyword:keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataBrand(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleSearchBrand = (keyword) =>{\r\n        fetchData(keyword)\r\n        setkeyword(keyword)\r\n    }\r\n    let handleOnchangeSearch = (keyword) =>{\r\n        if(keyword === ''){\r\n            fetchData(keyword)\r\n            setkeyword(keyword)\r\n        }\r\n    }\r\n    let handleOnClickExport =async () =>{\r\n        let res = await getListAllCodeService({\r\n            type: 'BRAND',\r\n            limit: '',\r\n            offset: '',\r\n            keyword:''\r\n        })\r\n        if(res && res.errCode == 0){\r\n            await CommonUtils.exportExcel(res.data,\"Danh sách nhãn hàng\",\"ListBrand\")\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý nhãn hàng</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách nhãn hàng sản phẩm\r\n                </div>\r\n                <div className=\"card-body\">\r\n               \r\n                    <div className='row'>\r\n                    <div  className='col-4'>\r\n                    <FormSearch title={\"tên nhãn hàng\"}  handleOnchange={handleOnchangeSearch} handleSearch={handleSearchBrand} />\r\n                    </div>\r\n                    <div className='col-8'>\r\n                    <button  style={{float:'right'}} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Tên</th>\r\n                                    <th>mã code</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataBrand && dataBrand.length > 0 &&\r\n                                    dataBrand.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.value}</td>\r\n                                                <td>{item.code}</td>\r\n                                                <td>\r\n                                                    <Link to={`/admin/edit-Brand/${item.id}`}>Edit</Link>\r\n                                                    &nbsp; &nbsp;\r\n                                                    <a href=\"#\" onClick={(event) => handleDeleteBrand(event, item.id)} >Delete</a>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'Quay lại'}\r\n                nextLabel={'Tiếp'}\r\n                breakLabel={'...'}\r\n                pageCount={count}\r\n                marginPagesDisplayed={3}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                activeClassName={\"active\"}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ManageBrand;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\TypeShip\\AddTypeShip.js",["746","747","748","749","750","751"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { createNewTypeShipService, getDetailTypeShipByIdService, updateTypeShipService } from '../../../services/userService';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { useParams } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport moment from 'moment';\r\nconst AddTypeShip = (props) => {\r\n\r\n\r\n\r\n    const [isActionADD, setisActionADD] = useState(true)\r\n\r\n\r\n    const { id } = useParams();\r\n\r\n    const [inputValues, setInputValues] = useState({\r\n        type: '', price: ''\r\n    });\r\n    useEffect(() => {\r\n\r\n        if (id) {\r\n            let fetchDetailTypeShip = async () => {\r\n                setisActionADD(false)\r\n                let typeship = await getDetailTypeShipByIdService(id)\r\n                if (typeship && typeship.errCode === 0) {\r\n                    setInputValues({ ...inputValues, [\"type\"]: typeship.data.type, [\"price\"]: typeship.data.price })\r\n                }\r\n            }\r\n            fetchDetailTypeShip()\r\n        }\r\n    }, [])\r\n\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    let handleSaveTypeShip = async () => {\r\n        if (isActionADD === true) {\r\n            let res = await createNewTypeShipService({\r\n                type: inputValues.type,\r\n                price: inputValues.price,\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Thêm loại ship thành công\")\r\n                setInputValues({\r\n                    ...inputValues,\r\n                    [\"type\"]: '',\r\n                    [\"price\"]: ''\r\n                })\r\n            }\r\n            else if (res && res.errCode === 2) {\r\n                toast.error(res.errMessage)\r\n            }\r\n            else toast.error(\"Thêm loại ship thất bại\")\r\n        } else {\r\n            let res = await updateTypeShipService({\r\n                type: inputValues.type,\r\n                price: inputValues.price,\r\n                id: id\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Cập nhật loại ship thành công\")\r\n\r\n            }\r\n            else if (res && res.errCode === 2) {\r\n                toast.error(res.errMessage)\r\n            }\r\n            else toast.error(\"Cập nhật loại ship thất bại\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý loại ship</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    {isActionADD === true ? 'Thêm mới loại ship' : 'Cập nhật thông tin loại ship'}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Tên loại ship</label>\r\n                                <input type=\"text\" value={inputValues.type} name=\"type\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">Giá tiền</label>\r\n                                <input type=\"text\" value={inputValues.price} name=\"price\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => handleSaveTypeShip()} className=\"btn btn-primary\">Lưu thông tin</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddTypeShip;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Subject\\ManageSubject.js",["752","753","754","755","756","757","758","759","760"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useFetchAllcode } from '../../customize/fetch';\r\nimport { DeleteAllcodeService, getListAllCodeService } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport FormSearch from '../../../component/Search/FormSearch';\r\nconst ManageSubject = () => {\r\n\r\n    const [dataSubject, setdataSubject] = useState([])\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    const [keyword, setkeyword] = useState('')\r\n    useEffect(() => {\r\n      \r\n         \r\n            fetchData(keyword);\r\n      \r\n\r\n    }, [])\r\n    let fetchData = async (keyword) => {\r\n        let arrData = await getListAllCodeService({\r\n\r\n            type: 'SUBJECT',\r\n            limit: PAGINATION.pagerow,\r\n            offset: 0,\r\n            keyword:keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataSubject(arrData.data)\r\n            setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n        }\r\n    }\r\n    let handleDeleteSubject = async (event, id) => {\r\n        event.preventDefault();\r\n        let res = await DeleteAllcodeService(id)\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Xóa chủ đề thành công\")\r\n            let arrData = await getListAllCodeService({\r\n\r\n                type: 'SUBJECT',\r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow,\r\n                keyword:keyword\r\n\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataSubject(arrData.data)\r\n                setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n            }\r\n\r\n        } else toast.error(\"Xóa chủ đề thất bại\")\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getListAllCodeService({\r\n\r\n            type: 'SUBJECT',\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow,\r\n            keyword:keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataSubject(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleSearchSubject = (keyword) =>{\r\n        fetchData(keyword)\r\n        setkeyword(keyword)\r\n    }\r\n    let handleOnchangeSearch = (keyword) =>{\r\n        if(keyword === ''){\r\n            fetchData(keyword)\r\n            setkeyword(keyword)\r\n        }\r\n    }\r\n    let handleOnClickExport = async () =>{\r\n        let res = await getListAllCodeService({\r\n            type: 'SUBJECT',\r\n            limit: '',\r\n            offset: '',\r\n            keyword:''\r\n        })\r\n        if(res && res.errCode == 0){\r\n            await CommonUtils.exportExcel(res.data,\"Danh sách chủ đề\",\"ListSubject\")\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý chủ đề</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách chủ đề sản phẩm\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className='row'>\r\n                    <div  className='col-4'>\r\n                    <FormSearch title={\"tên chủ đề\"}  handleOnchange={handleOnchangeSearch} handleSearch={handleSearchSubject} />\r\n                    </div>\r\n                    <div className='col-8'>\r\n                    <button  style={{float:'right'}} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Tên</th>\r\n                                    <th>mã code</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataSubject && dataSubject.length > 0 &&\r\n                                    dataSubject.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.value}</td>\r\n                                                <td>{item.code}</td>\r\n                                                <td>\r\n                                                    <Link to={`/admin/edit-Brand/${item.id}`}>Edit</Link>\r\n                                                    &nbsp; &nbsp;\r\n                                                    <a href=\"#\" onClick={(event) => handleDeleteSubject(event, item.id)} >Delete</a>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'Quay lại'}\r\n                nextLabel={'Tiếp'}\r\n                breakLabel={'...'}\r\n                pageCount={count}\r\n                marginPagesDisplayed={3}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                activeClassName={\"active\"}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ManageSubject;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Voucher\\ManageTypeVoucher.js",["761","762","763","764","765","766","767","768"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useFetchAllcode } from '../../customize/fetch';\r\nimport { deleteTypeVoucherService, getAllTypeVoucher } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nconst ManageTypeShip = () => {\r\n\r\n    const [dataTypeVoucher, setdataTypeVoucher] = useState([])\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    useEffect(() => {\r\n        try {\r\n            let fetchData = async () => {\r\n                let arrData = await getAllTypeVoucher({\r\n\r\n                    limit: PAGINATION.pagerow,\r\n                    offset: 0\r\n\r\n                })\r\n                if (arrData && arrData.errCode === 0) {\r\n                    setdataTypeVoucher(arrData.data)\r\n                    setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n                }\r\n            }\r\n            fetchData();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [])\r\n    let handleDeleteTypeVoucher = async (id) => {\r\n\r\n        let res = await deleteTypeVoucherService({\r\n            data: {\r\n                id: id\r\n            }\r\n        })\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Xóa loại voucher thành công\")\r\n            let arrData = await getAllTypeVoucher({\r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow\r\n\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataTypeVoucher(arrData.data)\r\n                setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n            }\r\n\r\n        } else toast.error(\"Xóa loại voucher thất bại\")\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getAllTypeVoucher({\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataTypeVoucher(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleOnClickExport = async () => {\r\n        let res = await getAllTypeVoucher({\r\n\r\n            limit: '',\r\n            offset: '',\r\n\r\n        })\r\n        if (res && res.errCode == 0) {\r\n            await CommonUtils.exportExcel(res.data, \"Danh sách loại voucher\", \"ListTypeVoucher\")\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý loại voucher</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách loại voucher\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className='row'>\r\n\r\n                        <div className='col-12 mb-2'>\r\n                            <button style={{ float: 'right' }} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Loại voucher</th>\r\n                                    <th>Giá trị</th>\r\n                                    <th>Giá trị tối thiểu</th>\r\n                                    <th>Giá trị tối đa</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataTypeVoucher && dataTypeVoucher.length > 0 &&\r\n                                    dataTypeVoucher.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.typeVoucherData.value}</td>\r\n                                                <td>{item.typeVoucher == \"percent\" ? item.value + \"%\" : CommonUtils.formatter.format(item.value)}</td>\r\n                                                <td>{CommonUtils.formatter.format(item.minValue)}</td>\r\n                                                <td>{CommonUtils.formatter.format(item.maxValue)}</td>\r\n                                                <td>\r\n                                                    <Link to={`/admin/edit-typevoucher/${item.id}`}>Edit</Link>\r\n                                                    &nbsp; &nbsp;\r\n                                                    <span onClick={() => handleDeleteTypeVoucher(item.id)} style={{ color: '#0E6DFE', cursor: 'pointer' }}   >Delete</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'Quay lại'}\r\n                nextLabel={'Tiếp'}\r\n                breakLabel={'...'}\r\n                pageCount={count}\r\n                marginPagesDisplayed={3}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                activeClassName={\"active\"}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ManageTypeShip;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Voucher\\AddTypeVoucher.js",["769","770","771","772","773","774","775","776","777","778","779"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { createNewTypeVoucherService, getDetailTypeVoucherByIdService, updateTypeVoucherService } from '../../../services/userService';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { useParams } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useFetchAllcode } from '../../customize/fetch';\r\nimport moment from 'moment';\r\nconst AddTypeVoucher = (props) => {\r\n\r\n\r\n    const { data: dataTypeVoucher } = useFetchAllcode('DISCOUNT')\r\n    const [isActionADD, setisActionADD] = useState(true)\r\n\r\n\r\n    const { id } = useParams();\r\n    const [inputValues, setInputValues] = useState({\r\n        typeVoucher: '', value: '', maxValue: '', minValue: ''\r\n    });\r\n    if (dataTypeVoucher && dataTypeVoucher.length > 0 && inputValues.typeVoucher === '') {\r\n\r\n        setInputValues({ ...inputValues, [\"typeVoucher\"]: dataTypeVoucher[0].code })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (id) {\r\n            let fetchDetailTypeShip = async () => {\r\n                setisActionADD(false)\r\n                let typevoucher = await getDetailTypeVoucherByIdService(id)\r\n                if (typevoucher && typevoucher.errCode === 0) {\r\n                    setInputValues({\r\n                        ...inputValues, [\"typeVoucher\"]: typevoucher.data.typeVoucher, [\"value\"]: typevoucher.data.value,\r\n                        [\"maxValue\"]: typevoucher.data.maxValue, [\"minValue\"]: typevoucher.data.minValue\r\n                    })\r\n                }\r\n            }\r\n            fetchDetailTypeShip()\r\n        }\r\n    }, [])\r\n\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    let handleSaveTypeVoucher = async () => {\r\n        if (isActionADD === true) {\r\n            let res = await createNewTypeVoucherService({\r\n                typeVoucher: inputValues.typeVoucher,\r\n                value: inputValues.value,\r\n                maxValue: inputValues.maxValue,\r\n                minValue: inputValues.minValue\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Thêm loại voucher thành công\")\r\n                setInputValues({\r\n                    ...inputValues,\r\n                    [\"typeVoucher\"]: '',\r\n                    [\"value\"]: '',\r\n                    [\"maxValue\"]: '',\r\n                    [\"minValue\"]: '',\r\n                })\r\n            }\r\n            else if (res && res.errCode === 2) {\r\n                toast.error(res.errMessage)\r\n            }\r\n            else toast.error(\"Thêm loại voucher thất bại\")\r\n        } else {\r\n            let res = await updateTypeVoucherService({\r\n                typeVoucher: inputValues.typeVoucher,\r\n                value: inputValues.value,\r\n                maxValue: inputValues.maxValue,\r\n                minValue: inputValues.minValue,\r\n                id: id\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Cập nhật loại voucher thành công\")\r\n\r\n            }\r\n            else if (res && res.errCode === 2) {\r\n                toast.error(res.errMessage)\r\n            }\r\n            else toast.error(\"Cập nhật loại voucher thất bại\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý loại voucher</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    {isActionADD === true ? 'Thêm mới loại voucher' : 'Cập nhật thông tin loại voucher'}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Loại voucher</label>\r\n                                <select value={inputValues.typeVoucher} name=\"typeVoucher\" onChange={(event) => handleOnChange(event)} id=\"inputState\" className=\"form-control\">\r\n                                    {dataTypeVoucher && dataTypeVoucher.length > 0 &&\r\n                                        dataTypeVoucher.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.code}>{item.value}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">Giá trị</label>\r\n                                <input type=\"text\" value={inputValues.value} name=\"value\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Giá trị tối thiểu</label>\r\n                                <input type=\"number\" value={inputValues.minValue} name=\"minValue\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">Giá trị tối đa</label>\r\n                                <input type=\"number\" value={inputValues.maxValue} name=\"maxValue\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => handleSaveTypeVoucher()} className=\"btn btn-primary\">Lưu thông tin</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddTypeVoucher;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Voucher\\ManageVoucher.js",["780","781","782","783","784","785"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useFetchAllcode } from '../../customize/fetch';\r\nimport { deleteVoucherService, getAllVoucher } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nconst ManageVoucher = () => {\r\n\r\n    const [dataVoucher, setdataVoucher] = useState([])\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    useEffect(() => {\r\n        try {\r\n            let fetchData = async () => {\r\n                let arrData = await getAllVoucher({\r\n\r\n                    limit: PAGINATION.pagerow,\r\n                    offset: 0\r\n\r\n                })\r\n                if (arrData && arrData.errCode === 0) {\r\n                    setdataVoucher(arrData.data)\r\n                    setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n                }\r\n            }\r\n            fetchData();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [])\r\n    let handleDeleteVoucher = async (id) => {\r\n\r\n        let res = await deleteVoucherService({\r\n            data: {\r\n                id: id\r\n            }\r\n        })\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Xóa mã voucher thành công\")\r\n            let arrData = await getAllVoucher({\r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow\r\n\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataVoucher(arrData.data)\r\n                setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n            }\r\n\r\n        } else toast.error(\"Xóa mã voucher thất bại\")\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getAllVoucher({\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataVoucher(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleOnClickExport =async () =>{\r\n        let res = await getAllVoucher({\r\n          \r\n            limit: '',\r\n            offset: '',\r\n            \r\n        })\r\n        if(res && res.errCode == 0){\r\n            res.data.forEach(item => {\r\n               item.fromDate = moment.unix(item.fromDate / 1000).format('DD/MM/YYYY')\r\n               item.toDate=  moment.unix(item.toDate / 1000).format('DD/MM/YYYY')\r\n            })\r\n            await CommonUtils.exportExcel(res.data,\"Danh sách voucher\",\"ListVoucher\")\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý mã voucher</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách mã voucher\r\n                </div>\r\n                <div className=\"card-body\">\r\n                <div className='row'>\r\n                   \r\n                    <div className='col-12 mb-2'>\r\n                    <button  style={{float:'right'}} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Mã voucher</th>\r\n                                    <th>Loại voucher</th>\r\n                                    <th>Số lượng</th>\r\n                                    <th>Đã sử dụng</th>\r\n                                    <th>Ngày bắt đầu</th>\r\n                                    <th>Ngày kết thúc</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataVoucher && dataVoucher.length > 0 &&\r\n                                    dataVoucher.map((item, index) => {\r\n                                        let name = `${item.typeVoucherOfVoucherData.value} ${item.typeVoucherOfVoucherData.typeVoucherData.value}`\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.codeVoucher}</td>\r\n                                                <td>{name}</td>\r\n                                                <td>{item.amount}</td>\r\n                                                <td>{item.usedAmount}</td>\r\n                                                <td>{moment.unix(item.fromDate / 1000).format('DD/MM/YYYY')}</td>\r\n                                                <td>{moment.unix(item.toDate / 1000).format('DD/MM/YYYY')}</td>\r\n                                                <td>\r\n                                                    <Link to={`/admin/edit-voucher/${item.id}`}>Edit</Link>\r\n                                                    &nbsp; &nbsp;\r\n                                                    <span onClick={() => handleDeleteVoucher(item.id)} style={{ color: '#0E6DFE', cursor: 'pointer' }}   >Delete</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'Quay lại'}\r\n                nextLabel={'Tiếp'}\r\n                breakLabel={'...'}\r\n                pageCount={count}\r\n                marginPagesDisplayed={3}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                activeClassName={\"active\"}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ManageVoucher;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Voucher\\AddVoucher.js",["786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport DatePicker from '../../../component/input/DatePicker';\r\nimport { toast } from 'react-toastify';\r\nimport { useParams } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getSelectTypeVoucher, createNewVoucherService, getDetailVoucherByIdService, updateVoucherService } from '../../../services/userService';\r\nimport moment from 'moment';\r\nconst AddVoucher = (props) => {\r\n\r\n\r\n\r\n\r\n    const [dataTypeVoucher, setdataTypeVoucher] = useState([])\r\n\r\n    const { id } = useParams();\r\n    const [inputValues, setInputValues] = useState({\r\n        fromDate: '', toDate: '', typeVoucherId: '', amount: '', codeVoucher: '', isChangeFromDate: false, isChangeToDate: false, isActionADD: true,\r\n        fromDateUpdate: '', toDateUpdate: ''\r\n    });\r\n    if (dataTypeVoucher && dataTypeVoucher.length > 0 && inputValues.typeVoucherId === '') {\r\n\r\n        setInputValues({ ...inputValues, [\"typeVoucherId\"]: dataTypeVoucher[0].id })\r\n    }\r\n    useEffect(() => {\r\n        let fetchTypeVoucher = async () => {\r\n            let typevoucher = await getSelectTypeVoucher()\r\n            if (typevoucher && typevoucher.errCode === 0) {\r\n                setdataTypeVoucher(typevoucher.data)\r\n            }\r\n        }\r\n        fetchTypeVoucher()\r\n        if (id) {\r\n            let fetchVoucher = async () => {\r\n                let voucher = await getDetailVoucherByIdService(id)\r\n                if (voucher && voucher.errCode === 0) {\r\n                    setStateVoucher(voucher.data)\r\n                }\r\n            }\r\n            fetchVoucher()\r\n        }\r\n    }, [])\r\n    let setStateVoucher = (data) => {\r\n        console.log(data.toDate)\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"fromDate\"]: moment.unix(+data.fromDate / 1000).locale('vi').format('DD/MM/YYYY'),\r\n            [\"toDate\"]: moment.unix(+data.toDate / 1000).locale('vi').format('DD/MM/YYYY'),\r\n            [\"typeVoucherId\"]: data.typeVoucherId,\r\n            [\"amount\"]: data.amount,\r\n            [\"codeVoucher\"]: data.codeVoucher,\r\n            [\"isActionADD\"]: false,\r\n            [\"fromDateUpdate\"]: data.fromDate,\r\n            [\"toDateUpdate\"]: data.toDate\r\n        })\r\n    }\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    let handleOnChangeDatePickerFromDate = (date) => {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"fromDate\"]: date[0],\r\n            [\"isChangeFromDate\"]: true\r\n        })\r\n\r\n    }\r\n    let handleOnChangeDatePickerToDate = (date) => {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"toDate\"]: date[0],\r\n            [\"isChangeToDate\"]: true\r\n        })\r\n\r\n    }\r\n    let handleSaveInforVoucher = async () => {\r\n        if (inputValues.isActionADD === true) {\r\n            let response = await createNewVoucherService({\r\n                fromDate: new Date(inputValues.fromDate).getTime(),\r\n                toDate: new Date(inputValues.toDate).getTime(),\r\n                typeVoucherId: inputValues.typeVoucherId,\r\n                amount: inputValues.amount,\r\n                codeVoucher: inputValues.codeVoucher\r\n            })\r\n            if (response && response.errCode === 0) {\r\n                toast.success(\"Tạo mã voucher thành công !\")\r\n                setInputValues({\r\n                    ...inputValues,\r\n                    [\"fromDate\"]: '',\r\n                    [\"toDate\"]: '',\r\n                    [\"typeVoucherId\"]: '',\r\n                    [\"amount\"]: '',\r\n                    [\"codeVoucher\"]: '',\r\n                })\r\n            } else {\r\n                toast.error(response.errMessage)\r\n            }\r\n        } else {\r\n\r\n            let response = await updateVoucherService({\r\n                toDate: inputValues.isChangeToDate === false ? inputValues.toDateUpdate : new Date(inputValues.toDate).getTime(),\r\n                fromDate: inputValues.isChangeFromDate === false ? inputValues.fromDateUpdate : new Date(inputValues.fromDate).getTime(),\r\n\r\n                typeVoucherId: inputValues.typeVoucherId,\r\n                amount: inputValues.amount,\r\n                codeVoucher: inputValues.codeVoucher,\r\n                id: id\r\n            })\r\n            if (response && response.errCode === 0) {\r\n                toast.success(\"Cập nhật voucher thành công !\")\r\n\r\n            } else toast.error(response.errMessage)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý mã voucher</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    {inputValues.isActionADD === true ? 'Thêm mới mã voucherr' : 'Cập nhật thông tin mã voucher'}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Ngày bắt đầu</label>\r\n                                <DatePicker className=\"form-control\" onChange={handleOnChangeDatePickerFromDate}\r\n                                    value={inputValues.fromDate}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">Ngày kết thúc</label>\r\n                                <DatePicker className=\"form-control\" onChange={handleOnChangeDatePickerToDate}\r\n                                    value={inputValues.toDate}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Loại voucher</label>\r\n                                <select value={inputValues.typeVoucherId} name=\"typeVoucherId\" onChange={(event) => handleOnChange(event)} id=\"inputState\" className=\"form-control\">\r\n                                    {dataTypeVoucher && dataTypeVoucher.length > 0 &&\r\n                                        dataTypeVoucher.map((item, index) => {\r\n                                            let name = `${item.value} ${item.typeVoucherData.value}`\r\n                                            return (\r\n                                                <option key={index} value={item.id}>{name}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPassword4\">Số lượng mã</label>\r\n                                <input type=\"number\" value={inputValues.amount} name=\"amount\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputPassword4\">Mã voucher</label>\r\n                                <input type=\"text\" value={inputValues.codeVoucher} name=\"codeVoucher\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n                        </div>\r\n                        <button onClick={() => handleSaveInforVoucher()} type=\"button\" className=\"btn btn-primary\">Lưu thông tin</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddVoucher;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Message\\Message.js",["805","806","807","808","809","810","811","812","813","814","815"],"import React from 'react';\r\nimport { useEffect, useState ,useRef} from 'react';\r\nimport { useFetchAllcode } from '../../customize/fetch';\r\nimport {  listRoomOfAdmin} from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport MessageDisscution from '../../Message/MessageDisscution';\r\nimport ChatWindow from '../../Message/ChatWindow';\r\nimport socketIOClient from \"socket.io-client\";\r\nrequire('dotenv').config();\r\nconst Message = () => {\r\n  const [dataUser, setdataUser] = useState({})\r\n    const [dataRoom, setdataRoom] = useState([])\r\n  const [selectedRoom, setselectedRoom] = useState('')\r\n  const host = process.env.REACT_APP_BACKEND_URL;\r\n  const socketRef = useRef();\r\n  const [id, setId] = useState();\r\n  useEffect(()=>{\r\n    socketRef.current = socketIOClient.connect(host)\r\n    const userData = JSON.parse(localStorage.getItem('userData'));\r\n    setdataUser(userData)\r\n    socketRef.current.on('getId', data => {\r\n      setId(data)\r\n    }) // phần này đơn giản để gán id cho mỗi phiên kết nối vào page. Mục đích chính là để phân biệt đoạn nào là của mình đang chat.\r\n    fetchListRoom()\r\n    socketRef.current.on('sendDataServer', dataGot => {\r\n      fetchListRoom()\r\n      }) \r\n      socketRef.current.on('loadRoomServer', dataGot => {\r\n        fetchListRoom(userData.id)\r\n        })  \r\n      return () => {\r\n        socketRef.current.disconnect();\r\n      };\r\n  },[])\r\n let handleClickRoom = (roomId)=>{\r\n    socketRef.current.emit('loadRoomClient')\r\n    setselectedRoom(roomId)\r\n   \r\n }\r\n let fetchListRoom = async() =>{\r\n  let res = await listRoomOfAdmin()\r\n  if(res && res.errCode==0){\r\n    setdataRoom(res.data)\r\n  }\r\n}\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"ks-page-content\">\r\n          <div className=\"ks-page-content-body\">\r\n            <div className=\"ks-messenger\">\r\n                 <MessageDisscution userId={dataUser.id} isAdmin={true} handleClickRoom={handleClickRoom} data={dataRoom}/>\r\n                 {selectedRoom ? <ChatWindow userId={dataUser.id} roomId={selectedRoom}  />\r\n                 :<div>\r\n                    <span className='title'>Chưa chọn phòng</span>\r\n                 </div> \r\n                }\r\n                \r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\nexport default Message;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Order\\DetailOrder.js",["816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, NavLink, useHistory, useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getDetailOrder, updateStatusOrderService } from '../../../services/userService';\r\nimport './../../Order/OrderHomePage.scss';\r\nimport { toast } from 'react-toastify';\r\nimport storeVoucherLogo from '../../../../src/resources/img/storeVoucher.png'\r\nimport ShopCartItem from '../../../component/ShopCart/ShopCartItem';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nfunction DetailOrder(props) {\r\n    const { id } = useParams();\r\n    const [DataOrder, setDataOrder] = useState({});\r\n    const [imgPreview, setimgPreview] = useState('')\r\n    const [isOpen, setisOpen] = useState(false)\r\n    let price = 0;\r\n    const [priceShip, setpriceShip] = useState(0)\r\n    useEffect(() => {\r\n        loadDataOrder()\r\n    }, [])\r\n    let openPreviewImage = (url) => {\r\n        setimgPreview(url);\r\n        setisOpen(true);\r\n    }\r\n    let loadDataOrder = () => {\r\n        if (id) {\r\n            let fetchOrder = async () => {\r\n                let order = await getDetailOrder(id)\r\n                if (order && order.errCode == 0) {\r\n                    setDataOrder(order.data)\r\n                    setpriceShip(order.data.typeShipData.price)\r\n                }\r\n            }\r\n            fetchOrder()\r\n\r\n\r\n        }\r\n    }\r\n    let totalPriceDiscount = (price, discount) => {\r\n        try {\r\n            if (discount.typeVoucherOfVoucherData.typeVoucher === \"percent\") {\r\n\r\n                if (((price * discount.typeVoucherOfVoucherData.value) / 100) > discount.typeVoucherOfVoucherData.maxValue) {\r\n\r\n                    return price - discount.typeVoucherOfVoucherData.maxValue\r\n                } else {\r\n                    return price - ((price * discount.typeVoucherOfVoucherData.value) / 100)\r\n                }\r\n            } else {\r\n                return price - discount.typeVoucherOfVoucherData.maxValue\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n\r\n    }\r\n    let handleAcceptOrder = async () => {\r\n        let res = await updateStatusOrderService({\r\n            id: DataOrder.id,\r\n            statusId: 'S4'\r\n        })\r\n        if (res && res.errCode == 0) {\r\n            toast.success(\"Xác nhận đơn hàng thành công\")\r\n            loadDataOrder()\r\n        }\r\n    }\r\n    let handleSendProduct = async () => {\r\n        let res = await updateStatusOrderService({\r\n            id: DataOrder.id,\r\n            statusId: 'S5'\r\n        })\r\n        if (res && res.errCode == 0) {\r\n            toast.success(\"Xác nhận gửi hàng thành công\")\r\n            loadDataOrder()\r\n        }\r\n    }\r\n    let handleSuccessShip = async () => {\r\n        let res = await updateStatusOrderService({\r\n            id: DataOrder.id,\r\n            statusId: 'S6'\r\n        })\r\n        if (res && res.errCode == 0) {\r\n            toast.success(\"Đã giao hàng thành công\")\r\n            loadDataOrder()\r\n        }\r\n    }\r\n    let handleCancelOrder = async (data) => {\r\n        let res = await updateStatusOrderService({\r\n            id: DataOrder.id,\r\n            statusId: 'S7',\r\n            dataOrder: data\r\n        })\r\n        if (res && res.errCode == 0) {\r\n            toast.success(\"Hủy đơn hàng thành công\")\r\n            loadDataOrder()\r\n        }\r\n    }\r\n    return (\r\n\r\n\r\n        <>\r\n\r\n\r\n            <div className=\"wrap-order\">\r\n                <div className=\"wrap-heading-order\">\r\n                    <NavLink to=\"/\" className=\"navbar-brand logo_h\">\r\n                        <img src=\"/resources/img/logo.png\" alt=\"\" />\r\n                    </NavLink>\r\n                    <span>Chi tiết đơn hàng</span>\r\n                </div>\r\n                <div className=\"wrap-address-order\">\r\n                    <div className=\"border-top-address-order\"></div>\r\n                    <div className=\"wrap-content-address\">\r\n                        <div className=\"content-up\">\r\n                            <div className=\"content-left\">\r\n                                <i className=\"fas fa-map-marker-alt\"></i>\r\n                                <span>Địa Chỉ Nhận Hàng</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div className=\"content-down\">\r\n                            {DataOrder && DataOrder.addressUser &&\r\n                                <>\r\n                                    <div className=\"content-left\">\r\n\r\n                                        <span>{DataOrder.addressUser.shipName} ({DataOrder.addressUser.shipPhonenumber})</span>\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"content-center\">\r\n                                        <span>\r\n\r\n                                            {DataOrder.addressUser.shipAdress}\r\n                                        </span>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"wrap-order-item\">\r\n                    <section className=\"cart_area\">\r\n                        <div className=\"container\">\r\n                            <div className=\"cart_inner\">\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n\r\n                                                <th scope=\"col\">Sản phẩm</th>\r\n                                                <th scope=\"col\">Giá</th>\r\n                                                <th style={{ textAlign: 'center' }} scope=\"col\">Số lượng</th>\r\n                                                <th style={{ textAlign: 'center' }} scope=\"col\">Tổng tiền</th>\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n\r\n                                            {DataOrder.orderDetail && DataOrder.orderDetail.length > 0 &&\r\n                                                DataOrder.orderDetail.map((item, index) => {\r\n                                                    price += item.quantity * item.productDetail.discountPrice\r\n\r\n                                                    let name = `${item.product.name} - ${item.productDetail.nameDetail} - ${item.productDetailSize.sizeData.value}`\r\n                                                    return (\r\n                                                        <ShopCartItem isOrder={true} id={item.id} productdetailsizeId={item.productDetailSize.id} key={index} name={name} price={item.productDetail.discountPrice} quantity={item.quantity} image={item.productImage[0].image} />\r\n                                                    )\r\n                                                })\r\n\r\n                                            }\r\n\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"box-shipping\">\r\n\r\n\r\n                                <h6>\r\n                                    Đơn vị vận chuyển\r\n                                </h6>\r\n                                <div>\r\n                                    {\r\n                                        DataOrder && DataOrder.typeShipData &&\r\n                                        <label className=\"form-check-label\">{DataOrder.typeShipData.type} - {CommonUtils.formatter.format(DataOrder.typeShipData.price)} </label>\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"box-shopcart-bottom\">\r\n                                <div className=\"content-left\">\r\n                                    <div className=\"wrap-voucher\">\r\n                                        <img width=\"20px\" height=\"20px\" style={{ marginLeft: \"-3px\" }} src={storeVoucherLogo}></img>\r\n                                        <span className=\"name-easier\">Easier voucher</span>\r\n\r\n\r\n                                        <span className=\"choose-voucher\">Mã voucher: {DataOrder && DataOrder.voucherData && DataOrder.voucherData.codeVoucher}</span>\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"wrap-note\">\r\n                                        <span>Lời Nhắn:</span>\r\n                                        <input value={DataOrder.note} type=\"text\" placeholder=\"Lưu ý cho Người bán...\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"content-right\">\r\n                                    <div className=\"wrap-price\">\r\n                                        <span className=\"text-total\">Tổng thanh toán {DataOrder && DataOrder.orderDetail && DataOrder.orderDetail.length} sản phẩm: </span>\r\n                                        <span className=\"text-price\">{DataOrder && DataOrder.voucherData && DataOrder.voucherId ? CommonUtils.formatter.format(totalPriceDiscount(price, DataOrder.voucherData) + priceShip) : CommonUtils.formatter.format(price + (+priceShip))}</span>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    </section>\r\n                </div>\r\n                <div className=\"wrap-payment\">\r\n                    <div className=\"content-top\" style={{ display: 'flex', gap: '10px' }}>\r\n                        <span>Phương Thức Thanh Toán</span>\r\n                        <div className='box-type-payment active'>{DataOrder.isPaymentOnlien == 0 ? 'Thanh toán tiền mặt' : 'Thanh toán onlien'}</div>\r\n\r\n                    </div>\r\n                    <div className=\"content-top\" style={{ display: 'flex', gap: '10px' }}>\r\n                        <span>Trạng Thái Đơn Hàng</span>\r\n                        <div className='box-type-payment active'>{DataOrder.statusOrderData && DataOrder.statusOrderData.value}</div>\r\n\r\n                    </div>\r\n                    <div className=\"content-top\" style={{ display: 'flex', gap: '10px' }}>\r\n                        <span>Hình ảnh giao hàng</span>\r\n                        <div onClick={() => openPreviewImage(DataOrder.image)} className=\"box-img-preview\" style={{ backgroundImage: `url(${DataOrder.image})`, width: '200px', height: '200px', borderRadius: \"10px\" }}></div>\r\n\r\n                    </div>\r\n                    <div className=\"content-bottom\">\r\n                        {DataOrder && DataOrder.addressUser &&\r\n                            <div className=\"wrap-bottom\">\r\n                                <div className=\"box-flex\">\r\n                                    <div className=\"head\">Tên khách hàng</div>\r\n                                    <div >{DataOrder.addressUser.shipName}</div>\r\n                                </div>\r\n                                <div className=\"box-flex\">\r\n                                    <div className=\"head\">Số điện thoại</div>\r\n                                    <div >{DataOrder.addressUser.shipPhonenumber}</div>\r\n                                </div>\r\n                                <div className=\"box-flex\">\r\n                                    <div className=\"head\">Địa chỉ email</div>\r\n                                    <div >{DataOrder.addressUser.shipEmail}</div>\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n                        }\r\n\r\n                        <div className=\"wrap-bottom\">\r\n                            <div className=\"box-flex\">\r\n                                <div className=\"head\">Tổng tiền hàng</div>\r\n                                <div >{CommonUtils.formatter.format(price)}</div>\r\n                            </div>\r\n                            <div className=\"box-flex\">\r\n                                <div className=\"head\">Tổng giảm giá</div>\r\n                                <div >{DataOrder && DataOrder.voucherData && DataOrder.voucherId ? CommonUtils.formatter.format(price - totalPriceDiscount(price, DataOrder.voucherData)) : CommonUtils.formatter.format(0)}</div>\r\n                            </div>\r\n                            <div className=\"box-flex\">\r\n                                <div className=\"head\">Phí vận chuyển</div>\r\n                                <div >{CommonUtils.formatter.format(priceShip)}</div>\r\n                            </div>\r\n\r\n                            <div className=\"box-flex\">\r\n                                <div className=\"head\">Tổng thanh toán:</div>\r\n                                <div className=\"money\">{DataOrder && DataOrder.voucherData && DataOrder.voucherId ? CommonUtils.formatter.format(totalPriceDiscount(price, DataOrder.voucherData) + priceShip) : CommonUtils.formatter.format(price + (+priceShip))}</div>\r\n                            </div>\r\n                            <div className=\"box-flex\">\r\n                                {DataOrder && DataOrder.statusId == 'S3' &&\r\n\r\n                                    <a onClick={() => handleAcceptOrder()} className=\"main_btn\">Xác nhận đơn</a>\r\n\r\n\r\n\r\n                                }\r\n                                {DataOrder && DataOrder.statusId == 'S4' &&\r\n                                    <a onClick={() => handleSendProduct()} className=\"main_btn\">Gửi hàng</a>\r\n                                }\r\n                                {DataOrder && DataOrder.statusId == 'S5' &&\r\n                                    <a onClick={() => handleSuccessShip()} className=\"main_btn\">Đã giao hàng</a>\r\n                                }\r\n                            </div>\r\n                            {(DataOrder && DataOrder.statusId == 'S3' && DataOrder.isPaymentOnlien == 0)\r\n                                &&\r\n                                <a onClick={() => handleCancelOrder(DataOrder)} style={{ marginLeft: '30px', background: '#cd2b14', border: '1px solid #cd2b14', width: '213px' }} className=\"main_btn\">Hủy đơn</a>\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div style={{ width: '100%', height: '100px', backgroundColor: '#f5f5f5' }}></div>\r\n\r\n            {\r\n                isOpen === true &&\r\n                <Lightbox mainSrc={imgPreview}\r\n                    onCloseRequest={() => setisOpen(false)}\r\n                />\r\n            }\r\n\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default DetailOrder;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Supplier\\AddSupplier.js",["837","838","839","840","841","842","843","844","845","846"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { createNewSupplierService, getDetailSupplierByIdService, updateSupplierService } from '../../../services/userService';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { useParams } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport moment from 'moment';\r\nconst AddSupplier = (props) => {\r\n\r\n\r\n\r\n    const [isActionADD, setisActionADD] = useState(true)\r\n\r\n\r\n    const { id } = useParams();\r\n\r\n    const [inputValues, setInputValues] = useState({\r\n        name: '', address: '',phonenumber: '',email: ''\r\n    });\r\n    useEffect(() => {\r\n\r\n        if (id) {\r\n            let fetchDetailSupplier = async () => {\r\n                setisActionADD(false)\r\n                let supplier = await getDetailSupplierByIdService(id)\r\n                if (supplier && supplier.errCode === 0) {\r\n                    setInputValues({ ...inputValues, \r\n                        [\"name\"]: supplier.data.name, \r\n                        [\"address\"]: supplier.data.address,\r\n                        [\"phonenumber\"]: supplier.data.phonenumber,\r\n                        [\"email\"]: supplier.data.email\r\n                    })\r\n                }\r\n            }\r\n            fetchDetailSupplier()\r\n        }\r\n    }, [])\r\n\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    let handleSaveSupplier = async () => {\r\n        if (isActionADD === true) {\r\n            let res = await createNewSupplierService({\r\n                name: inputValues.name,\r\n                address: inputValues.address,\r\n                email: inputValues.email,\r\n                phonenumber: inputValues.phonenumber,\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Thêm nhà cung cấp thành công\")\r\n                setInputValues({\r\n                    ...inputValues,\r\n                    [\"name\"]: '',\r\n                    [\"address\"]: '',\r\n                    [\"email\"]: '',\r\n                    [\"phonenumber\"]: ''\r\n                })\r\n            }\r\n            else if (res && res.errCode === 2) {\r\n                toast.error(res.errMessage)\r\n            }\r\n            else toast.error(\"Thêm nhà cung cấp thất bại\")\r\n        } else {\r\n            let res = await updateSupplierService({\r\n                name: inputValues.name,\r\n                address: inputValues.address,\r\n                email: inputValues.email,\r\n                phonenumber: inputValues.phonenumber,\r\n                id: id\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Cập nhật nhà cung cấp thành công\")\r\n\r\n            }\r\n            else if (res && res.errCode === 2) {\r\n                toast.error(res.errMessage)\r\n            }\r\n            else toast.error(\"Cập nhật nhà cung cấp thất bại\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý nhà cung cấp</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    {isActionADD === true ? 'Thêm mới nhà cung cấp' : 'Cập nhật thông tin nhà cung cấp'}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Tên nhà cung cấp</label>\r\n                                <input type=\"text\" value={inputValues.name} name=\"name\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">Địa chỉ email</label>\r\n                                <input type=\"text\" value={inputValues.email} name=\"email\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Địa chỉ</label>\r\n                                <input type=\"text\" value={inputValues.address} name=\"address\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">Số điện thoại</label>\r\n                                <input type=\"text\" value={inputValues.phonenumber} name=\"phonenumber\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => handleSaveSupplier()} className=\"btn btn-primary\">Lưu thông tin</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddSupplier;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Blog\\AddBlog.js",["847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n    createNewBlogrService,\r\n    getDetailBlogByIdService,\r\n    updateBlogService,\r\n} from \"../../../services/userService\";\r\nimport CommonUtils from \"../../../utils/CommonUtils\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport moment from \"moment\";\r\nimport { useFetchAllcode } from \"../../customize/fetch\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nconst AddBlog = (props) => {\r\n    const mdParser = new MarkdownIt();\r\n    const { id } = useParams();\r\n    const { data: dataSubject } = useFetchAllcode(\"SUBJECT\");\r\n    const [inputValues, setInputValues] = useState({\r\n        title: \"\",\r\n        shortdescription: \"\",\r\n        image: \"\",\r\n        isActionADD: true,\r\n        imageReview: \"\",\r\n        isOpen: false,\r\n        contentMarkdown: \"\",\r\n        contentHTML: \"\",\r\n        subjectId: \"\",\r\n    });\r\n    if (dataSubject && dataSubject.length > 0 && inputValues.subjectId === \"\") {\r\n        setInputValues({ ...inputValues, [\"subjectId\"]: dataSubject[0].code });\r\n    }\r\n    useEffect(() => {\r\n        if (id) {\r\n            let fetchBlog = async () => {\r\n                let res = await getDetailBlogByIdService(id);\r\n                if (res && res.errCode === 0) {\r\n                    setStateBlog(res.data);\r\n                }\r\n            };\r\n            fetchBlog();\r\n        }\r\n    }, []);\r\n    let setStateBlog = (data) => {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"title\"]: data.title,\r\n            [\"shortdescription\"]: data.shortdescription,\r\n            [\"image\"]: data.image,\r\n            [\"imageReview\"]: data.image,\r\n            [\"isActionADD\"]: false,\r\n            [\"contentMarkdown\"]: data.contentMarkdown,\r\n            [\"contentHTML\"]: data.contentHTML,\r\n            [\"subjectId\"]: data.subjectId,\r\n        });\r\n    };\r\n    const handleOnChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n    };\r\n    let handleOnChangeImage = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if (file?.size > 31312281) {\r\n            toast.error(\"Dung lượng file bé hơn 30mb\");\r\n        } else {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            setInputValues({\r\n                ...inputValues,\r\n                [\"image\"]: base64,\r\n                [\"imageReview\"]: objectUrl,\r\n            });\r\n        }\r\n    };\r\n    let openPreviewImage = () => {\r\n        if (!inputValues.imageReview) return;\r\n\r\n        setInputValues({ ...inputValues, [\"isOpen\"]: true });\r\n    };\r\n    let handleSaveBlog = async () => {\r\n        if (inputValues.isActionADD === true) {\r\n            let res = await createNewBlogrService({\r\n                shortdescription: inputValues.shortdescription,\r\n                title: inputValues.title,\r\n                subjectId: inputValues.subjectId,\r\n                image: inputValues.image,\r\n                contentMarkdown: inputValues.contentMarkdown,\r\n                contentHTML: inputValues.contentHTML,\r\n                userId: JSON.parse(localStorage.getItem(\"userData\")).id,\r\n            });\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Tạo mới bài đăng thành công !\");\r\n                setInputValues({\r\n                    ...inputValues,\r\n                    [\"shortdescription\"]: \"\",\r\n                    [\"title\"]: \"\",\r\n                    [\"subjectId\"]: \"\",\r\n                    [\"image\"]: \"\",\r\n                    [\"contentMarkdown\"]: \"\",\r\n                    [\"contentHTML\"]: \"\",\r\n                    [\"imageReview\"]: \"\",\r\n                });\r\n            } else toast.error(\"Tạo mới bài đăng thất bại\");\r\n        } else {\r\n            let res = await updateBlogService({\r\n                shortdescription: inputValues.shortdescription,\r\n                title: inputValues.title,\r\n                subjectId: inputValues.subjectId,\r\n                image: inputValues.image,\r\n                contentMarkdown: inputValues.contentMarkdown,\r\n                contentHTML: inputValues.contentHTML,\r\n                id: id,\r\n            });\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Cập nhật bài đăng thành công !\");\r\n            } else toast.error(\"Cập nhật bài đăng thất bại\");\r\n        }\r\n    };\r\n    let handleEditorChange = ({ html, text }) => {\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"contentMarkdown\"]: text,\r\n            [\"contentHTML\"]: html,\r\n        });\r\n    };\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý bài đăng</h1>\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    {inputValues.isActionADD === true\r\n                        ? \"Tạo mới bài đăng\"\r\n                        : \"Cập nhật thông tin bài đăng\"}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label htmlFor=\"inputEmail4\">\r\n                                    Tên bài đăng\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={inputValues.title}\r\n                                    name=\"title\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                    id=\"inputEmail4\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label htmlFor=\"inputEmail4\">Chủ đề</label>\r\n                                <select\r\n                                    value={inputValues.subjectId}\r\n                                    name=\"subjectId\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    id=\"inputState\"\r\n                                    className=\"form-control\"\r\n                                >\r\n                                    {dataSubject &&\r\n                                        dataSubject.length > 0 &&\r\n                                        dataSubject.map((item, index) => {\r\n                                            return (\r\n                                                <option\r\n                                                    key={index}\r\n                                                    value={item.code}\r\n                                                >\r\n                                                    {item.value}\r\n                                                </option>\r\n                                            );\r\n                                        })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-3 form-group\">\r\n                                <label>Chọn hình ảnh</label>\r\n                                <input\r\n                                    accept=\".jpg,.png\"\r\n                                    onChange={(event) =>\r\n                                        handleOnChangeImage(event)\r\n                                    }\r\n                                    type=\"file\"\r\n                                    className=\"form-control form-file\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label htmlFor=\"inputEmail4\">\r\n                                    Hình ảnh hiển thị\r\n                                </label>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundImage: `url(${inputValues.imageReview})`,\r\n                                    }}\r\n                                    onClick={() => openPreviewImage()}\r\n                                    className=\"box-img-preview\"\r\n                                ></div>\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label htmlFor=\"inputAddress\">Mô tả ngắn</label>\r\n                                <textarea\r\n                                    rows=\"4\"\r\n                                    value={inputValues.shortdescription}\r\n                                    name=\"shortdescription\"\r\n                                    onChange={(event) => handleOnChange(event)}\r\n                                    className=\"form-control\"\r\n                                ></textarea>\r\n                            </div>\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label htmlFor=\"inputAddress\">\r\n                                    Nội dung bài đăng\r\n                                </label>\r\n                                <MdEditor\r\n                                    style={{ height: \"500px\" }}\r\n                                    renderHTML={(text) => mdParser.render(text)}\r\n                                    onChange={handleEditorChange}\r\n                                    value={inputValues.contentMarkdown}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            onClick={() => handleSaveBlog()}\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                        >\r\n                            Lưu thông tin\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            {inputValues.isOpen === true && (\r\n                <Lightbox\r\n                    mainSrc={inputValues.imageReview}\r\n                    onCloseRequest={() =>\r\n                        setInputValues({ ...inputValues, [\"isOpen\"]: false })\r\n                    }\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default AddBlog;\r\n","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Brand\\AddBrand.js",["871","872","873","874","875","876"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { createAllCodeService, getDetailAllcodeById, UpdateAllcodeService } from '../../../services/userService';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { useParams } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport moment from 'moment';\r\nconst AddBrand = (props) => {\r\n\r\n\r\n\r\n    const [isActionADD, setisActionADD] = useState(true)\r\n\r\n\r\n    const { id } = useParams();\r\n\r\n    const [inputValues, setInputValues] = useState({\r\n        value: '', code: ''\r\n    });\r\n    useEffect(() => {\r\n\r\n        if (id) {\r\n            let fetchDetailCategory = async () => {\r\n                setisActionADD(false)\r\n                let allcode = await getDetailAllcodeById(id)\r\n                if (allcode && allcode.errCode === 0) {\r\n                    setInputValues({ ...inputValues, [\"value\"]: allcode.data.value, [\"code\"]: allcode.data.code })\r\n                }\r\n            }\r\n            fetchDetailCategory()\r\n        }\r\n    }, [])\r\n\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    let handleSaveCategory = async () => {\r\n        if (isActionADD === true) {\r\n            let res = await createAllCodeService({\r\n                value: inputValues.value,\r\n                code: inputValues.code,\r\n                type: 'BRAND'\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Thêm nhãn hàng thành công\")\r\n                setInputValues({\r\n                    ...inputValues,\r\n                    [\"value\"]: '',\r\n                    [\"code\"]: ''\r\n                })\r\n            }\r\n            else if (res && res.errCode === 2) {\r\n                toast.error(res.errMessage)\r\n            }\r\n            else toast.error(\"Thêm nhãn hàng thất bại\")\r\n        } else {\r\n            let res = await UpdateAllcodeService({\r\n                value: inputValues.value,\r\n                code: inputValues.code,\r\n                id: id\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Cập nhật nhãn hàng thành công\")\r\n\r\n            }\r\n            else if (res && res.errCode === 2) {\r\n                toast.error(res.errMessage)\r\n            }\r\n            else toast.error(\"Cập nhật nhãn hàng thất bại\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý nhãn hàng</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    {isActionADD === true ? 'Thêm mới nhãn hàng' : 'Cập nhật thông tin nhãn hàng'}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Tên nhãn hàng</label>\r\n                                <input type=\"text\" value={inputValues.value} name=\"value\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">Mã code</label>\r\n                                <input type=\"text\" value={inputValues.code} name=\"code\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => handleSaveCategory()} className=\"btn btn-primary\">Lưu thông tin</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddBrand;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Supplier\\ManageSupplier.js",["877","878","879","880","881","882","883","884","885"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useFetchAllcode } from '../../customize/fetch';\r\nimport { deleteSupplierService, getAllSupplier } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport FormSearch from '../../../component/Search/FormSearch';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nconst ManageSupplier = () => {\r\n    const [keyword, setkeyword] = useState('')\r\n    const [dataSupplier, setdataSupplier] = useState([])\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    useEffect(() => {\r\n        try {\r\n           \r\n            fetchData(keyword);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [])\r\n    let fetchData = async (keyword) => {\r\n        let arrData = await getAllSupplier({\r\n\r\n           \r\n            limit: PAGINATION.pagerow,\r\n            offset: 0,\r\n            keyword:keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataSupplier(arrData.data)\r\n            setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n        }\r\n    }\r\n    let handleDeleteSupplier = async (event, id) => {\r\n        event.preventDefault();\r\n        let res = await deleteSupplierService({\r\n            data: {\r\n                id: id\r\n            }\r\n        })\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Xóa nhà cung cấp thành công\")\r\n            let arrData = await getAllSupplier({\r\n\r\n              \r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow,\r\n                keyword:keyword\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataSupplier(arrData.data)\r\n                setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n            }\r\n\r\n        } else toast.error(\"Xóa nhà cung cấp thất bại\")\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getAllSupplier({\r\n\r\n          \r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow,\r\n            keyword:keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataSupplier(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleSearchSupplier = (keyword) =>{\r\n        fetchData(keyword)\r\n        setkeyword(keyword)\r\n    }\r\n    let handleOnchangeSearch = (keyword) =>{\r\n        if(keyword === ''){\r\n            fetchData(keyword)\r\n            setkeyword(keyword)\r\n        }\r\n    }\r\n    let handleOnClickExport =async () =>{\r\n        let res = await getAllSupplier({\r\n            limit: '',\r\n            offset: '',\r\n            keyword:''\r\n        })\r\n        if(res && res.errCode == 0){\r\n            await CommonUtils.exportExcel(res.data,\"Danh sách nhà cung cấp\",\"ListSupplier\")\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý nhà cung cấp</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách nhà cung cấp sản phẩm\r\n                </div>\r\n                <div className=\"card-body\">\r\n               \r\n                    <div className='row'>\r\n                    <div  className='col-4'>\r\n                    <FormSearch title={\"tên nhà cung cấp\"}  handleOnchange={handleOnchangeSearch} handleSearch={handleSearchSupplier} />\r\n                    </div>\r\n                    <div className='col-8'>\r\n                    <button  style={{float:'right'}} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Tên</th>\r\n                                    <th>Số điện thoại</th>\r\n                                    <th>Email</th>\r\n                                    <th>Địa chỉ</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataSupplier && dataSupplier.length > 0 &&\r\n                                    dataSupplier.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.name}</td>\r\n                                                <td>{item.phonenumber}</td>\r\n                                                <td>{item.email}</td>\r\n                                                <td>{item.address}</td>\r\n                                                <td>\r\n                                                    <Link to={`/admin/edit-Supplier/${item.id}`}>Edit</Link>\r\n                                                    &nbsp; &nbsp;\r\n                                                    <a href=\"#\" onClick={(event) => handleDeleteSupplier(event, item.id)} >Delete</a>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'Quay lại'}\r\n                nextLabel={'Tiếp'}\r\n                breakLabel={'...'}\r\n                pageCount={count}\r\n                marginPagesDisplayed={3}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                activeClassName={\"active\"}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ManageSupplier;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Receipt\\AddReceipt.js",["886","887","888","889","890","891","892","893"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { createNewReceiptService,getAllSupplier,getAllProductAdmin } from '../../../services/userService';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { useParams } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport moment from 'moment';\r\nconst AddReceipt = (props) => {\r\n    const [user, setUser] = useState({})\r\n    const [dataSupplier, setdataSupplier] = useState([])\r\n    const [dataProduct, setdataProduct] = useState([])\r\n    const [dataProductDetail, setdataProductDetail] = useState([])\r\n    const [dataProductDetailSize, setdataProductDetailSize] = useState([])\r\n    const [productDetailSizeId, setproductDetailSizeId] = useState('')\r\n    const [inputValues, setInputValues] = useState({\r\n        supplierId: '',quantity:'',price:'',productId:''\r\n    });\r\n    if (dataSupplier && dataSupplier.length > 0 && inputValues.supplierId === '' && dataProduct && dataProduct.length > 0 && inputValues.productId === '' ) {\r\n\r\n        setInputValues({ ...inputValues, [\"supplierId\"]: dataSupplier[0].id, })\r\n        setdataProductDetail(dataProduct[0].productDetail)\r\n        setdataProductDetailSize(dataProduct[0].productDetail[0].productDetailSize)\r\n        setproductDetailSizeId(dataProduct[0].productDetail[0].productDetailSize[0].id)\r\n    }\r\n    useEffect(() => {\r\n        loadDataSupplier()\r\n        loadProduct()\r\n        const userData = JSON.parse(localStorage.getItem('userData'));\r\n        setUser(userData)\r\n    }, [])\r\n    let loadDataSupplier = async () => {\r\n        let arrData = await getAllSupplier({\r\n\r\n           \r\n            limit: '',\r\n            offset: '',\r\n            keyword:''\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataSupplier(arrData.data)\r\n            \r\n        }\r\n    }\r\n    let loadProduct = async () => {\r\n        let arrData = await getAllProductAdmin({\r\n\r\n            sortName: '',\r\n            sortPrice: '',\r\n            categoryId: 'ALL',\r\n            brandId: 'ALL',\r\n            limit: '',\r\n            offset: '',\r\n            keyword:''\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataProduct(arrData.data)\r\n           \r\n        }\r\n    }\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    const handleOnChangeProduct = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value})\r\n        for(let i=0;i<dataProduct.length;i++){\r\n            if(dataProduct[i].id==value){\r\n             \r\n                setdataProductDetail(dataProduct[i].productDetail)\r\n                setdataProductDetailSize(dataProduct[i].productDetail[0].productDetailSize)\r\n                setproductDetailSizeId(dataProduct[i].productDetail[0].productDetailSize[0].id)\r\n            }\r\n        }\r\n\r\n    };\r\n    let handleOnChangeProductDetail = event =>{\r\n        const { name, value } = event.target;\r\n        for(let i=0;i<dataProductDetail.length;i++){\r\n            if(dataProductDetail[i].id==value){\r\n             \r\n                setdataProductDetailSize(dataProductDetail[i].productDetailSize)\r\n                setproductDetailSizeId(dataProductDetail[i].productDetailSize[0].id)\r\n            }\r\n        }\r\n    }\r\n    let handleSaveReceipt = async () => {\r\n      \r\n            let res = await createNewReceiptService({\r\n                supplierId:inputValues.supplierId,\r\n                userId:user.id,\r\n                productDetailSizeId:productDetailSizeId,\r\n                quantity:inputValues.quantity,\r\n                price:inputValues.price\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Thêm nhập hàng thành công\")\r\n                setInputValues({\r\n                    ...inputValues,\r\n                  \r\n                    [\"quantity\"]: '',\r\n                    [\"price\"]: ''\r\n                })\r\n            }\r\n            else if (res && res.errCode === 2) {\r\n                toast.error(res.errMessage)\r\n            }\r\n            else toast.error(\"Thêm nhập hàng thất bại\")\r\n       \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý nhập hàng</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                  Thêm mới nhập hàng\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Nhà cung cấp</label>\r\n                                <select value={inputValues.supplierId} name=\"supplierId\" onChange={(event) => handleOnChange(event)} id=\"inputState\" className=\"form-control\">\r\n                                    {dataSupplier && dataSupplier.length > 0 &&\r\n                                        dataSupplier.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.id}>{item.name}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Sản phẩm</label>\r\n                                <select  value={inputValues.productId} name=\"productId\" onChange={(event) => handleOnChangeProduct(event)} id=\"inputState\" className=\"form-control\">\r\n                                    {dataProduct && dataProduct.length > 0 &&\r\n                                        dataProduct.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.id}>{item.name}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Loại sản phẩm</label>\r\n                                <select  onChange={(event) => handleOnChangeProductDetail(event)} id=\"inputState\" className=\"form-control\">\r\n                                    {dataProductDetail && dataProductDetail.length > 0 &&\r\n                                        dataProductDetail.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.id}>{item.nameDetail}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Size sản phẩm</label>\r\n                                <select  value={productDetailSizeId} name=\"productDetailSizeId\" onChange={(event) => setproductDetailSizeId(event.target.value)} id=\"inputState\" className=\"form-control\">\r\n                                    {dataProductDetailSize && dataProductDetailSize.length > 0 &&\r\n                                        dataProductDetailSize.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.id}>{item.sizeId}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Số lượng</label>\r\n                                <input type=\"number\" value={inputValues.quantity} name=\"quantity\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Đơn giá</label>\r\n                                <input type=\"number\" value={inputValues.price} name=\"price\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                        </div>\r\n                       \r\n                        <button type=\"button\" onClick={() => handleSaveReceipt()} className=\"btn btn-primary\">Lưu thông tin</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddReceipt;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Order\\ManageOrder.js",["894","895","896","897","898","899","900","901","902"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { getAllOrder } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { useFetchAllcode } from '../../customize/fetch';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nconst ManageOrder = () => {\r\n\r\n    const [dataOrder, setdataOrder] = useState([])\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    const { data: dataStatusOrder } = useFetchAllcode('STATUS-ORDER');\r\n    const [StatusId, setStatusId] = useState('ALL')\r\n    useEffect(() => {\r\n        loadOrderData('ALL')\r\n\r\n    }, [])\r\n    let loadOrderData = (statusId) => {\r\n        try {\r\n            let fetchData = async () => {\r\n                let arrData = await getAllOrder({\r\n\r\n                    limit: PAGINATION.pagerow,\r\n                    offset: 0,\r\n                    statusId: statusId\r\n\r\n                })\r\n                if (arrData && arrData.errCode === 0) {\r\n                    setdataOrder(arrData.data)\r\n                    setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n                }\r\n            }\r\n            fetchData();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    let handleOnchangeStatus = (event) => {\r\n\r\n        loadOrderData(event.target.value)\r\n        setStatusId(event.target.value)\r\n\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getAllOrder({\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow,\r\n            statusId: StatusId\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataOrder(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleOnClickExport = async () => {\r\n        let res = await getAllOrder({\r\n\r\n            limit: '',\r\n            offset: '',\r\n            statusId: 'ALL'\r\n        })\r\n        if (res && res.errCode == 0) {\r\n            await CommonUtils.exportExcel(res.data, \"Danh sách đơn hàng\", \"ListOrder\")\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý đơn đặt hàng</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách đơn đặt hàng\r\n                </div>\r\n                <select onChange={(event) => handleOnchangeStatus(event)} class=\"form-select col-3 ml-3 mt-3\">\r\n                    <option value={'ALL'} selected>Trạng thái đơn hàng</option>\r\n                    {\r\n                        dataStatusOrder && dataStatusOrder.length > 0 &&\r\n                        dataStatusOrder.map((item, index) => {\r\n                            return (\r\n                                <option value={item.code}>{item.value}</option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>\r\n                <div className=\"card-body\">\r\n                    <div className='row'>\r\n\r\n                        <div className='col-12 mb-2'>\r\n                            <button style={{ float: 'right' }} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Mã đơn</th>\r\n                                    <th>SDT</th>\r\n                                    <th>Email</th>\r\n                                    <th>Ngày đặt</th>\r\n                                    <th>Loại ship</th>\r\n                                    <th>Mã voucher</th>\r\n                                    <th>Hình thức</th>\r\n                                    <th>Trạng thái</th>\r\n                                    <th>Shipper</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataOrder && dataOrder.length > 0 &&\r\n                                    dataOrder.map((item, index) => {\r\n                                        let date = moment.unix(item.orderdate / 1000).format('DD/MM/YYYY')\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{item.id}</td>\r\n                                                <td>{item.userData.phonenumber}</td>\r\n                                                <td>{item.userData.email}</td>\r\n                                                <td>{moment.utc(item.createdAt).local().format('DD/MM/YYYY HH:mm:ss')}</td>\r\n                                                <td>{item.typeShipData.type}</td>\r\n                                                <td>{item.voucherData.codeVoucher}</td>\r\n                                                <td>{item.isPaymentOnlien == 0 ? 'Thanh toán tiền mặt' : 'Thanh toán online'}</td>\r\n                                                <td>{item.statusOrderData.value}</td>\r\n                                                <td>{item.shipperData && item.shipperData.firstName + \" \" + item.shipperData.lastName + \" - \" + item.shipperData.phonenumber}</td>\r\n                                                <td>\r\n                                                    <Link to={`/admin/order-detail/${item.id}`}>Xem chi tiết</Link>\r\n\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'Quay lại'}\r\n                nextLabel={'Tiếp'}\r\n                breakLabel={'...'}\r\n                pageCount={count}\r\n                marginPagesDisplayed={3}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                activeClassName={\"active\"}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ManageOrder;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Receipt\\ManageReceipt.js",["903","904","905","906","907","908","909","910"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { deleteReceiptService, getAllReceipt } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nconst ManageReceipt = () => {\r\n  \r\n    const [dataReceipt, setdataReceipt] = useState([])\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    useEffect(() => {\r\n        try {\r\n           \r\n            fetchData();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }, [])\r\n    let fetchData = async () => {\r\n        let arrData = await getAllReceipt({\r\n\r\n           \r\n            limit: PAGINATION.pagerow,\r\n            offset: 0,\r\n           \r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataReceipt(arrData.data)\r\n            setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n        }\r\n    }\r\n    \r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getAllReceipt({\r\n\r\n          \r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow,\r\n            \r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataReceipt(arrData.data)\r\n\r\n        }\r\n    }\r\n    \r\n    let handleOnClickExport =async () =>{\r\n        let res = await getAllReceipt({\r\n            limit: '',\r\n            offset: '',\r\n           \r\n        })\r\n        if(res && res.errCode == 0){\r\n            await CommonUtils.exportExcel(res.data,\"Danh sách nhập hàng\",\"ListReceipt\")\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý nhập hàng</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách nhập hàng\r\n                </div>\r\n                <div className=\"card-body\">\r\n               \r\n                    <div className='row'>\r\n                   \r\n                    <div className='col-12'>\r\n                    <button  style={{float:'right'}} onClick={() => handleOnClickExport()} className=\"btn btn-success mb-2\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Ngày nhập hàng</th>\r\n                                    <th>Tên nhà cung cấp</th>\r\n                                    <th>Số điện thoại</th>\r\n                                    <th>Tên nhân viên</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataReceipt && dataReceipt.length > 0 &&\r\n                                    dataReceipt.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{moment.utc(item.createdAt).local().format('DD/MM/YYYY HH:mm:ss')}</td>\r\n                                                <td>{item.supplierData.name}</td>\r\n                                                <td>{item.supplierData.phonenumber}</td>\r\n                                                <td>{item.userData.firstName +\" \"+item.userData.lastName}</td>\r\n                                              \r\n                                                <td>\r\n                                                    <Link to={`/admin/detail-receipt/${item.id}`}>view</Link>\r\n                                                    &nbsp; &nbsp;\r\n                                                   \r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'Quay lại'}\r\n                nextLabel={'Tiếp'}\r\n                breakLabel={'...'}\r\n                pageCount={count}\r\n                marginPagesDisplayed={3}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                activeClassName={\"active\"}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ManageReceipt;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Receipt\\DetailReceipt.js",["911","912","913","914","915","916","917","918","919","920"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { getAllProductAdmin, getDetailReceiptByIdService, createNewReceiptDetailService } from '../../../services/userService';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport moment from 'moment';\r\nconst DetailReceipt = (props) => {\r\n    const { id } = useParams();\r\n    const [dataProduct, setdataProduct] = useState([])\r\n    const [dataProductDetail, setdataProductDetail] = useState([])\r\n    const [dataProductDetailSize, setdataProductDetailSize] = useState([])\r\n    const [productDetailSizeId, setproductDetailSizeId] = useState('')\r\n    const [dataReceiptDetail, setdataReceiptDetail] = useState({})\r\n    const [inputValues, setInputValues] = useState({\r\n        quantity: '', price: '', productId: ''\r\n    });\r\n    if (dataProduct && dataProduct.length > 0 && inputValues.productId === '') {\r\n        setInputValues({ ...inputValues, [\"productId\"]: dataProduct[0].id, })\r\n        setproductDetailSizeId(dataProduct[0].productDetail[0].productDetailSize[0].id)\r\n        setdataProductDetail(dataProduct[0].productDetail)\r\n        setdataProductDetailSize(dataProduct[0].productDetail[0].productDetailSize)\r\n\r\n    }\r\n    useEffect(() => {\r\n\r\n        loadProduct()\r\n        loadReceiptDetail(id)\r\n\r\n    }, [])\r\n    let loadReceiptDetail = async (id) => {\r\n        let res = await getDetailReceiptByIdService(id)\r\n        if (res && res.errCode == 0) {\r\n            setdataReceiptDetail(res.data.receiptDetail)\r\n        }\r\n    }\r\n    let loadProduct = async () => {\r\n        let arrData = await getAllProductAdmin({\r\n\r\n            sortName: '',\r\n            sortPrice: '',\r\n            categoryId: 'ALL',\r\n            brandId: 'ALL',\r\n            limit: '',\r\n            offset: '',\r\n            keyword: ''\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataProduct(arrData.data)\r\n\r\n        }\r\n    }\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    const handleOnChangeProduct = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value })\r\n        for (let i = 0; i < dataProduct.length; i++) {\r\n            if (dataProduct[i].id == value) {\r\n\r\n                setdataProductDetail(dataProduct[i].productDetail)\r\n                setdataProductDetailSize(dataProduct[i].productDetail[0].productDetailSize)\r\n                setproductDetailSizeId(dataProduct[i].productDetail[0].productDetailSize[0].id)\r\n            }\r\n        }\r\n\r\n    };\r\n    let handleOnChangeProductDetail = event => {\r\n        const { name, value } = event.target;\r\n        for (let i = 0; i < dataProductDetail.length; i++) {\r\n            if (dataProductDetail[i].id == value) {\r\n\r\n                setdataProductDetailSize(dataProductDetail[i].productDetailSize)\r\n                setproductDetailSizeId(dataProductDetail[i].productDetailSize[0].id)\r\n            }\r\n        }\r\n    }\r\n    let handleSaveReceiptDetail = async () => {\r\n\r\n        let res = await createNewReceiptDetailService({\r\n            receiptId: id,\r\n            productDetailSizeId: productDetailSizeId,\r\n            quantity: inputValues.quantity,\r\n            price: inputValues.price\r\n        })\r\n        if (res && res.errCode === 0) {\r\n            toast.success(\"Thêm nhập chi tiết hàng thành công\")\r\n            setInputValues({\r\n                ...inputValues,\r\n\r\n                [\"quantity\"]: '',\r\n                [\"price\"]: ''\r\n            })\r\n            loadReceiptDetail(id)\r\n        }\r\n        else if (res && res.errCode === 2) {\r\n            toast.error(res.errMessage)\r\n        }\r\n        else toast.error(\"Thêm nhập hàng thất bại\")\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý chi tiết nhập hàng</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Thêm mới chi tiết nhập hàng\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Sản phẩm</label>\r\n                                <select value={inputValues.productId} name=\"productId\" onChange={(event) => handleOnChangeProduct(event)} id=\"inputState\" className=\"form-control\">\r\n                                    {dataProduct && dataProduct.length > 0 &&\r\n                                        dataProduct.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.id}>{item.name}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Loại sản phẩm</label>\r\n                                <select onChange={(event) => handleOnChangeProductDetail(event)} id=\"inputState\" className=\"form-control\">\r\n                                    {dataProductDetail && dataProductDetail.length > 0 &&\r\n                                        dataProductDetail.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.id}>{item.nameDetail}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label htmlFor=\"inputEmail4\">Size sản phẩm</label>\r\n                                <select value={productDetailSizeId} name=\"productDetailSizeId\" onChange={(event) => setproductDetailSizeId(event.target.value)} id=\"inputState\" className=\"form-control\">\r\n                                    {dataProductDetailSize && dataProductDetailSize.length > 0 &&\r\n                                        dataProductDetailSize.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={item.id}>{item.sizeId}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Số lượng</label>\r\n                                <input type=\"number\" value={inputValues.quantity} name=\"quantity\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Đơn giá</label>\r\n                                <input type=\"number\" value={inputValues.price} name=\"price\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"button\" onClick={() => handleSaveReceiptDetail()} className=\"btn btn-primary\">Lưu thông tin</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách chi tiết nhập hàng\r\n                </div>\r\n                <div className=\"card-body\">\r\n\r\n                    <div className='row'>\r\n\r\n                        <div className='col-12'>\r\n                            {/* <button  style={{float:'right'}} onClick={() => handleOnClickExport()} className=\"btn btn-success mb-2\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Mã đơn</th>\r\n                                    <th>Tên sản phẩm</th>\r\n                                    <th>Số lượng</th>\r\n                                    <th>Đơn giá</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataReceiptDetail && dataReceiptDetail.length > 0 &&\r\n                                    dataReceiptDetail.map((item, index) => {\r\n                                        let name = `${item.productData.name} - ${item.productDetailData.nameDetail} - ${item.productDetailSizeData.sizeData.value}`\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.receiptId}</td>\r\n                                                <td>{name}</td>\r\n                                                <td>{item.quantity}</td>\r\n                                                <td>{CommonUtils.formatter.format(item.price)}</td>\r\n\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default DetailReceipt;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Statistic\\Profit.js",["921","922","923","924","925","926","927","928","929","930"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { getStatisticProfit } from '../../../services/userService';\r\n// import DatePicker from '../../../component/input/DatePicker';\r\nimport { toast } from 'react-toastify';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\n\r\nconst Profit = (props) => {\r\n    const [dataOrder, setdataOrder] = useState([])\r\n    const [dataExport, setdataExport] = useState([])\r\n    const [sumPrice, setsumPrice] = useState(0)\r\n    const [type, settype] = useState('day')\r\n    const [dateRange, setDateRange] = useState([null, null]);\r\n    const [startDate, endDate] = dateRange;\r\n    const [DateTime, setDateTime] = useState(new Date());\r\n\r\n\r\n\r\n    let handleOnclick = async () => {\r\n\r\n\r\n        let res = await getStatisticProfit({\r\n            oneDate: type == 'day' ? startDate : DateTime,\r\n            twoDate: endDate,\r\n            type: type\r\n        })\r\n        let sumPrice = 0;\r\n        if (res && res.errCode == 0) {\r\n\r\n            setdataOrder(res.data)\r\n            let arrayObject = []\r\n            res.data.forEach(item => {\r\n                arrayObject.push({\r\n                    id: item.id,\r\n                    createdAt: moment.utc(item.createdAt).local().format('DD/MM/YYYY HH:mm:ss'),\r\n                    updatedAt: moment.utc(item.updatedAt).local().format('DD/MM/YYYY HH:mm:ss'),\r\n                    typeShip: item.typeShipData.type,\r\n                    codeVoucher: item.voucherData.codeVoucher,\r\n                    paymentType: item.isPaymentOnlien == 0 ? 'Thanh toán tiền mặt' : 'Thanh toán online',\r\n                    statusOrder: item.statusOrderData.value,\r\n                    totalpriceProduct: item.totalpriceProduct,\r\n                    importPrice: item.importPrice,\r\n                    profitPrice: item.profitPrice,\r\n                })\r\n                sumPrice = sumPrice + item.profitPrice\r\n            });\r\n            setdataExport(arrayObject)\r\n            setsumPrice(sumPrice)\r\n        }\r\n    }\r\n    let handleOnClickExport = async () => {\r\n\r\n        await CommonUtils.exportExcel(dataExport, \"Thống kê lợi nhuận\", \"Profit\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Thống kê</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Thống kê lợi nhuận\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label htmlFor=\"inputZip\">Loại thống kê</label>\r\n                                <select value={type} name=\"type\" onChange={(event) => settype(event.target.value)} id=\"inputState\" className=\"form-control\">\r\n                                    <option value=\"day\">Ngày</option>\r\n                                    <option value=\"month\">Tháng</option>\r\n                                    <option value=\"year\">Năm</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            {type == \"day\" &&\r\n                                <>\r\n\r\n                                    <div className=\"form-group col-md-2\">\r\n                                        <DatePicker\r\n                                            showMonthDropdown\r\n                                            showYearDropdown\r\n                                            selectsRange={true}\r\n                                            startDate={startDate}\r\n                                            endDate={endDate}\r\n                                            onChange={(update) => {\r\n                                                setDateRange(update);\r\n                                            }}\r\n                                            className=\"form-control\"\r\n                                            isClearable={true}\r\n                                        />\r\n                                    </div>\r\n\r\n\r\n                                </>\r\n                            }\r\n                            {type == \"month\" &&\r\n                                <>\r\n                                    <div className=\"form-group col-md-2\">\r\n                                        <label htmlFor=\"inputCity\">Chọn tháng</label>\r\n                                        <DatePicker\r\n                                            selected={DateTime}\r\n                                            onChange={(date) => setDateTime(date)}\r\n                                            dateFormat=\"MM/yyyy\"\r\n                                            showMonthYearPicker\r\n                                            className='form-control'\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                            {type == \"year\" &&\r\n                                <>\r\n                                    <div className=\"form-group col-md-2\">\r\n                                        <label htmlFor=\"inputCity\">Chọn năm</label>\r\n                                        <DatePicker\r\n                                            selected={DateTime}\r\n                                            onChange={(date) => setDateTime(date)}\r\n                                            dateFormat=\"yyyy\"\r\n                                            showYearPicker\r\n                                            className='form-control'\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n\r\n\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => handleOnclick()} className=\"btn btn-primary\">Lọc</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className='row'>\r\n\r\n                        <div className='col-12 mb-2'>\r\n                            <button style={{ float: 'right' }} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Mã đơn</th>\r\n                                    <th>Ngày đặt</th>\r\n                                    <th>Ngày cập nhật</th>\r\n                                    <th>Loại ship</th>\r\n                                    <th>Mã voucher</th>\r\n                                    <th>Hình thức</th>\r\n                                    <th>Trạng thái</th>\r\n                                    <th>Tổng tiền</th>\r\n                                    <th>Tiền nhập hàng</th>\r\n                                    <th>Lợi nhuận</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataOrder && dataOrder.length > 0 &&\r\n                                    dataOrder.map((item, index) => {\r\n\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{item.id}</td>\r\n                                                <td>{moment.utc(item.createdAt).local().format('DD/MM/YYYY HH:mm:ss')}</td>\r\n                                                <td>{moment.utc(item.updatedAt).local().format('DD/MM/YYYY HH:mm:ss')}</td>\r\n                                                <td>{item.typeShipData.type}</td>\r\n                                                <td>{item.voucherData.codeVoucher}</td>\r\n                                                <td>{item.isPaymentOnlien == 0 ? 'Thanh toán tiền mặt' : 'Thanh toán online'}</td>\r\n                                                <td>{item.statusOrderData.value}</td>\r\n                                                <td>{CommonUtils.formatter.format(item.totalpriceProduct)}</td>\r\n                                                <td>{CommonUtils.formatter.format(item.importPrice)}</td>\r\n                                                <td>{CommonUtils.formatter.format(item.profitPrice)}</td>\r\n                                                <td>\r\n                                                    <Link to={`/admin/order-detail/${item.id}`}>Xem chi tiết</Link>\r\n\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                    <span style={{ fontSize: '26px' }} className=\"text-total\">Tổng lợi nhuận:  </span>\r\n                    <span style={{ color: '#FFC0CB', fontSize: '26px' }} className=\"text-price\">{CommonUtils.formatter.format(sumPrice)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Profit;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Statistic\\Turnover.js",["931","932","933","934","935","936","937","938","939","940"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { getStatisticOverturn } from '../../../services/userService';\r\n// import DatePicker from '../../../component/input/DatePicker';\r\nimport { toast } from 'react-toastify';\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\n\r\nconst Turnover = (props) => {\r\n    const [dataOrder, setdataOrder] = useState([])\r\n    const [dataExport, setdataExport] = useState([])\r\n    const [totalPrice, settotalPrice] = useState(0)\r\n    const [type, settype] = useState('day')\r\n    const [dateRange, setDateRange] = useState([null, null]);\r\n    const [startDate, endDate] = dateRange;\r\n    const [DateTime, setDateTime] = useState(new Date());\r\n\r\n\r\n\r\n    let handleOnclick = async () => {\r\n\r\n        let res = await getStatisticOverturn({\r\n            oneDate: type == 'day' ? startDate : DateTime,\r\n            twoDate: endDate,\r\n            type: type\r\n        })\r\n        if (res && res.errCode == 0) {\r\n            let total = 0;\r\n            for (let i = 0; i < res.data.length; i++) {\r\n                total = total + res.data[i].totalpriceProduct\r\n\r\n            }\r\n            settotalPrice(total)\r\n            setdataOrder(res.data)\r\n            let arrayObject = []\r\n            res.data.forEach(item => {\r\n                arrayObject.push({\r\n                    id: item.id,\r\n                    createdAt: moment.utc(item.createdAt).local().format('DD/MM/YYYY HH:mm:ss'),\r\n                    updatedAt: moment.utc(item.updatedAt).local().format('DD/MM/YYYY HH:mm:ss'),\r\n                    typeShip: item.typeShipData.type,\r\n                    codeVoucher: item.voucherData.codeVoucher,\r\n                    paymentType: item.isPaymentOnlien == 0 ? 'Thanh toán tiền mặt' : 'Thanh toán online',\r\n                    statusOrder: item.statusOrderData.value,\r\n                    totalpriceProduct: item.totalpriceProduct,\r\n\r\n                })\r\n            });\r\n            setdataExport(arrayObject)\r\n        }\r\n    }\r\n    let handleOnClickExport = async () => {\r\n\r\n        await CommonUtils.exportExcel(dataExport, \"Thống kê doanh thu\", \"TurnOver\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Thống kê</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Thống kê doanh thu\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label htmlFor=\"inputZip\">Loại thống kê</label>\r\n                                <select value={type} name=\"type\" onChange={(event) => settype(event.target.value)} id=\"inputState\" className=\"form-control\">\r\n                                    <option value=\"day\">Ngày</option>\r\n                                    <option value=\"month\">Tháng</option>\r\n                                    <option value=\"year\">Năm</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            {type == \"day\" &&\r\n                                <>\r\n\r\n                                    <div className=\"form-group col-md-2\">\r\n                                        <DatePicker\r\n                                            showMonthDropdown\r\n                                            showYearDropdown\r\n                                            selectsRange={true}\r\n                                            startDate={startDate}\r\n                                            endDate={endDate}\r\n                                            onChange={(update) => {\r\n                                                setDateRange(update);\r\n                                            }}\r\n                                            className=\"form-control\"\r\n                                            isClearable={true}\r\n                                        />\r\n                                    </div>\r\n\r\n\r\n                                </>\r\n                            }\r\n                            {type == \"month\" &&\r\n                                <>\r\n                                    <div className=\"form-group col-md-2\">\r\n                                        <label htmlFor=\"inputCity\">Chọn tháng</label>\r\n                                        <DatePicker\r\n                                            selected={DateTime}\r\n                                            onChange={(date) => setDateTime(date)}\r\n                                            dateFormat=\"MM/yyyy\"\r\n                                            showMonthYearPicker\r\n                                            className='form-control'\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                            {type == \"year\" &&\r\n                                <>\r\n                                    <div className=\"form-group col-md-2\">\r\n                                        <label htmlFor=\"inputCity\">Chọn năm</label>\r\n                                        <DatePicker\r\n                                            selected={DateTime}\r\n                                            onChange={(date) => setDateTime(date)}\r\n                                            dateFormat=\"yyyy\"\r\n                                            showYearPicker\r\n                                            className='form-control'\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n\r\n\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => handleOnclick()} className=\"btn btn-primary\">Lọc</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className='row'>\r\n\r\n                        <div className='col-12 mb-2'>\r\n                            <button style={{ float: 'right' }} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Mã đơn</th>\r\n                                    <th>Ngày đặt</th>\r\n                                    <th>Ngày cập nhật</th>\r\n                                    <th>Loại ship</th>\r\n                                    <th>Mã voucher</th>\r\n                                    <th>Hình thức</th>\r\n                                    <th>Trạng thái</th>\r\n                                    <th>Tổng tiền</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataOrder && dataOrder.length > 0 &&\r\n                                    dataOrder.map((item, index) => {\r\n\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{item.id}</td>\r\n                                                <td>{moment.utc(item.createdAt).local().format('DD/MM/YYYY HH:mm:ss')}</td>\r\n                                                <td>{moment.utc(item.updatedAt).local().format('DD/MM/YYYY HH:mm:ss')}</td>\r\n                                                <td>{item.typeShipData.type}</td>\r\n                                                <td>{item.voucherData.codeVoucher}</td>\r\n                                                <td>{item.isPaymentOnlien == 0 ? 'Thanh toán tiền mặt' : 'Thanh toán online'}</td>\r\n                                                <td>{item.statusOrderData.value}</td>\r\n                                                <td>{CommonUtils.formatter.format(item.totalpriceProduct)}</td>\r\n                                                <td>\r\n                                                    <Link to={`/admin/order-detail/${item.id}`}>Xem chi tiết</Link>\r\n\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                    <span style={{ fontSize: '26px' }} className=\"text-total\">Tổng doanh thu:  </span>\r\n                    <span style={{ color: '#FFC0CB', fontSize: '26px' }} className=\"text-price\">{CommonUtils.formatter.format(totalPrice)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Turnover;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Statistic\\StockProduct.js",["941","942","943","944","945","946","947","948","949"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { getStatisticStockProduct } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nconst StockProduct = () => {\r\n\r\n    const [dataStockProduct, setdataStockProduct] = useState([])\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        loadStockProduct()\r\n\r\n    }, [])\r\n    let loadStockProduct = () => {\r\n        try {\r\n            let fetchData = async () => {\r\n                let arrData = await getStatisticStockProduct({\r\n\r\n                    limit: PAGINATION.pagerow,\r\n                    offset: 0,\r\n\r\n\r\n                })\r\n                if (arrData && arrData.errCode === 0) {\r\n                    setdataStockProduct(arrData.data)\r\n                    setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n                }\r\n            }\r\n            fetchData();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getStatisticStockProduct({\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow,\r\n\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataStockProduct(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleOnClickExport = async () => {\r\n        let res = await getStatisticStockProduct({\r\n\r\n            limit: '',\r\n            offset: '',\r\n\r\n        })\r\n        if (res && res.errCode == 0) {\r\n            await CommonUtils.exportExcel(res.data, \"Danh sách sản phẩm tồn kho\", \"ListOrder\")\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý sản phẩm tồn kho</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách sản phẩm tồn kho\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                    <div className='row'>\r\n\r\n                        <div className='col-12 mb-2'>\r\n                            <button style={{ float: 'right' }} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Tên sản phẩm</th>\r\n                                    <th>Danh mục</th>\r\n                                    <th>nhãn hàng</th>\r\n                                    <th>Chất liệu</th>\r\n                                    <th>Số lượng tồn</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataStockProduct && dataStockProduct.length > 0 &&\r\n                                    dataStockProduct.map((item, index) => {\r\n\r\n                                        let name = `${item.productdData.name} - ${item.productDetaildData.nameDetail} - ${item.sizeData.value}`\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index}</td>\r\n                                                <td>{name}</td>\r\n                                                <td>{item.productdData.categoryData.value}</td>\r\n                                                <td>{item.productdData.brandData.value}</td>\r\n                                                <td>{item.productdData.material}</td>\r\n                                                <td>{item.stock}</td>\r\n                                            </tr>\r\n                                        )\r\n\r\n\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={'Quay lại'}\r\n                nextLabel={'Tiếp'}\r\n                breakLabel={'...'}\r\n                pageCount={count}\r\n                marginPagesDisplayed={3}\r\n                containerClassName={\"pagination justify-content-center\"}\r\n                pageClassName={\"page-item\"}\r\n                pageLinkClassName={\"page-link\"}\r\n                previousLinkClassName={\"page-link\"}\r\n                nextClassName={\"page-item\"}\r\n                nextLinkClassName={\"page-link\"}\r\n                breakLinkClassName={\"page-link\"}\r\n                breakClassName={\"page-item\"}\r\n                activeClassName={\"active\"}\r\n                onPageChange={handleChangePage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default StockProduct;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Blog\\ManageBlog.js",["950","951","952","953","954","955","956","957"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { getAllBlog, deleteBlogService } from '../../../services/userService';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport '../Banner/AddBanner.scss';\r\nimport { PAGINATION } from '../../../utils/constant';\r\nimport ReactPaginate from 'react-paginate';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport FormSearch from '../../../component/Search/FormSearch';\r\n\r\nconst ManageBlog = () => {\r\n\r\n    const [dataBlog, setdataBlog] = useState([])\r\n    const [imgPreview, setimgPreview] = useState('')\r\n    const [isOpen, setisOpen] = useState(false)\r\n    const [count, setCount] = useState('')\r\n    const [numberPage, setnumberPage] = useState('')\r\n    const [keyword, setkeyword] = useState('')\r\n    useEffect(() => {\r\n        \r\n            loadBlog(keyword)\r\n    \r\n    }, [])\r\n    let loadBlog = async (keyword) => {\r\n        let arrData = await getAllBlog({\r\n            subjectId:'',\r\n            limit: PAGINATION.pagerow,\r\n            offset: 0,\r\n            keyword:keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataBlog(arrData.data)\r\n            setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n        }\r\n    }\r\n\r\n\r\n    let openPreviewImage = (url) => {\r\n        setimgPreview(url);\r\n        setisOpen(true);\r\n    }\r\n    let handleDeleteBlog = async (id) => {\r\n        let response = await deleteBlogService({\r\n            data: {\r\n                id: id\r\n            }\r\n        })\r\n        if (response && response.errCode === 0) {\r\n            toast.success(\"Xóa bài đăng thành công thành công !\")\r\n            let arrData = await getAllBlog({\r\n\r\n                subjectId:'',\r\n                limit: PAGINATION.pagerow,\r\n                offset: numberPage * PAGINATION.pagerow,\r\n                keyword:keyword\r\n            })\r\n            if (arrData && arrData.errCode === 0) {\r\n                setdataBlog(arrData.data)\r\n                setCount(Math.ceil(arrData.count / PAGINATION.pagerow))\r\n            }\r\n        } else {\r\n            toast.error(\"Xóa bài đăng thất bại\")\r\n        }\r\n    }\r\n    let handleChangePage = async (number) => {\r\n        setnumberPage(number.selected)\r\n        let arrData = await getAllBlog({\r\n\r\n            subjectId:'',\r\n            limit: PAGINATION.pagerow,\r\n            offset: number.selected * PAGINATION.pagerow,\r\n            keyword:keyword\r\n\r\n        })\r\n        if (arrData && arrData.errCode === 0) {\r\n            setdataBlog(arrData.data)\r\n\r\n        }\r\n    }\r\n    let handleSearchBlog = (keyword) =>{\r\n        loadBlog(keyword)\r\n        setkeyword(keyword)\r\n    }\r\n    let handleOnchangeSearch = (keyword) =>{\r\n        if(keyword === ''){\r\n            loadBlog(keyword)\r\n            setkeyword(keyword)\r\n        }\r\n    }\r\n    let handleOnClickExport =async () =>{\r\n        let res = await getAllBlog({\r\n            subjectId:'',\r\n            limit: '',\r\n            offset:'',\r\n            keyword:''\r\n        })\r\n        if(res && res.errCode == 0){\r\n            res.data.forEach(element => {\r\n                element.image = \"\"\r\n            })\r\n            await CommonUtils.exportExcel(res.data,\"Danh sách bài viết\",\"ListBlog\")\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý bài đăng</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    Danh sách bài đăng\r\n                </div>\r\n                <div className=\"card-body\">\r\n              \r\n                    <div className='row'>\r\n                    <div  className='col-4'>\r\n                    <FormSearch title={\"tiêu đề\"}  handleOnchange={handleOnchangeSearch} handleSearch={handleSearchBlog} />\r\n                    </div>\r\n                    <div className='col-8'>\r\n                    <button  style={{float:'right'}} onClick={() => handleOnClickExport()} className=\"btn btn-success\" >Xuất excel <i class=\"fa-solid fa-file-excel\"></i></button>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\" style={{ border: '1' }} width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Tên bài đăng</th>\r\n                                    <th>Chủ đề</th>\r\n                                    <th>Hình ảnh</th>\r\n                                    <th>Thao tác</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {dataBlog && dataBlog.length > 0 &&\r\n                                    dataBlog.map((item, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{item.title}</td>\r\n                                                <td>{item.subjectData.value}</td>\r\n                                                <td style={{ width: '30%' }} ><div onClick={() => openPreviewImage(item.image)} className=\"box-img-preview\" style={{ backgroundImage: `url(${item.image})`, width: '100%' }}></div></td>\r\n                                                <td style={{ width: '20%' }}>\r\n                                                    <Link to={`/admin/edit-blog/${item.id}`}>Edit</Link>\r\n                                                    &nbsp; &nbsp;\r\n\r\n                                                    <span onClick={() => handleDeleteBlog(item.id)} style={{ color: '#0E6DFE', cursor: 'pointer' }} >Delete</span>\r\n\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <ReactPaginate\r\n                    previousLabel={'Quay lại'}\r\n                    nextLabel={'Tiếp'}\r\n                    breakLabel={'...'}\r\n                    pageCount={count}\r\n                    marginPagesDisplayed={3}\r\n                    containerClassName={\"pagination justify-content-center\"}\r\n                    pageClassName={\"page-item\"}\r\n                    pageLinkClassName={\"page-link\"}\r\n                    previousLinkClassName={\"page-link\"}\r\n                    nextClassName={\"page-item\"}\r\n                    nextLinkClassName={\"page-link\"}\r\n                    breakLinkClassName={\"page-link\"}\r\n                    breakClassName={\"page-item\"}\r\n                    activeClassName={\"active\"}\r\n                    onPageChange={handleChangePage}\r\n                />\r\n            </div>\r\n            {\r\n                isOpen === true &&\r\n                <Lightbox mainSrc={imgPreview}\r\n                    onCloseRequest={() => setisOpen(false)}\r\n                />\r\n            }\r\n        </div >\r\n    )\r\n}\r\nexport default ManageBlog;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Subject\\AddSubject.js",["958","959","960","961","962","963"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { createAllCodeService, getDetailAllcodeById, UpdateAllcodeService } from '../../../services/userService';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { useParams } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport moment from 'moment';\r\nconst AddSubject = (props) => {\r\n\r\n\r\n\r\n    const [isActionADD, setisActionADD] = useState(true)\r\n\r\n\r\n    const { id } = useParams();\r\n\r\n    const [inputValues, setInputValues] = useState({\r\n        value: '', code: ''\r\n    });\r\n    useEffect(() => {\r\n\r\n        if (id) {\r\n            let fetchDetailSubject = async () => {\r\n                setisActionADD(false)\r\n                let allcode = await getDetailAllcodeById(id)\r\n                if (allcode && allcode.errCode === 0) {\r\n                    setInputValues({ ...inputValues, [\"value\"]: allcode.data.value, [\"code\"]: allcode.data.code })\r\n                }\r\n            }\r\n            fetchDetailSubject()\r\n        }\r\n    }, [])\r\n\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    let handleSaveSubject = async () => {\r\n        if (isActionADD === true) {\r\n            let res = await createAllCodeService({\r\n                value: inputValues.value,\r\n                code: inputValues.code,\r\n                type: 'SUBJECT'\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Thêm chủ đề thành công\")\r\n                setInputValues({\r\n                    ...inputValues,\r\n                    [\"value\"]: '',\r\n                    [\"code\"]: ''\r\n                })\r\n            }\r\n            else if (res && res.errCode === 2) {\r\n                toast.error(res.errMessage)\r\n            }\r\n            else toast.error(\"Thêm chủ đề thất bại\")\r\n        } else {\r\n            let res = await UpdateAllcodeService({\r\n                value: inputValues.value,\r\n                code: inputValues.code,\r\n                id: id\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Cập nhật chủ đề thành công\")\r\n\r\n            }\r\n            else if (res && res.errCode === 2) {\r\n                toast.error(res.errMessage)\r\n            }\r\n            else toast.error(\"Cập nhật chủ đề thất bại\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid px-4\">\r\n            <h1 className=\"mt-4\">Quản lý chủ đề</h1>\r\n\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                    <i className=\"fas fa-table me-1\" />\r\n                    {isActionADD === true ? 'Thêm mới chủ đề' : 'Cập nhật thông tin chủ đề'}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputEmail4\">Tên chủ đề</label>\r\n                                <input type=\"text\" value={inputValues.value} name=\"value\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputEmail4\" />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">Mã code</label>\r\n                                <input type=\"text\" value={inputValues.code} name=\"code\" onChange={(event) => handleOnChange(event)} className=\"form-control\" id=\"inputPassword4\" />\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"button\" onClick={() => handleSaveSubject()} className=\"btn btn-primary\">Lưu thông tin</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddSubject;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\ShopCart\\ShopCartItem.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ProductImage\\AddImageModal.js",["964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CommonUtils from \"../../../../utils/CommonUtils\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { Modal, ModalHeader, ModalFooter, ModalBody, Button } from \"reactstrap\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport { getProductDetailImageByIdService } from \"../../../../services/userService\";\r\n\r\nconst AddImageModal = (props) => {\r\n    const [inputValues, setInputValues] = useState({\r\n        image: \"\",\r\n        imageReview: \"\",\r\n        caption: \"\",\r\n        isOpen: false,\r\n        isActionUpdate: false,\r\n        id: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        let id = props.productImageId;\r\n        console.log(\"check id\", id);\r\n        if (id) {\r\n            let fetchProductImage = async () => {\r\n                let res = await getProductDetailImageByIdService(id);\r\n                if (res && res.errCode === 0) {\r\n                    setInputValues({\r\n                        ...inputValues,\r\n                        [\"isActionUpdate\"]: true,\r\n                        [\"caption\"]: res.data.caption,\r\n                        [\"image\"]: res.data.image,\r\n                        [\"imageReview\"]: res.data.image,\r\n                    });\r\n                }\r\n            };\r\n            fetchProductImage();\r\n        }\r\n    }, [props.isOpenModal]);\r\n\r\n    const handleOnChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n    };\r\n\r\n    let handleOnChangeImage = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if (file?.size > 31312281) {\r\n            toast.error(\"Dung lượng file bé hơn 30mb\");\r\n        } else {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            setInputValues({\r\n                ...inputValues,\r\n                [\"image\"]: base64,\r\n                [\"imageReview\"]: objectUrl,\r\n            });\r\n        }\r\n    };\r\n    let openPreviewImage = () => {\r\n        if (!inputValues.imageReview) return;\r\n\r\n        setInputValues({ ...inputValues, [\"isOpen\"]: true });\r\n    };\r\n    let HandleSendDataFromModal = () => {\r\n        props.sendDataFromModal({\r\n            image: inputValues.image,\r\n            caption: inputValues.caption,\r\n            isActionUpdate: inputValues.isActionUpdate,\r\n            id: props.productImageId,\r\n        });\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"image\"]: \"\",\r\n            [\"imageReview\"]: \"\",\r\n            [\"caption\"]: \"\",\r\n            [\"isActionUpdate\"]: false,\r\n        });\r\n    };\r\n    let handleCloseModal = () => {\r\n        props.closeModal();\r\n        setInputValues({\r\n            ...inputValues,\r\n            [\"image\"]: \"\",\r\n            [\"imageReview\"]: \"\",\r\n            [\"caption\"]: \"\",\r\n            [\"isActionUpdate\"]: false,\r\n        });\r\n    };\r\n    return (\r\n        <div className=\"\">\r\n            <Modal\r\n                isOpen={props.isOpenModal}\r\n                className={\"booking-modal-container\"}\r\n                size=\"md\"\r\n                centered\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">\r\n                        Thêm hình ảnh chi tiết sản phẩm\r\n                    </h5>\r\n                    <button\r\n                        onClick={handleCloseModal}\r\n                        type=\"button\"\r\n                        className=\"btn btn-time\"\r\n                        aria-label=\"Close\"\r\n                    >\r\n                        X\r\n                    </button>\r\n                </div>\r\n                <ModalBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 form-group\">\r\n                            <label>Tên hình ảnh</label>\r\n                            <input\r\n                                value={inputValues.caption}\r\n                                name=\"caption\"\r\n                                onChange={(event) => handleOnChange(event)}\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 form-group\">\r\n                            <label>Ảnh hiển thị</label>\r\n                            <div\r\n                                style={{\r\n                                    backgroundImage: `url(${inputValues.imageReview})`,\r\n                                }}\r\n                                onClick={() => openPreviewImage()}\r\n                                className=\"img-review\"\r\n                            ></div>\r\n                        </div>\r\n                        <div className=\"col-12 form-group\">\r\n                            <label>Chọn hình ảnh</label>\r\n                            <input\r\n                                onChange={(event) => handleOnChangeImage(event)}\r\n                                type=\"file\"\r\n                                accept=\".jpg,.png\"\r\n                                className=\"form-control form-file\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={HandleSendDataFromModal}>\r\n                        Lưu thông tin\r\n                    </Button>{\" \"}\r\n                    <Button onClick={handleCloseModal}>Hủy</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n            {inputValues.isOpen === true && (\r\n                <Lightbox\r\n                    mainSrc={inputValues.imageReview}\r\n                    onCloseRequest={() =>\r\n                        setInputValues({ ...inputValues, [\"isOpen\"]: false })\r\n                    }\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default AddImageModal;\r\n","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\container\\System\\Product\\ProductImage\\AddSizeModal.js",["989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016"],"import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport CommonUtils from '../../../../utils/CommonUtils';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport { useFetchAllcode } from '../../../customize/fetch';\r\nimport { Modal, ModalHeader, ModalFooter, ModalBody, Button } from 'reactstrap';\r\nimport { getProductDetailSizeByIdService } from '../../../../services/userService';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst AddSizeModal = (props) => {\r\n    const { data: dataSize } = useFetchAllcode('SIZE')\r\n    const [inputValues, setInputValues] = useState({\r\n        sizeId: '', width: '', height: '', isActionUpdate: false, id: '', weight: ''\r\n    });\r\n    const handleOnChange = event => {\r\n        const { name, value } = event.target;\r\n        setInputValues({ ...inputValues, [name]: value });\r\n\r\n    };\r\n    if (dataSize && dataSize.length > 0 && inputValues.sizeId === '') {\r\n\r\n        setInputValues({ ...inputValues, [\"sizeId\"]: dataSize[0].code })\r\n    }\r\n    useEffect(() => {\r\n        let id = props.productSizeId\r\n\r\n        if (id) {\r\n            let fetchDetailProductSize = async () => {\r\n                let res = await getProductDetailSizeByIdService(id)\r\n                if (res && res.errCode === 0) {\r\n                    setInputValues({\r\n                        ...inputValues, [\"isActionUpdate\"]: true, [\"sizeId\"]: res.data.sizeId, [\"width\"]: res.data.width,\r\n                        [\"height\"]: res.data.height,  [\"weight\"]: res.data.weight\r\n                    })\r\n\r\n                }\r\n            }\r\n            fetchDetailProductSize()\r\n        }\r\n    }, [props.isOpenModal])\r\n    let handleSaveInfor = () => {\r\n        props.sendDataFromModalSize({\r\n            sizeId: inputValues.sizeId,\r\n         \r\n            width: inputValues.width,\r\n            height: inputValues.height,\r\n            isActionUpdate: inputValues.isActionUpdate,\r\n            id: props.productSizeId,\r\n            weight: inputValues.weight\r\n        })\r\n        setInputValues({ ...inputValues, [\"sizeId\"]: '',  [\"width\"]: '', [\"height\"]: '', [\"weight\"]: '', [\"isActionUpdate\"]: false })\r\n    }\r\n    let handleCloseModal = () => {\r\n        props.closeModal()\r\n        setInputValues({ ...inputValues, [\"sizeId\"]: '', [\"width\"]: '', [\"height\"]: '', [\"weight\"]: '', [\"isActionUpdate\"]: false })\r\n\r\n    }\r\n    return (\r\n        <div className=\"\">\r\n            <Modal isOpen={props.isOpenModal} className={'booking-modal-container'}\r\n                size=\"md\" centered\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Thêm kích thước chi tiết sản phẩm</h5>\r\n                    <button onClick={handleCloseModal} type=\"button\" className=\"btn btn-time\" aria-label=\"Close\">X</button>\r\n                </div>\r\n                <ModalBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 form-group\">\r\n                            <label>Kích thước</label>\r\n                            <select value={inputValues.sizeId} name=\"sizeId\" onChange={(event) => handleOnChange(event)} id=\"inputState\" className=\"form-control\">\r\n                                {dataSize && dataSize.length > 0 &&\r\n                                    dataSize.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index} value={item.code}>{item.value}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-12 form-group\">\r\n                            <label>Chiều rộng</label>\r\n                            <input value={inputValues.width} name=\"width\" onChange={(event) => handleOnChange(event)} type=\"text\" className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 form-group\">\r\n                            <label>Chiều dài</label>\r\n                            <input value={inputValues.height} name=\"height\" onChange={(event) => handleOnChange(event)} type=\"text\" className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-12 form-group\">\r\n                            <label>Khối lượng</label>\r\n                            <input value={inputValues.weight} name=\"weight\" onChange={(event) => handleOnChange(event)} type=\"text\" className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        onClick={handleSaveInfor}\r\n                    >\r\n                        Lưu thông tin\r\n                    </Button>\r\n                    {' '}\r\n                    <Button onClick={handleCloseModal}>\r\n                        Hủy\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div >\r\n    )\r\n}\r\nexport default AddSizeModal;","C:\\Code\\ecom\\eCommerce_Reactjs\\src\\component\\input\\DatePicker.js",[],"C:\\Code\\ecom\\eCommerce_Reactjs\\src\\utils\\KeyCodeUtils.js",[],{"ruleId":"1017","replacedBy":"1018"},{"ruleId":"1019","replacedBy":"1020"},{"ruleId":"1021","severity":1,"message":"1022","line":1,"column":17,"nodeType":"1023","messageId":"1024","endLine":1,"endColumn":26},{"ruleId":"1021","severity":1,"message":"1025","line":1,"column":28,"nodeType":"1023","messageId":"1024","endLine":1,"endColumn":36},{"ruleId":"1021","severity":1,"message":"1026","line":1,"column":38,"nodeType":"1023","messageId":"1024","endLine":1,"endColumn":47},{"ruleId":"1021","severity":1,"message":"1027","line":1,"column":49,"nodeType":"1023","messageId":"1024","endLine":1,"endColumn":57},{"ruleId":"1021","severity":1,"message":"1028","line":14,"column":3,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":7},{"ruleId":"1029","severity":2,"message":"1030","line":41,"column":28,"nodeType":"1031","messageId":"1032","endLine":41,"endColumn":36},{"ruleId":"1033","severity":1,"message":"1034","line":12,"column":21,"nodeType":"1035","endLine":12,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":13,"column":21,"nodeType":"1035","endLine":13,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":14,"column":21,"nodeType":"1035","endLine":14,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":15,"column":21,"nodeType":"1035","endLine":15,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":21,"column":21,"nodeType":"1035","endLine":21,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":22,"column":21,"nodeType":"1035","endLine":22,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":23,"column":21,"nodeType":"1035","endLine":23,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":24,"column":21,"nodeType":"1035","endLine":24,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":30,"column":21,"nodeType":"1035","endLine":30,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":31,"column":21,"nodeType":"1035","endLine":31,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":32,"column":21,"nodeType":"1035","endLine":32,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":33,"column":21,"nodeType":"1035","endLine":33,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":39,"column":21,"nodeType":"1035","endLine":39,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":40,"column":21,"nodeType":"1035","endLine":40,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":41,"column":21,"nodeType":"1035","endLine":41,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":42,"column":21,"nodeType":"1035","endLine":42,"endColumn":33},{"ruleId":"1036","severity":1,"message":"1037","line":49,"column":85,"nodeType":"1035","messageId":"1038","endLine":49,"endColumn":132,"fix":"1039"},{"ruleId":"1040","severity":1,"message":"1041","line":49,"column":85,"nodeType":"1035","endLine":49,"endColumn":132},{"ruleId":"1021","severity":1,"message":"1042","line":4,"column":25,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":35},{"ruleId":"1021","severity":1,"message":"1043","line":19,"column":12,"nodeType":"1023","messageId":"1024","endLine":19,"endColumn":14},{"ruleId":"1044","severity":1,"message":"1045","line":49,"column":8,"nodeType":"1046","endLine":49,"endColumn":10,"suggestions":"1047"},{"ruleId":"1048","severity":1,"message":"1049","line":60,"column":31,"nodeType":"1050","messageId":"1051","endLine":60,"endColumn":33},{"ruleId":"1021","severity":1,"message":"1026","line":2,"column":10,"nodeType":"1023","messageId":"1024","endLine":2,"endColumn":19},{"ruleId":"1021","severity":1,"message":"1027","line":2,"column":21,"nodeType":"1023","messageId":"1024","endLine":2,"endColumn":29},{"ruleId":"1021","severity":1,"message":"1028","line":3,"column":10,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1052","line":6,"column":9,"nodeType":"1023","messageId":"1024","endLine":6,"endColumn":16},{"ruleId":"1033","severity":1,"message":"1053","line":45,"column":68,"nodeType":"1035","endLine":45,"endColumn":102},{"ruleId":"1033","severity":1,"message":"1053","line":55,"column":37,"nodeType":"1035","endLine":55,"endColumn":40},{"ruleId":"1021","severity":1,"message":"1054","line":2,"column":8,"nodeType":"1023","messageId":"1024","endLine":2,"endColumn":9},{"ruleId":"1021","severity":1,"message":"1055","line":26,"column":13,"nodeType":"1023","messageId":"1024","endLine":26,"endColumn":17},{"ruleId":"1021","severity":1,"message":"1026","line":1,"column":17,"nodeType":"1023","messageId":"1024","endLine":1,"endColumn":26},{"ruleId":"1021","severity":1,"message":"1027","line":1,"column":28,"nodeType":"1023","messageId":"1024","endLine":1,"endColumn":36},{"ruleId":"1021","severity":1,"message":"1056","line":8,"column":10,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":34},{"ruleId":"1021","severity":1,"message":"1026","line":1,"column":17,"nodeType":"1023","messageId":"1024","endLine":1,"endColumn":26},{"ruleId":"1021","severity":1,"message":"1027","line":1,"column":28,"nodeType":"1023","messageId":"1024","endLine":1,"endColumn":36},{"ruleId":"1033","severity":1,"message":"1053","line":13,"column":25,"nodeType":"1035","endLine":13,"endColumn":29},{"ruleId":"1033","severity":1,"message":"1053","line":14,"column":25,"nodeType":"1035","endLine":14,"endColumn":29},{"ruleId":"1033","severity":1,"message":"1053","line":24,"column":21,"nodeType":"1035","endLine":24,"endColumn":46},{"ruleId":"1021","severity":1,"message":"1026","line":1,"column":17,"nodeType":"1023","messageId":"1024","endLine":1,"endColumn":26},{"ruleId":"1021","severity":1,"message":"1057","line":2,"column":10,"nodeType":"1023","messageId":"1024","endLine":2,"endColumn":21},{"ruleId":"1021","severity":1,"message":"1058","line":4,"column":10,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":26},{"ruleId":"1033","severity":1,"message":"1053","line":18,"column":29,"nodeType":"1035","endLine":18,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1053","line":21,"column":29,"nodeType":"1035","endLine":21,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1053","line":27,"column":25,"nodeType":"1035","endLine":27,"endColumn":48},{"ruleId":"1021","severity":1,"message":"1059","line":5,"column":8,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":18},{"ruleId":"1021","severity":1,"message":"1060","line":6,"column":8,"nodeType":"1023","messageId":"1024","endLine":6,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1061","line":7,"column":8,"nodeType":"1023","messageId":"1024","endLine":7,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1062","line":8,"column":10,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":19},{"ruleId":"1044","severity":1,"message":"1063","line":12,"column":15,"nodeType":"1064","endLine":14,"endColumn":6},{"ruleId":"1033","severity":1,"message":"1053","line":42,"column":37,"nodeType":"1035","endLine":42,"endColumn":40},{"ruleId":"1021","severity":1,"message":"1065","line":11,"column":12,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":22},{"ruleId":"1044","severity":1,"message":"1066","line":24,"column":8,"nodeType":"1046","endLine":24,"endColumn":10,"suggestions":"1067"},{"ruleId":"1044","severity":1,"message":"1068","line":47,"column":8,"nodeType":"1046","endLine":47,"endColumn":41,"suggestions":"1069"},{"ruleId":"1033","severity":1,"message":"1034","line":6,"column":56,"nodeType":"1035","endLine":6,"endColumn":90},{"ruleId":"1033","severity":1,"message":"1034","line":12,"column":21,"nodeType":"1035","endLine":12,"endColumn":77},{"ruleId":"1033","severity":1,"message":"1034","line":18,"column":21,"nodeType":"1035","endLine":18,"endColumn":73},{"ruleId":"1033","severity":1,"message":"1053","line":40,"column":37,"nodeType":"1035","endLine":40,"endColumn":41},{"ruleId":"1021","severity":1,"message":"1026","line":2,"column":10,"nodeType":"1023","messageId":"1024","endLine":2,"endColumn":19},{"ruleId":"1021","severity":1,"message":"1070","line":4,"column":10,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":15},{"ruleId":"1021","severity":1,"message":"1062","line":5,"column":10,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":19},{"ruleId":"1021","severity":1,"message":"1071","line":4,"column":8,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":24},{"ruleId":"1021","severity":1,"message":"1072","line":6,"column":8,"nodeType":"1023","messageId":"1024","endLine":6,"endColumn":22},{"ruleId":"1021","severity":1,"message":"1073","line":10,"column":8,"nodeType":"1023","messageId":"1024","endLine":10,"endColumn":25},{"ruleId":"1044","severity":1,"message":"1063","line":18,"column":15,"nodeType":"1064","endLine":32,"endColumn":6},{"ruleId":"1044","severity":1,"message":"1074","line":32,"column":8,"nodeType":"1046","endLine":32,"endColumn":10,"suggestions":"1075"},{"ruleId":"1044","severity":1,"message":"1076","line":31,"column":8,"nodeType":"1046","endLine":31,"endColumn":27,"suggestions":"1077"},{"ruleId":"1033","severity":1,"message":"1034","line":135,"column":29,"nodeType":"1035","endLine":135,"endColumn":60},{"ruleId":"1033","severity":1,"message":"1034","line":139,"column":29,"nodeType":"1035","endLine":139,"endColumn":41},{"ruleId":"1033","severity":1,"message":"1034","line":143,"column":33,"nodeType":"1035","endLine":143,"endColumn":45},{"ruleId":"1033","severity":1,"message":"1034","line":161,"column":29,"nodeType":"1035","endLine":161,"endColumn":41},{"ruleId":"1033","severity":1,"message":"1053","line":192,"column":25,"nodeType":"1035","endLine":192,"endColumn":85},{"ruleId":"1033","severity":1,"message":"1034","line":193,"column":25,"nodeType":"1035","endLine":193,"endColumn":58},{"ruleId":"1044","severity":1,"message":"1078","line":21,"column":8,"nodeType":"1046","endLine":21,"endColumn":10,"suggestions":"1079"},{"ruleId":"1080","severity":1,"message":"1081","line":24,"column":42,"nodeType":"1082","messageId":"1083","endLine":24,"endColumn":62,"fix":"1084"},{"ruleId":"1080","severity":1,"message":"1085","line":24,"column":64,"nodeType":"1082","messageId":"1083","endLine":24,"endColumn":80,"fix":"1086"},{"ruleId":"1080","severity":1,"message":"1087","line":39,"column":33,"nodeType":"1082","messageId":"1083","endLine":39,"endColumn":57,"fix":"1088"},{"ruleId":"1080","severity":1,"message":"1089","line":39,"column":59,"nodeType":"1082","messageId":"1083","endLine":47,"endColumn":18,"fix":"1090"},{"ruleId":"1080","severity":1,"message":"1091","line":48,"column":17,"nodeType":"1082","messageId":"1083","endLine":48,"endColumn":32,"fix":"1092"},{"ruleId":"1080","severity":1,"message":"1093","line":48,"column":34,"nodeType":"1082","messageId":"1083","endLine":48,"endColumn":47,"fix":"1094"},{"ruleId":"1080","severity":1,"message":"1081","line":48,"column":49,"nodeType":"1082","messageId":"1083","endLine":48,"endColumn":68,"fix":"1095"},{"ruleId":"1080","severity":1,"message":"1096","line":48,"column":70,"nodeType":"1082","messageId":"1083","endLine":48,"endColumn":88,"fix":"1097"},{"ruleId":"1080","severity":1,"message":"1098","line":48,"column":90,"nodeType":"1082","messageId":"1083","endLine":48,"endColumn":112,"fix":"1099"},{"ruleId":"1080","severity":1,"message":"1096","line":53,"column":42,"nodeType":"1082","messageId":"1083","endLine":53,"endColumn":64,"fix":"1100"},{"ruleId":"1080","severity":1,"message":"1093","line":64,"column":46,"nodeType":"1082","messageId":"1083","endLine":64,"endColumn":63,"fix":"1101"},{"ruleId":"1080","severity":1,"message":"1081","line":64,"column":65,"nodeType":"1082","messageId":"1083","endLine":64,"endColumn":91,"fix":"1102"},{"ruleId":"1080","severity":1,"message":"1098","line":95,"column":42,"nodeType":"1082","messageId":"1083","endLine":95,"endColumn":64,"fix":"1103"},{"ruleId":"1080","severity":1,"message":"1104","line":95,"column":66,"nodeType":"1082","messageId":"1083","endLine":95,"endColumn":82,"fix":"1105"},{"ruleId":"1080","severity":1,"message":"1098","line":99,"column":42,"nodeType":"1082","messageId":"1083","endLine":99,"endColumn":63,"fix":"1106"},{"ruleId":"1080","severity":1,"message":"1104","line":99,"column":65,"nodeType":"1082","messageId":"1083","endLine":99,"endColumn":81,"fix":"1107"},{"ruleId":"1033","severity":1,"message":"1034","line":144,"column":37,"nodeType":"1035","endLine":144,"endColumn":49},{"ruleId":"1033","severity":1,"message":"1034","line":152,"column":37,"nodeType":"1035","endLine":152,"endColumn":49},{"ruleId":"1033","severity":1,"message":"1034","line":160,"column":37,"nodeType":"1035","endLine":160,"endColumn":49},{"ruleId":"1033","severity":1,"message":"1034","line":167,"column":37,"nodeType":"1035","endLine":167,"endColumn":49},{"ruleId":"1033","severity":1,"message":"1034","line":173,"column":37,"nodeType":"1035","endLine":173,"endColumn":49},{"ruleId":"1108","severity":1,"message":"1109","line":212,"column":66,"nodeType":"1064","messageId":"1110","endLine":212,"endColumn":68},{"ruleId":"1033","severity":1,"message":"1053","line":236,"column":53,"nodeType":"1035","endLine":236,"endColumn":150},{"ruleId":"1111","severity":1,"message":"1112","line":246,"column":49,"nodeType":"1035","endLine":246,"endColumn":136},{"ruleId":"1080","severity":1,"message":"1085","line":279,"column":76,"nodeType":"1082","messageId":"1083","endLine":279,"endColumn":93,"fix":"1113"},{"ruleId":"1080","severity":1,"message":"1081","line":279,"column":95,"nodeType":"1082","messageId":"1083","endLine":279,"endColumn":114,"fix":"1114"},{"ruleId":"1033","severity":1,"message":"1034","line":16,"column":33,"nodeType":"1035","endLine":16,"endColumn":67},{"ruleId":"1033","severity":1,"message":"1034","line":34,"column":33,"nodeType":"1035","endLine":34,"endColumn":67},{"ruleId":"1033","severity":1,"message":"1034","line":52,"column":33,"nodeType":"1035","endLine":52,"endColumn":67},{"ruleId":"1021","severity":1,"message":"1026","line":2,"column":10,"nodeType":"1023","messageId":"1024","endLine":2,"endColumn":19},{"ruleId":"1021","severity":1,"message":"1115","line":3,"column":8,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":19},{"ruleId":"1021","severity":1,"message":"1116","line":4,"column":8,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1070","line":5,"column":10,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":15},{"ruleId":"1021","severity":1,"message":"1117","line":8,"column":17,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1118","line":11,"column":22,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":13,"column":5,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1028","line":14,"column":5,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":9},{"ruleId":"1021","severity":1,"message":"1121","line":15,"column":5,"nodeType":"1023","messageId":"1024","endLine":15,"endColumn":13},{"ruleId":"1021","severity":1,"message":"1062","line":16,"column":5,"nodeType":"1023","messageId":"1024","endLine":16,"endColumn":14},{"ruleId":"1080","severity":1,"message":"1091","line":34,"column":42,"nodeType":"1082","messageId":"1083","endLine":34,"endColumn":57,"fix":"1122"},{"ruleId":"1080","severity":1,"message":"1091","line":38,"column":42,"nodeType":"1082","messageId":"1083","endLine":38,"endColumn":57,"fix":"1123"},{"ruleId":"1021","severity":1,"message":"1052","line":6,"column":9,"nodeType":"1023","messageId":"1024","endLine":6,"endColumn":16},{"ruleId":"1033","severity":1,"message":"1034","line":32,"column":21,"nodeType":"1035","endLine":32,"endColumn":152},{"ruleId":"1033","severity":1,"message":"1053","line":37,"column":29,"nodeType":"1035","endLine":37,"endColumn":90},{"ruleId":"1021","severity":1,"message":"1118","line":4,"column":22,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":5,"column":5,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":6,"column":5,"nodeType":"1023","messageId":"1024","endLine":6,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":8,"column":5,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":13},{"ruleId":"1033","severity":1,"message":"1034","line":31,"column":33,"nodeType":"1035","endLine":31,"endColumn":190},{"ruleId":"1033","severity":1,"message":"1034","line":42,"column":33,"nodeType":"1035","endLine":42,"endColumn":191},{"ruleId":"1033","severity":1,"message":"1034","line":53,"column":33,"nodeType":"1035","endLine":53,"endColumn":188},{"ruleId":"1033","severity":1,"message":"1034","line":64,"column":33,"nodeType":"1035","endLine":64,"endColumn":190},{"ruleId":"1033","severity":1,"message":"1034","line":76,"column":33,"nodeType":"1035","endLine":76,"endColumn":189},{"ruleId":"1033","severity":1,"message":"1034","line":87,"column":33,"nodeType":"1035","endLine":87,"endColumn":190},{"ruleId":"1033","severity":1,"message":"1034","line":98,"column":33,"nodeType":"1035","endLine":98,"endColumn":187},{"ruleId":"1033","severity":1,"message":"1034","line":109,"column":33,"nodeType":"1035","endLine":109,"endColumn":187},{"ruleId":"1033","severity":1,"message":"1034","line":120,"column":33,"nodeType":"1035","endLine":120,"endColumn":190},{"ruleId":"1033","severity":1,"message":"1034","line":136,"column":25,"nodeType":"1035","endLine":136,"endColumn":183},{"ruleId":"1033","severity":1,"message":"1034","line":147,"column":25,"nodeType":"1035","endLine":147,"endColumn":182},{"ruleId":"1033","severity":1,"message":"1034","line":158,"column":25,"nodeType":"1035","endLine":158,"endColumn":180},{"ruleId":"1033","severity":1,"message":"1034","line":169,"column":25,"nodeType":"1035","endLine":169,"endColumn":180},{"ruleId":"1033","severity":1,"message":"1034","line":182,"column":33,"nodeType":"1035","endLine":182,"endColumn":192},{"ruleId":"1044","severity":1,"message":"1124","line":71,"column":6,"nodeType":"1046","endLine":71,"endColumn":8,"suggestions":"1125"},{"ruleId":"1048","severity":1,"message":"1049","line":129,"column":28,"nodeType":"1050","messageId":"1051","endLine":129,"endColumn":30},{"ruleId":"1048","severity":1,"message":"1049","line":139,"column":21,"nodeType":"1050","messageId":"1051","endLine":139,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1049","line":143,"column":28,"nodeType":"1050","messageId":"1051","endLine":143,"endColumn":30},{"ruleId":"1048","severity":1,"message":"1049","line":153,"column":28,"nodeType":"1050","messageId":"1051","endLine":153,"endColumn":30},{"ruleId":"1048","severity":1,"message":"1049","line":159,"column":28,"nodeType":"1050","messageId":"1051","endLine":159,"endColumn":30},{"ruleId":"1033","severity":1,"message":"1034","line":192,"column":15,"nodeType":"1035","endLine":192,"endColumn":71},{"ruleId":"1048","severity":1,"message":"1049","line":241,"column":21,"nodeType":"1050","messageId":"1051","endLine":241,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1049","line":262,"column":21,"nodeType":"1050","messageId":"1051","endLine":262,"endColumn":23},{"ruleId":"1048","severity":1,"message":"1049","line":276,"column":21,"nodeType":"1050","messageId":"1051","endLine":276,"endColumn":23},{"ruleId":"1021","severity":1,"message":"1118","line":10,"column":22,"nodeType":"1023","messageId":"1024","endLine":10,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":11,"column":5,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":14,"column":5,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":13},{"ruleId":"1044","severity":1,"message":"1126","line":27,"column":8,"nodeType":"1046","endLine":27,"endColumn":10,"suggestions":"1127"},{"ruleId":"1048","severity":1,"message":"1049","line":91,"column":31,"nodeType":"1050","messageId":"1051","endLine":91,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":147,"column":53,"nodeType":"1035","endLine":147,"endColumn":117},{"ruleId":"1021","severity":1,"message":"1128","line":9,"column":8,"nodeType":"1023","messageId":"1024","endLine":9,"endColumn":20},{"ruleId":"1080","severity":1,"message":"1129","line":27,"column":13,"nodeType":"1082","messageId":"1083","endLine":27,"endColumn":42,"fix":"1130"},{"ruleId":"1080","severity":1,"message":"1131","line":28,"column":13,"nodeType":"1082","messageId":"1083","endLine":28,"endColumn":40,"fix":"1132"},{"ruleId":"1080","severity":1,"message":"1133","line":29,"column":13,"nodeType":"1082","messageId":"1083","endLine":29,"endColumn":38,"fix":"1134"},{"ruleId":"1080","severity":1,"message":"1135","line":30,"column":13,"nodeType":"1082","messageId":"1083","endLine":30,"endColumn":46,"fix":"1136"},{"ruleId":"1080","severity":1,"message":"1137","line":31,"column":13,"nodeType":"1082","messageId":"1083","endLine":31,"endColumn":40,"fix":"1138"},{"ruleId":"1080","severity":1,"message":"1139","line":32,"column":13,"nodeType":"1082","messageId":"1083","endLine":32,"endColumn":36,"fix":"1140"},{"ruleId":"1080","severity":1,"message":"1141","line":33,"column":13,"nodeType":"1082","messageId":"1083","endLine":33,"endColumn":34,"fix":"1142"},{"ruleId":"1080","severity":1,"message":"1143","line":34,"column":13,"nodeType":"1082","messageId":"1083","endLine":34,"endColumn":28,"fix":"1144"},{"ruleId":"1080","severity":1,"message":"1145","line":35,"column":13,"nodeType":"1082","messageId":"1083","endLine":35,"endColumn":30,"fix":"1146"},{"ruleId":"1044","severity":1,"message":"1147","line":51,"column":8,"nodeType":"1046","endLine":51,"endColumn":10,"suggestions":"1148"},{"ruleId":"1080","severity":1,"message":"1137","line":64,"column":42,"nodeType":"1082","messageId":"1083","endLine":64,"endColumn":74,"fix":"1149"},{"ruleId":"1080","severity":1,"message":"1139","line":64,"column":76,"nodeType":"1082","messageId":"1083","endLine":64,"endColumn":104,"fix":"1150"},{"ruleId":"1080","severity":1,"message":"1129","line":92,"column":21,"nodeType":"1082","messageId":"1083","endLine":92,"endColumn":38,"fix":"1151"},{"ruleId":"1080","severity":1,"message":"1131","line":93,"column":21,"nodeType":"1082","messageId":"1083","endLine":93,"endColumn":37,"fix":"1152"},{"ruleId":"1080","severity":1,"message":"1133","line":94,"column":21,"nodeType":"1082","messageId":"1083","endLine":94,"endColumn":36,"fix":"1153"},{"ruleId":"1080","severity":1,"message":"1135","line":95,"column":21,"nodeType":"1082","messageId":"1083","endLine":95,"endColumn":40,"fix":"1154"},{"ruleId":"1080","severity":1,"message":"1137","line":96,"column":21,"nodeType":"1082","messageId":"1083","endLine":96,"endColumn":37,"fix":"1155"},{"ruleId":"1080","severity":1,"message":"1139","line":97,"column":21,"nodeType":"1082","messageId":"1083","endLine":97,"endColumn":35,"fix":"1156"},{"ruleId":"1080","severity":1,"message":"1141","line":98,"column":21,"nodeType":"1082","messageId":"1083","endLine":98,"endColumn":34,"fix":"1157"},{"ruleId":"1021","severity":1,"message":"1026","line":2,"column":10,"nodeType":"1023","messageId":"1024","endLine":2,"endColumn":19},{"ruleId":"1080","severity":1,"message":"1158","line":32,"column":50,"nodeType":"1082","messageId":"1083","endLine":32,"endColumn":69,"fix":"1159"},{"ruleId":"1080","severity":1,"message":"1160","line":32,"column":71,"nodeType":"1082","messageId":"1083","endLine":32,"endColumn":94,"fix":"1161"},{"ruleId":"1080","severity":1,"message":"1162","line":32,"column":96,"nodeType":"1082","messageId":"1083","endLine":32,"endColumn":115,"fix":"1163"},{"ruleId":"1021","severity":1,"message":"1164","line":3,"column":10,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":25},{"ruleId":"1021","severity":1,"message":"1116","line":5,"column":8,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1118","line":10,"column":22,"nodeType":"1023","messageId":"1024","endLine":10,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":11,"column":5,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":14,"column":5,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":13},{"ruleId":"1044","severity":1,"message":"1126","line":30,"column":8,"nodeType":"1046","endLine":30,"endColumn":10,"suggestions":"1165"},{"ruleId":"1048","severity":1,"message":"1049","line":97,"column":31,"nodeType":"1050","messageId":"1051","endLine":97,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":144,"column":53,"nodeType":"1035","endLine":144,"endColumn":124},{"ruleId":"1021","severity":1,"message":"1116","line":9,"column":8,"nodeType":"1023","messageId":"1024","endLine":9,"endColumn":14},{"ruleId":"1080","severity":1,"message":"1166","line":29,"column":54,"nodeType":"1082","messageId":"1083","endLine":29,"endColumn":83,"fix":"1167"},{"ruleId":"1080","severity":1,"message":"1168","line":29,"column":85,"nodeType":"1082","messageId":"1083","endLine":29,"endColumn":112,"fix":"1169"},{"ruleId":"1044","severity":1,"message":"1170","line":34,"column":8,"nodeType":"1046","endLine":34,"endColumn":10,"suggestions":"1171"},{"ruleId":"1080","severity":1,"message":"1166","line":52,"column":21,"nodeType":"1082","messageId":"1083","endLine":52,"endColumn":34,"fix":"1172"},{"ruleId":"1080","severity":1,"message":"1168","line":53,"column":21,"nodeType":"1082","messageId":"1083","endLine":53,"endColumn":33,"fix":"1173"},{"ruleId":"1021","severity":1,"message":"1042","line":3,"column":10,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":20},{"ruleId":"1021","severity":1,"message":"1174","line":15,"column":8,"nodeType":"1023","messageId":"1024","endLine":15,"endColumn":16},{"ruleId":"1044","severity":1,"message":"1147","line":44,"column":8,"nodeType":"1046","endLine":44,"endColumn":10,"suggestions":"1175"},{"ruleId":"1080","severity":1,"message":"1129","line":48,"column":13,"nodeType":"1082","messageId":"1083","endLine":48,"endColumn":42,"fix":"1176"},{"ruleId":"1080","severity":1,"message":"1131","line":49,"column":13,"nodeType":"1082","messageId":"1083","endLine":49,"endColumn":40,"fix":"1177"},{"ruleId":"1080","severity":1,"message":"1133","line":50,"column":13,"nodeType":"1082","messageId":"1083","endLine":50,"endColumn":38,"fix":"1178"},{"ruleId":"1080","severity":1,"message":"1135","line":51,"column":13,"nodeType":"1082","messageId":"1083","endLine":51,"endColumn":46,"fix":"1179"},{"ruleId":"1080","severity":1,"message":"1137","line":52,"column":13,"nodeType":"1082","messageId":"1083","endLine":52,"endColumn":40,"fix":"1180"},{"ruleId":"1080","severity":1,"message":"1139","line":53,"column":13,"nodeType":"1082","messageId":"1083","endLine":53,"endColumn":36,"fix":"1181"},{"ruleId":"1080","severity":1,"message":"1141","line":54,"column":13,"nodeType":"1082","messageId":"1083","endLine":54,"endColumn":34,"fix":"1182"},{"ruleId":"1080","severity":1,"message":"1143","line":55,"column":13,"nodeType":"1082","messageId":"1083","endLine":55,"endColumn":28,"fix":"1183"},{"ruleId":"1080","severity":1,"message":"1145","line":56,"column":13,"nodeType":"1082","messageId":"1083","endLine":56,"endColumn":30,"fix":"1184"},{"ruleId":"1080","severity":1,"message":"1093","line":57,"column":13,"nodeType":"1082","messageId":"1083","endLine":59,"endColumn":160,"fix":"1185"},{"ruleId":"1080","severity":1,"message":"1186","line":60,"column":13,"nodeType":"1082","messageId":"1083","endLine":60,"endColumn":50,"fix":"1187"},{"ruleId":"1080","severity":1,"message":"1093","line":119,"column":17,"nodeType":"1082","messageId":"1083","endLine":119,"endColumn":34,"fix":"1188"},{"ruleId":"1080","severity":1,"message":"1081","line":120,"column":17,"nodeType":"1082","messageId":"1083","endLine":120,"endColumn":43,"fix":"1189"},{"ruleId":"1111","severity":1,"message":"1112","line":129,"column":25,"nodeType":"1035","endLine":135,"endColumn":27},{"ruleId":"1021","severity":1,"message":"1026","line":2,"column":10,"nodeType":"1023","messageId":"1024","endLine":2,"endColumn":19},{"ruleId":"1080","severity":1,"message":"1190","line":30,"column":42,"nodeType":"1082","messageId":"1083","endLine":30,"endColumn":70,"fix":"1191"},{"ruleId":"1080","severity":1,"message":"1093","line":47,"column":17,"nodeType":"1082","messageId":"1083","endLine":47,"endColumn":34,"fix":"1192"},{"ruleId":"1080","severity":1,"message":"1081","line":48,"column":17,"nodeType":"1082","messageId":"1083","endLine":48,"endColumn":43,"fix":"1193"},{"ruleId":"1080","severity":1,"message":"1085","line":55,"column":42,"nodeType":"1082","messageId":"1083","endLine":55,"endColumn":58,"fix":"1194"},{"ruleId":"1080","severity":1,"message":"1195","line":76,"column":17,"nodeType":"1082","messageId":"1083","endLine":76,"endColumn":30,"fix":"1196"},{"ruleId":"1080","severity":1,"message":"1197","line":77,"column":17,"nodeType":"1082","messageId":"1083","endLine":77,"endColumn":31,"fix":"1198"},{"ruleId":"1080","severity":1,"message":"1199","line":78,"column":17,"nodeType":"1082","messageId":"1083","endLine":78,"endColumn":36,"fix":"1200"},{"ruleId":"1080","severity":1,"message":"1190","line":79,"column":17,"nodeType":"1082","messageId":"1083","endLine":79,"endColumn":31,"fix":"1201"},{"ruleId":"1080","severity":1,"message":"1202","line":81,"column":17,"nodeType":"1082","messageId":"1083","endLine":81,"endColumn":38,"fix":"1203"},{"ruleId":"1080","severity":1,"message":"1204","line":82,"column":17,"nodeType":"1082","messageId":"1083","endLine":82,"endColumn":38,"fix":"1205"},{"ruleId":"1080","severity":1,"message":"1093","line":83,"column":17,"nodeType":"1082","messageId":"1083","endLine":83,"endColumn":30,"fix":"1206"},{"ruleId":"1080","severity":1,"message":"1081","line":84,"column":17,"nodeType":"1082","messageId":"1083","endLine":84,"endColumn":36,"fix":"1207"},{"ruleId":"1080","severity":1,"message":"1208","line":85,"column":17,"nodeType":"1082","messageId":"1083","endLine":85,"endColumn":35,"fix":"1209"},{"ruleId":"1080","severity":1,"message":"1210","line":86,"column":17,"nodeType":"1082","messageId":"1083","endLine":86,"endColumn":31,"fix":"1211"},{"ruleId":"1080","severity":1,"message":"1085","line":265,"column":58,"nodeType":"1082","messageId":"1083","endLine":265,"endColumn":75,"fix":"1212"},{"ruleId":"1021","severity":1,"message":"1115","line":6,"column":8,"nodeType":"1023","messageId":"1024","endLine":6,"endColumn":19},{"ruleId":"1044","severity":1,"message":"1213","line":26,"column":8,"nodeType":"1046","endLine":26,"endColumn":10,"suggestions":"1214"},{"ruleId":"1080","severity":1,"message":"1202","line":30,"column":13,"nodeType":"1082","messageId":"1083","endLine":30,"endColumn":50,"fix":"1215"},{"ruleId":"1080","severity":1,"message":"1216","line":31,"column":13,"nodeType":"1082","messageId":"1083","endLine":31,"endColumn":34,"fix":"1217"},{"ruleId":"1080","severity":1,"message":"1204","line":32,"column":13,"nodeType":"1082","messageId":"1083","endLine":32,"endColumn":50,"fix":"1218"},{"ruleId":"1080","severity":1,"message":"1208","line":33,"column":13,"nodeType":"1082","messageId":"1083","endLine":33,"endColumn":44,"fix":"1219"},{"ruleId":"1080","severity":1,"message":"1199","line":34,"column":13,"nodeType":"1082","messageId":"1083","endLine":34,"endColumn":46,"fix":"1220"},{"ruleId":"1044","severity":1,"message":"1221","line":31,"column":8,"nodeType":"1046","endLine":31,"endColumn":10,"suggestions":"1222"},{"ruleId":"1080","severity":1,"message":"1223","line":35,"column":13,"nodeType":"1082","messageId":"1083","endLine":35,"endColumn":38,"fix":"1224"},{"ruleId":"1080","severity":1,"message":"1225","line":36,"column":13,"nodeType":"1082","messageId":"1083","endLine":36,"endColumn":44,"fix":"1226"},{"ruleId":"1080","severity":1,"message":"1227","line":37,"column":13,"nodeType":"1082","messageId":"1083","endLine":37,"endColumn":32,"fix":"1228"},{"ruleId":"1080","severity":1,"message":"1229","line":38,"column":13,"nodeType":"1082","messageId":"1083","endLine":38,"endColumn":54,"fix":"1230"},{"ruleId":"1080","severity":1,"message":"1231","line":39,"column":13,"nodeType":"1082","messageId":"1083","endLine":39,"endColumn":46,"fix":"1232"},{"ruleId":"1080","severity":1,"message":"1233","line":40,"column":13,"nodeType":"1082","messageId":"1083","endLine":40,"endColumn":36,"fix":"1234"},{"ruleId":"1080","severity":1,"message":"1235","line":41,"column":13,"nodeType":"1082","messageId":"1083","endLine":41,"endColumn":40,"fix":"1236"},{"ruleId":"1080","severity":1,"message":"1229","line":70,"column":13,"nodeType":"1082","messageId":"1083","endLine":70,"endColumn":38,"fix":"1237"},{"ruleId":"1080","severity":1,"message":"1231","line":71,"column":13,"nodeType":"1082","messageId":"1083","endLine":71,"endColumn":34,"fix":"1238"},{"ruleId":"1021","severity":1,"message":"1116","line":4,"column":8,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1118","line":10,"column":22,"nodeType":"1023","messageId":"1024","endLine":10,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":11,"column":5,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":14,"column":5,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":13},{"ruleId":"1044","severity":1,"message":"1126","line":29,"column":8,"nodeType":"1046","endLine":29,"endColumn":10,"suggestions":"1239"},{"ruleId":"1048","severity":1,"message":"1049","line":122,"column":31,"nodeType":"1050","messageId":"1051","endLine":122,"endColumn":33},{"ruleId":"1021","severity":1,"message":"1116","line":15,"column":8,"nodeType":"1023","messageId":"1024","endLine":15,"endColumn":14},{"ruleId":"1044","severity":1,"message":"1240","line":37,"column":8,"nodeType":"1046","endLine":37,"endColumn":10,"suggestions":"1241"},{"ruleId":"1080","severity":1,"message":"1227","line":41,"column":13,"nodeType":"1082","messageId":"1083","endLine":41,"endColumn":32,"fix":"1242"},{"ruleId":"1080","severity":1,"message":"1199","line":42,"column":13,"nodeType":"1082","messageId":"1083","endLine":42,"endColumn":46,"fix":"1243"},{"ruleId":"1080","severity":1,"message":"1093","line":43,"column":13,"nodeType":"1082","messageId":"1083","endLine":43,"endColumn":34,"fix":"1244"},{"ruleId":"1080","severity":1,"message":"1081","line":44,"column":13,"nodeType":"1082","messageId":"1083","endLine":44,"endColumn":40,"fix":"1245"},{"ruleId":"1080","severity":1,"message":"1246","line":45,"column":13,"nodeType":"1082","messageId":"1083","endLine":45,"endColumn":35,"fix":"1247"},{"ruleId":"1080","severity":1,"message":"1093","line":63,"column":17,"nodeType":"1082","messageId":"1083","endLine":63,"endColumn":34,"fix":"1248"},{"ruleId":"1080","severity":1,"message":"1081","line":64,"column":17,"nodeType":"1082","messageId":"1083","endLine":64,"endColumn":43,"fix":"1249"},{"ruleId":"1080","severity":1,"message":"1085","line":71,"column":42,"nodeType":"1082","messageId":"1083","endLine":71,"endColumn":58,"fix":"1250"},{"ruleId":"1080","severity":1,"message":"1227","line":84,"column":21,"nodeType":"1082","messageId":"1083","endLine":84,"endColumn":33,"fix":"1251"},{"ruleId":"1080","severity":1,"message":"1093","line":85,"column":21,"nodeType":"1082","messageId":"1083","endLine":85,"endColumn":34,"fix":"1252"},{"ruleId":"1080","severity":1,"message":"1199","line":86,"column":21,"nodeType":"1082","messageId":"1083","endLine":86,"endColumn":40,"fix":"1253"},{"ruleId":"1080","severity":1,"message":"1081","line":87,"column":21,"nodeType":"1082","messageId":"1083","endLine":87,"endColumn":40,"fix":"1254"},{"ruleId":"1080","severity":1,"message":"1085","line":183,"column":58,"nodeType":"1082","messageId":"1083","endLine":183,"endColumn":75,"fix":"1255"},{"ruleId":"1021","severity":1,"message":"1026","line":2,"column":10,"nodeType":"1023","messageId":"1024","endLine":2,"endColumn":19},{"ruleId":"1021","severity":1,"message":"1062","line":4,"column":10,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":19},{"ruleId":"1021","severity":1,"message":"1128","line":8,"column":8,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":20},{"ruleId":"1021","severity":1,"message":"1116","line":9,"column":8,"nodeType":"1023","messageId":"1024","endLine":9,"endColumn":14},{"ruleId":"1080","severity":1,"message":"1223","line":57,"column":13,"nodeType":"1082","messageId":"1083","endLine":57,"endColumn":43,"fix":"1256"},{"ruleId":"1080","severity":1,"message":"1225","line":58,"column":13,"nodeType":"1082","messageId":"1083","endLine":58,"endColumn":49,"fix":"1257"},{"ruleId":"1080","severity":1,"message":"1190","line":59,"column":13,"nodeType":"1082","messageId":"1083","endLine":59,"endColumn":41,"fix":"1258"},{"ruleId":"1080","severity":1,"message":"1093","line":77,"column":17,"nodeType":"1082","messageId":"1083","endLine":77,"endColumn":34,"fix":"1259"},{"ruleId":"1080","severity":1,"message":"1081","line":78,"column":17,"nodeType":"1082","messageId":"1083","endLine":78,"endColumn":43,"fix":"1260"},{"ruleId":"1080","severity":1,"message":"1085","line":85,"column":42,"nodeType":"1082","messageId":"1083","endLine":85,"endColumn":58,"fix":"1261"},{"ruleId":"1080","severity":1,"message":"1227","line":112,"column":17,"nodeType":"1082","messageId":"1083","endLine":112,"endColumn":29,"fix":"1262"},{"ruleId":"1080","severity":1,"message":"1263","line":113,"column":17,"nodeType":"1082","messageId":"1083","endLine":113,"endColumn":41,"fix":"1264"},{"ruleId":"1080","severity":1,"message":"1225","line":114,"column":17,"nodeType":"1082","messageId":"1083","endLine":114,"endColumn":35,"fix":"1265"},{"ruleId":"1080","severity":1,"message":"1233","line":115,"column":17,"nodeType":"1082","messageId":"1083","endLine":115,"endColumn":31,"fix":"1266"},{"ruleId":"1080","severity":1,"message":"1235","line":116,"column":17,"nodeType":"1082","messageId":"1083","endLine":116,"endColumn":33,"fix":"1267"},{"ruleId":"1080","severity":1,"message":"1223","line":117,"column":17,"nodeType":"1082","messageId":"1083","endLine":117,"endColumn":32,"fix":"1268"},{"ruleId":"1080","severity":1,"message":"1197","line":118,"column":17,"nodeType":"1082","messageId":"1083","endLine":118,"endColumn":31,"fix":"1269"},{"ruleId":"1080","severity":1,"message":"1195","line":119,"column":17,"nodeType":"1082","messageId":"1083","endLine":119,"endColumn":30,"fix":"1270"},{"ruleId":"1080","severity":1,"message":"1190","line":120,"column":17,"nodeType":"1082","messageId":"1083","endLine":120,"endColumn":31,"fix":"1271"},{"ruleId":"1080","severity":1,"message":"1202","line":122,"column":17,"nodeType":"1082","messageId":"1083","endLine":122,"endColumn":38,"fix":"1272"},{"ruleId":"1080","severity":1,"message":"1204","line":123,"column":17,"nodeType":"1082","messageId":"1083","endLine":123,"endColumn":38,"fix":"1273"},{"ruleId":"1080","severity":1,"message":"1093","line":124,"column":17,"nodeType":"1082","messageId":"1083","endLine":124,"endColumn":30,"fix":"1274"},{"ruleId":"1080","severity":1,"message":"1081","line":125,"column":17,"nodeType":"1082","messageId":"1083","endLine":125,"endColumn":36,"fix":"1275"},{"ruleId":"1080","severity":1,"message":"1208","line":126,"column":17,"nodeType":"1082","messageId":"1083","endLine":126,"endColumn":35,"fix":"1276"},{"ruleId":"1080","severity":1,"message":"1231","line":127,"column":17,"nodeType":"1082","messageId":"1083","endLine":127,"endColumn":36,"fix":"1277"},{"ruleId":"1080","severity":1,"message":"1278","line":128,"column":17,"nodeType":"1082","messageId":"1083","endLine":128,"endColumn":39,"fix":"1279"},{"ruleId":"1080","severity":1,"message":"1210","line":129,"column":17,"nodeType":"1082","messageId":"1083","endLine":129,"endColumn":31,"fix":"1280"},{"ruleId":"1080","severity":1,"message":"1229","line":138,"column":13,"nodeType":"1082","messageId":"1083","endLine":138,"endColumn":38,"fix":"1281"},{"ruleId":"1080","severity":1,"message":"1231","line":139,"column":13,"nodeType":"1082","messageId":"1083","endLine":139,"endColumn":34,"fix":"1282"},{"ruleId":"1080","severity":1,"message":"1085","line":414,"column":58,"nodeType":"1082","messageId":"1083","endLine":414,"endColumn":75,"fix":"1283"},{"ruleId":"1021","severity":1,"message":"1116","line":4,"column":8,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1118","line":10,"column":22,"nodeType":"1023","messageId":"1024","endLine":10,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":11,"column":5,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":14,"column":5,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":13},{"ruleId":"1044","severity":1,"message":"1284","line":30,"column":8,"nodeType":"1046","endLine":30,"endColumn":10,"suggestions":"1285"},{"ruleId":"1021","severity":1,"message":"1116","line":8,"column":8,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1118","line":16,"column":22,"nodeType":"1023","messageId":"1024","endLine":16,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":17,"column":5,"nodeType":"1023","messageId":"1024","endLine":17,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":18,"column":5,"nodeType":"1023","messageId":"1024","endLine":18,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1028","line":19,"column":5,"nodeType":"1023","messageId":"1024","endLine":19,"endColumn":9},{"ruleId":"1021","severity":1,"message":"1121","line":20,"column":5,"nodeType":"1023","messageId":"1024","endLine":20,"endColumn":13},{"ruleId":"1044","severity":1,"message":"1286","line":50,"column":8,"nodeType":"1046","endLine":50,"endColumn":10,"suggestions":"1287"},{"ruleId":"1021","severity":1,"message":"1116","line":4,"column":8,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1118","line":13,"column":22,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":14,"column":5,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":15,"column":5,"nodeType":"1023","messageId":"1024","endLine":15,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":17,"column":5,"nodeType":"1023","messageId":"1024","endLine":17,"endColumn":13},{"ruleId":"1021","severity":1,"message":"1062","line":18,"column":5,"nodeType":"1023","messageId":"1024","endLine":18,"endColumn":14},{"ruleId":"1044","severity":1,"message":"1126","line":33,"column":8,"nodeType":"1046","endLine":33,"endColumn":10,"suggestions":"1288"},{"ruleId":"1048","severity":1,"message":"1049","line":106,"column":31,"nodeType":"1050","messageId":"1051","endLine":106,"endColumn":33},{"ruleId":"1021","severity":1,"message":"1164","line":3,"column":10,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":25},{"ruleId":"1021","severity":1,"message":"1116","line":5,"column":8,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1118","line":11,"column":22,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":13,"column":5,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":15,"column":5,"nodeType":"1023","messageId":"1024","endLine":15,"endColumn":13},{"ruleId":"1044","severity":1,"message":"1126","line":29,"column":8,"nodeType":"1046","endLine":29,"endColumn":10,"suggestions":"1289"},{"ruleId":"1048","severity":1,"message":"1049","line":95,"column":32,"nodeType":"1050","messageId":"1051","endLine":95,"endColumn":34},{"ruleId":"1021","severity":1,"message":"1164","line":3,"column":10,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":25},{"ruleId":"1021","severity":1,"message":"1116","line":5,"column":8,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1118","line":12,"column":22,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":13,"column":5,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":14,"column":5,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":16,"column":5,"nodeType":"1023","messageId":"1024","endLine":16,"endColumn":13},{"ruleId":"1044","severity":1,"message":"1126","line":32,"column":8,"nodeType":"1046","endLine":32,"endColumn":10,"suggestions":"1290"},{"ruleId":"1048","severity":1,"message":"1049","line":98,"column":31,"nodeType":"1050","messageId":"1051","endLine":98,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":145,"column":53,"nodeType":"1035","endLine":145,"endColumn":121},{"ruleId":"1021","severity":1,"message":"1116","line":9,"column":8,"nodeType":"1023","messageId":"1024","endLine":9,"endColumn":14},{"ruleId":"1080","severity":1,"message":"1291","line":29,"column":54,"nodeType":"1082","messageId":"1083","endLine":29,"endColumn":82,"fix":"1292"},{"ruleId":"1080","severity":1,"message":"1293","line":29,"column":84,"nodeType":"1082","messageId":"1083","endLine":29,"endColumn":114,"fix":"1294"},{"ruleId":"1044","severity":1,"message":"1170","line":34,"column":8,"nodeType":"1046","endLine":34,"endColumn":10,"suggestions":"1295"},{"ruleId":"1080","severity":1,"message":"1291","line":51,"column":21,"nodeType":"1082","messageId":"1083","endLine":51,"endColumn":33,"fix":"1296"},{"ruleId":"1080","severity":1,"message":"1293","line":52,"column":21,"nodeType":"1082","messageId":"1083","endLine":52,"endColumn":34,"fix":"1297"},{"ruleId":"1021","severity":1,"message":"1164","line":3,"column":10,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":25},{"ruleId":"1021","severity":1,"message":"1116","line":5,"column":8,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1118","line":11,"column":22,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":13,"column":5,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":15,"column":5,"nodeType":"1023","messageId":"1024","endLine":15,"endColumn":13},{"ruleId":"1044","severity":1,"message":"1126","line":30,"column":8,"nodeType":"1046","endLine":30,"endColumn":10,"suggestions":"1298"},{"ruleId":"1048","severity":1,"message":"1049","line":97,"column":31,"nodeType":"1050","messageId":"1051","endLine":97,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":142,"column":53,"nodeType":"1035","endLine":142,"endColumn":123},{"ruleId":"1021","severity":1,"message":"1164","line":3,"column":10,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":25},{"ruleId":"1021","severity":1,"message":"1116","line":5,"column":8,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1118","line":11,"column":22,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":13,"column":5,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":15,"column":5,"nodeType":"1023","messageId":"1024","endLine":15,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1049","line":82,"column":32,"nodeType":"1050","messageId":"1051","endLine":82,"endColumn":34},{"ruleId":"1048","severity":1,"message":"1049","line":124,"column":71,"nodeType":"1050","messageId":"1051","endLine":124,"endColumn":73},{"ruleId":"1021","severity":1,"message":"1116","line":9,"column":8,"nodeType":"1023","messageId":"1024","endLine":9,"endColumn":14},{"ruleId":"1080","severity":1,"message":"1299","line":23,"column":42,"nodeType":"1082","messageId":"1083","endLine":23,"endColumn":82,"fix":"1300"},{"ruleId":"1080","severity":1,"message":"1299","line":34,"column":41,"nodeType":"1082","messageId":"1083","endLine":34,"endColumn":86,"fix":"1301"},{"ruleId":"1080","severity":1,"message":"1166","line":34,"column":88,"nodeType":"1082","messageId":"1083","endLine":34,"endColumn":121,"fix":"1302"},{"ruleId":"1080","severity":1,"message":"1303","line":35,"column":25,"nodeType":"1082","messageId":"1083","endLine":35,"endColumn":64,"fix":"1304"},{"ruleId":"1080","severity":1,"message":"1305","line":35,"column":66,"nodeType":"1082","messageId":"1083","endLine":35,"endColumn":105,"fix":"1306"},{"ruleId":"1044","severity":1,"message":"1170","line":41,"column":8,"nodeType":"1046","endLine":41,"endColumn":10,"suggestions":"1307"},{"ruleId":"1080","severity":1,"message":"1299","line":60,"column":21,"nodeType":"1082","messageId":"1083","endLine":60,"endColumn":40,"fix":"1308"},{"ruleId":"1080","severity":1,"message":"1166","line":61,"column":21,"nodeType":"1082","messageId":"1083","endLine":61,"endColumn":34,"fix":"1309"},{"ruleId":"1080","severity":1,"message":"1303","line":62,"column":21,"nodeType":"1082","messageId":"1083","endLine":62,"endColumn":37,"fix":"1310"},{"ruleId":"1080","severity":1,"message":"1305","line":63,"column":21,"nodeType":"1082","messageId":"1083","endLine":63,"endColumn":37,"fix":"1311"},{"ruleId":"1021","severity":1,"message":"1164","line":3,"column":10,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":25},{"ruleId":"1021","severity":1,"message":"1118","line":11,"column":22,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":13,"column":5,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":15,"column":5,"nodeType":"1023","messageId":"1024","endLine":15,"endColumn":13},{"ruleId":"1048","severity":1,"message":"1049","line":82,"column":31,"nodeType":"1050","messageId":"1051","endLine":82,"endColumn":33},{"ruleId":"1080","severity":1,"message":"1312","line":23,"column":42,"nodeType":"1082","messageId":"1083","endLine":23,"endColumn":82,"fix":"1313"},{"ruleId":"1044","severity":1,"message":"1314","line":42,"column":8,"nodeType":"1046","endLine":42,"endColumn":10,"suggestions":"1315"},{"ruleId":"1080","severity":1,"message":"1316","line":47,"column":13,"nodeType":"1082","messageId":"1083","endLine":47,"endColumn":95,"fix":"1317"},{"ruleId":"1080","severity":1,"message":"1318","line":48,"column":13,"nodeType":"1082","messageId":"1083","endLine":48,"endColumn":91,"fix":"1319"},{"ruleId":"1080","severity":1,"message":"1312","line":49,"column":13,"nodeType":"1082","messageId":"1083","endLine":49,"endColumn":50,"fix":"1320"},{"ruleId":"1080","severity":1,"message":"1321","line":50,"column":13,"nodeType":"1082","messageId":"1083","endLine":50,"endColumn":36,"fix":"1322"},{"ruleId":"1080","severity":1,"message":"1323","line":51,"column":13,"nodeType":"1082","messageId":"1083","endLine":51,"endColumn":46,"fix":"1324"},{"ruleId":"1080","severity":1,"message":"1246","line":52,"column":13,"nodeType":"1082","messageId":"1083","endLine":52,"endColumn":35,"fix":"1325"},{"ruleId":"1080","severity":1,"message":"1326","line":53,"column":13,"nodeType":"1082","messageId":"1083","endLine":53,"endColumn":46,"fix":"1327"},{"ruleId":"1080","severity":1,"message":"1328","line":54,"column":13,"nodeType":"1082","messageId":"1083","endLine":54,"endColumn":42,"fix":"1329"},{"ruleId":"1080","severity":1,"message":"1316","line":65,"column":13,"nodeType":"1082","messageId":"1083","endLine":65,"endColumn":34,"fix":"1330"},{"ruleId":"1080","severity":1,"message":"1331","line":66,"column":13,"nodeType":"1082","messageId":"1083","endLine":66,"endColumn":39,"fix":"1332"},{"ruleId":"1080","severity":1,"message":"1318","line":73,"column":13,"nodeType":"1082","messageId":"1083","endLine":73,"endColumn":32,"fix":"1333"},{"ruleId":"1080","severity":1,"message":"1334","line":74,"column":13,"nodeType":"1082","messageId":"1083","endLine":74,"endColumn":37,"fix":"1335"},{"ruleId":"1080","severity":1,"message":"1316","line":91,"column":21,"nodeType":"1082","messageId":"1083","endLine":91,"endColumn":37,"fix":"1336"},{"ruleId":"1080","severity":1,"message":"1318","line":92,"column":21,"nodeType":"1082","messageId":"1083","endLine":92,"endColumn":35,"fix":"1337"},{"ruleId":"1080","severity":1,"message":"1312","line":93,"column":21,"nodeType":"1082","messageId":"1083","endLine":93,"endColumn":42,"fix":"1338"},{"ruleId":"1080","severity":1,"message":"1321","line":94,"column":21,"nodeType":"1082","messageId":"1083","endLine":94,"endColumn":35,"fix":"1339"},{"ruleId":"1080","severity":1,"message":"1323","line":95,"column":21,"nodeType":"1082","messageId":"1083","endLine":95,"endColumn":40,"fix":"1340"},{"ruleId":"1021","severity":1,"message":"1164","line":3,"column":10,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":25},{"ruleId":"1021","severity":1,"message":"1116","line":5,"column":8,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1070","line":6,"column":10,"nodeType":"1023","messageId":"1024","endLine":6,"endColumn":15},{"ruleId":"1021","severity":1,"message":"1118","line":9,"column":22,"nodeType":"1023","messageId":"1024","endLine":9,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":10,"column":5,"nodeType":"1023","messageId":"1024","endLine":10,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":11,"column":5,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1028","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":9},{"ruleId":"1021","severity":1,"message":"1121","line":13,"column":5,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":13},{"ruleId":"1021","severity":1,"message":"1043","line":25,"column":10,"nodeType":"1023","messageId":"1024","endLine":25,"endColumn":12},{"ruleId":"1044","severity":1,"message":"1341","line":43,"column":5,"nodeType":"1046","endLine":43,"endColumn":7,"suggestions":"1342"},{"ruleId":"1048","severity":1,"message":"1049","line":51,"column":24,"nodeType":"1050","messageId":"1051","endLine":51,"endColumn":26},{"ruleId":"1021","severity":1,"message":"1028","line":2,"column":10,"nodeType":"1023","messageId":"1024","endLine":2,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1042","line":2,"column":25,"nodeType":"1023","messageId":"1024","endLine":2,"endColumn":35},{"ruleId":"1021","severity":1,"message":"1343","line":3,"column":10,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":21},{"ruleId":"1021","severity":1,"message":"1057","line":3,"column":23,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":34},{"ruleId":"1044","severity":1,"message":"1344","line":21,"column":8,"nodeType":"1046","endLine":21,"endColumn":10,"suggestions":"1345"},{"ruleId":"1048","severity":1,"message":"1049","line":30,"column":44,"nodeType":"1050","messageId":"1051","endLine":30,"endColumn":46},{"ruleId":"1048","severity":1,"message":"1049","line":64,"column":32,"nodeType":"1050","messageId":"1051","endLine":64,"endColumn":34},{"ruleId":"1048","severity":1,"message":"1049","line":74,"column":32,"nodeType":"1050","messageId":"1051","endLine":74,"endColumn":34},{"ruleId":"1048","severity":1,"message":"1049","line":84,"column":32,"nodeType":"1050","messageId":"1051","endLine":84,"endColumn":34},{"ruleId":"1048","severity":1,"message":"1049","line":95,"column":32,"nodeType":"1050","messageId":"1051","endLine":95,"endColumn":34},{"ruleId":"1111","severity":1,"message":"1112","line":200,"column":41,"nodeType":"1035","endLine":200,"endColumn":127},{"ruleId":"1048","severity":1,"message":"1049","line":236,"column":93,"nodeType":"1050","messageId":"1051","endLine":236,"endColumn":95},{"ruleId":"1048","severity":1,"message":"1049","line":290,"column":66,"nodeType":"1050","messageId":"1051","endLine":290,"endColumn":68},{"ruleId":"1033","severity":1,"message":"1053","line":292,"column":37,"nodeType":"1035","endLine":292,"endColumn":97},{"ruleId":"1048","severity":1,"message":"1049","line":297,"column":66,"nodeType":"1050","messageId":"1051","endLine":297,"endColumn":68},{"ruleId":"1033","severity":1,"message":"1053","line":298,"column":37,"nodeType":"1035","endLine":298,"endColumn":97},{"ruleId":"1048","severity":1,"message":"1049","line":300,"column":66,"nodeType":"1050","messageId":"1051","endLine":300,"endColumn":68},{"ruleId":"1033","severity":1,"message":"1053","line":301,"column":37,"nodeType":"1035","endLine":301,"endColumn":97},{"ruleId":"1048","severity":1,"message":"1049","line":304,"column":63,"nodeType":"1050","messageId":"1051","endLine":304,"endColumn":65},{"ruleId":"1048","severity":1,"message":"1049","line":304,"column":100,"nodeType":"1050","messageId":"1051","endLine":304,"endColumn":102},{"ruleId":"1033","severity":1,"message":"1053","line":306,"column":33,"nodeType":"1035","endLine":306,"endColumn":201},{"ruleId":"1021","severity":1,"message":"1116","line":9,"column":8,"nodeType":"1023","messageId":"1024","endLine":9,"endColumn":14},{"ruleId":"1080","severity":1,"message":"1227","line":30,"column":25,"nodeType":"1082","messageId":"1083","endLine":30,"endColumn":53,"fix":"1346"},{"ruleId":"1080","severity":1,"message":"1133","line":31,"column":25,"nodeType":"1082","messageId":"1083","endLine":31,"endColumn":59,"fix":"1347"},{"ruleId":"1080","severity":1,"message":"1135","line":32,"column":25,"nodeType":"1082","messageId":"1083","endLine":32,"endColumn":67,"fix":"1348"},{"ruleId":"1080","severity":1,"message":"1141","line":33,"column":25,"nodeType":"1082","messageId":"1083","endLine":33,"endColumn":55,"fix":"1349"},{"ruleId":"1044","severity":1,"message":"1170","line":39,"column":8,"nodeType":"1046","endLine":39,"endColumn":10,"suggestions":"1350"},{"ruleId":"1080","severity":1,"message":"1227","line":58,"column":21,"nodeType":"1082","messageId":"1083","endLine":58,"endColumn":33,"fix":"1351"},{"ruleId":"1080","severity":1,"message":"1133","line":59,"column":21,"nodeType":"1082","messageId":"1083","endLine":59,"endColumn":36,"fix":"1352"},{"ruleId":"1080","severity":1,"message":"1141","line":60,"column":21,"nodeType":"1082","messageId":"1083","endLine":60,"endColumn":34,"fix":"1353"},{"ruleId":"1080","severity":1,"message":"1135","line":61,"column":21,"nodeType":"1082","messageId":"1083","endLine":61,"endColumn":40,"fix":"1354"},{"ruleId":"1021","severity":1,"message":"1116","line":14,"column":8,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":14},{"ruleId":"1080","severity":1,"message":"1355","line":35,"column":42,"nodeType":"1082","messageId":"1083","endLine":35,"endColumn":76,"fix":"1356"},{"ruleId":"1044","severity":1,"message":"1357","line":47,"column":8,"nodeType":"1046","endLine":47,"endColumn":10,"suggestions":"1358"},{"ruleId":"1080","severity":1,"message":"1359","line":51,"column":13,"nodeType":"1082","messageId":"1083","endLine":51,"endColumn":34,"fix":"1360"},{"ruleId":"1080","severity":1,"message":"1263","line":52,"column":13,"nodeType":"1082","messageId":"1083","endLine":52,"endColumn":56,"fix":"1361"},{"ruleId":"1080","severity":1,"message":"1093","line":53,"column":13,"nodeType":"1082","messageId":"1083","endLine":53,"endColumn":34,"fix":"1362"},{"ruleId":"1080","severity":1,"message":"1081","line":54,"column":13,"nodeType":"1082","messageId":"1083","endLine":54,"endColumn":40,"fix":"1363"},{"ruleId":"1080","severity":1,"message":"1246","line":55,"column":13,"nodeType":"1082","messageId":"1083","endLine":55,"endColumn":35,"fix":"1364"},{"ruleId":"1080","severity":1,"message":"1229","line":56,"column":13,"nodeType":"1082","messageId":"1083","endLine":56,"endColumn":54,"fix":"1365"},{"ruleId":"1080","severity":1,"message":"1231","line":57,"column":13,"nodeType":"1082","messageId":"1083","endLine":57,"endColumn":46,"fix":"1366"},{"ruleId":"1080","severity":1,"message":"1355","line":58,"column":13,"nodeType":"1082","messageId":"1083","endLine":58,"endColumn":42,"fix":"1367"},{"ruleId":"1080","severity":1,"message":"1093","line":75,"column":17,"nodeType":"1082","messageId":"1083","endLine":75,"endColumn":34,"fix":"1368"},{"ruleId":"1080","severity":1,"message":"1081","line":76,"column":17,"nodeType":"1082","messageId":"1083","endLine":76,"endColumn":43,"fix":"1369"},{"ruleId":"1080","severity":1,"message":"1085","line":83,"column":42,"nodeType":"1082","messageId":"1083","endLine":83,"endColumn":58,"fix":"1370"},{"ruleId":"1080","severity":1,"message":"1263","line":100,"column":21,"nodeType":"1082","messageId":"1083","endLine":100,"endColumn":45,"fix":"1371"},{"ruleId":"1080","severity":1,"message":"1359","line":101,"column":21,"nodeType":"1082","messageId":"1083","endLine":101,"endColumn":34,"fix":"1372"},{"ruleId":"1080","severity":1,"message":"1355","line":102,"column":21,"nodeType":"1082","messageId":"1083","endLine":102,"endColumn":38,"fix":"1373"},{"ruleId":"1080","severity":1,"message":"1093","line":103,"column":21,"nodeType":"1082","messageId":"1083","endLine":103,"endColumn":34,"fix":"1374"},{"ruleId":"1080","severity":1,"message":"1229","line":104,"column":21,"nodeType":"1082","messageId":"1083","endLine":104,"endColumn":44,"fix":"1375"},{"ruleId":"1080","severity":1,"message":"1231","line":105,"column":21,"nodeType":"1082","messageId":"1083","endLine":105,"endColumn":40,"fix":"1376"},{"ruleId":"1080","severity":1,"message":"1081","line":106,"column":21,"nodeType":"1082","messageId":"1083","endLine":106,"endColumn":40,"fix":"1377"},{"ruleId":"1080","severity":1,"message":"1229","line":127,"column":13,"nodeType":"1082","messageId":"1083","endLine":127,"endColumn":38,"fix":"1378"},{"ruleId":"1080","severity":1,"message":"1231","line":128,"column":13,"nodeType":"1082","messageId":"1083","endLine":128,"endColumn":34,"fix":"1379"},{"ruleId":"1080","severity":1,"message":"1085","line":240,"column":58,"nodeType":"1082","messageId":"1083","endLine":240,"endColumn":75,"fix":"1380"},{"ruleId":"1021","severity":1,"message":"1116","line":9,"column":8,"nodeType":"1023","messageId":"1024","endLine":9,"endColumn":14},{"ruleId":"1080","severity":1,"message":"1166","line":29,"column":54,"nodeType":"1082","messageId":"1083","endLine":29,"endColumn":83,"fix":"1381"},{"ruleId":"1080","severity":1,"message":"1168","line":29,"column":85,"nodeType":"1082","messageId":"1083","endLine":29,"endColumn":112,"fix":"1382"},{"ruleId":"1044","severity":1,"message":"1170","line":34,"column":8,"nodeType":"1046","endLine":34,"endColumn":10,"suggestions":"1383"},{"ruleId":"1080","severity":1,"message":"1166","line":52,"column":21,"nodeType":"1082","messageId":"1083","endLine":52,"endColumn":34,"fix":"1384"},{"ruleId":"1080","severity":1,"message":"1168","line":53,"column":21,"nodeType":"1082","messageId":"1083","endLine":53,"endColumn":33,"fix":"1385"},{"ruleId":"1021","severity":1,"message":"1164","line":3,"column":10,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":25},{"ruleId":"1021","severity":1,"message":"1116","line":5,"column":8,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1118","line":12,"column":22,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":13,"column":5,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":14,"column":5,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":16,"column":5,"nodeType":"1023","messageId":"1024","endLine":16,"endColumn":13},{"ruleId":"1044","severity":1,"message":"1126","line":32,"column":8,"nodeType":"1046","endLine":32,"endColumn":10,"suggestions":"1386"},{"ruleId":"1048","severity":1,"message":"1049","line":101,"column":31,"nodeType":"1050","messageId":"1051","endLine":101,"endColumn":33},{"ruleId":"1033","severity":1,"message":"1034","line":152,"column":53,"nodeType":"1035","endLine":152,"endColumn":124},{"ruleId":"1021","severity":1,"message":"1062","line":6,"column":10,"nodeType":"1023","messageId":"1024","endLine":6,"endColumn":19},{"ruleId":"1021","severity":1,"message":"1116","line":9,"column":8,"nodeType":"1023","messageId":"1024","endLine":9,"endColumn":14},{"ruleId":"1080","severity":1,"message":"1387","line":22,"column":42,"nodeType":"1082","messageId":"1083","endLine":22,"endColumn":76,"fix":"1388"},{"ruleId":"1048","severity":1,"message":"1049","line":73,"column":33,"nodeType":"1050","messageId":"1051","endLine":73,"endColumn":35},{"ruleId":"1021","severity":1,"message":"1389","line":83,"column":17,"nodeType":"1023","messageId":"1024","endLine":83,"endColumn":21},{"ruleId":"1048","severity":1,"message":"1049","line":85,"column":39,"nodeType":"1050","messageId":"1051","endLine":85,"endColumn":41},{"ruleId":"1080","severity":1,"message":"1390","line":106,"column":21,"nodeType":"1082","messageId":"1083","endLine":106,"endColumn":37,"fix":"1391"},{"ruleId":"1080","severity":1,"message":"1293","line":107,"column":21,"nodeType":"1082","messageId":"1083","endLine":107,"endColumn":34,"fix":"1392"},{"ruleId":"1021","severity":1,"message":"1070","line":5,"column":10,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":15},{"ruleId":"1021","severity":1,"message":"1118","line":11,"column":22,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":13,"column":5,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":15,"column":5,"nodeType":"1023","messageId":"1024","endLine":15,"endColumn":13},{"ruleId":"1021","severity":1,"message":"1065","line":21,"column":12,"nodeType":"1023","messageId":"1024","endLine":21,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1049","line":73,"column":32,"nodeType":"1050","messageId":"1051","endLine":73,"endColumn":34},{"ruleId":"1021","severity":1,"message":"1393","line":126,"column":45,"nodeType":"1023","messageId":"1024","endLine":126,"endColumn":49},{"ruleId":"1048","severity":1,"message":"1049","line":135,"column":75,"nodeType":"1050","messageId":"1051","endLine":135,"endColumn":77},{"ruleId":"1021","severity":1,"message":"1394","line":3,"column":10,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":30},{"ruleId":"1021","severity":1,"message":"1070","line":5,"column":10,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":15},{"ruleId":"1021","severity":1,"message":"1118","line":10,"column":22,"nodeType":"1023","messageId":"1024","endLine":10,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":11,"column":5,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":14,"column":5,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":13},{"ruleId":"1021","severity":1,"message":"1065","line":21,"column":12,"nodeType":"1023","messageId":"1024","endLine":21,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1049","line":68,"column":31,"nodeType":"1050","messageId":"1051","endLine":68,"endColumn":33},{"ruleId":"1021","severity":1,"message":"1028","line":6,"column":10,"nodeType":"1023","messageId":"1024","endLine":6,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1116","line":9,"column":8,"nodeType":"1023","messageId":"1024","endLine":9,"endColumn":14},{"ruleId":"1080","severity":1,"message":"1395","line":21,"column":42,"nodeType":"1082","messageId":"1083","endLine":21,"endColumn":74,"fix":"1396"},{"ruleId":"1044","severity":1,"message":"1397","line":32,"column":8,"nodeType":"1046","endLine":32,"endColumn":10,"suggestions":"1398"},{"ruleId":"1048","severity":1,"message":"1049","line":35,"column":32,"nodeType":"1050","messageId":"1051","endLine":35,"endColumn":34},{"ruleId":"1048","severity":1,"message":"1049","line":65,"column":35,"nodeType":"1050","messageId":"1051","endLine":65,"endColumn":37},{"ruleId":"1021","severity":1,"message":"1389","line":75,"column":17,"nodeType":"1023","messageId":"1024","endLine":75,"endColumn":21},{"ruleId":"1048","severity":1,"message":"1049","line":77,"column":41,"nodeType":"1050","messageId":"1051","endLine":77,"endColumn":43},{"ruleId":"1080","severity":1,"message":"1390","line":97,"column":17,"nodeType":"1082","messageId":"1083","endLine":97,"endColumn":33,"fix":"1399"},{"ruleId":"1080","severity":1,"message":"1293","line":98,"column":17,"nodeType":"1082","messageId":"1083","endLine":98,"endColumn":30,"fix":"1400"},{"ruleId":"1021","severity":1,"message":"1026","line":2,"column":10,"nodeType":"1023","messageId":"1024","endLine":2,"endColumn":19},{"ruleId":"1021","severity":1,"message":"1070","line":5,"column":10,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":15},{"ruleId":"1021","severity":1,"message":"1062","line":6,"column":16,"nodeType":"1023","messageId":"1024","endLine":6,"endColumn":25},{"ruleId":"1048","severity":1,"message":"1049","line":27,"column":27,"nodeType":"1050","messageId":"1051","endLine":27,"endColumn":29},{"ruleId":"1048","severity":1,"message":"1049","line":32,"column":32,"nodeType":"1050","messageId":"1051","endLine":32,"endColumn":34},{"ruleId":"1048","severity":1,"message":"1049","line":43,"column":55,"nodeType":"1050","messageId":"1051","endLine":43,"endColumn":57},{"ruleId":"1048","severity":1,"message":"1049","line":84,"column":35,"nodeType":"1050","messageId":"1051","endLine":84,"endColumn":37},{"ruleId":"1048","severity":1,"message":"1049","line":105,"column":35,"nodeType":"1050","messageId":"1051","endLine":105,"endColumn":37},{"ruleId":"1048","severity":1,"message":"1049","line":119,"column":35,"nodeType":"1050","messageId":"1051","endLine":119,"endColumn":37},{"ruleId":"1048","severity":1,"message":"1049","line":175,"column":75,"nodeType":"1050","messageId":"1051","endLine":175,"endColumn":77},{"ruleId":"1021","severity":1,"message":"1026","line":2,"column":10,"nodeType":"1023","messageId":"1024","endLine":2,"endColumn":19},{"ruleId":"1021","severity":1,"message":"1070","line":5,"column":10,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":15},{"ruleId":"1021","severity":1,"message":"1062","line":6,"column":16,"nodeType":"1023","messageId":"1024","endLine":6,"endColumn":25},{"ruleId":"1048","severity":1,"message":"1049","line":26,"column":27,"nodeType":"1050","messageId":"1051","endLine":26,"endColumn":29},{"ruleId":"1048","severity":1,"message":"1049","line":30,"column":32,"nodeType":"1050","messageId":"1051","endLine":30,"endColumn":34},{"ruleId":"1048","severity":1,"message":"1049","line":46,"column":55,"nodeType":"1050","messageId":"1051","endLine":46,"endColumn":57},{"ruleId":"1048","severity":1,"message":"1049","line":83,"column":35,"nodeType":"1050","messageId":"1051","endLine":83,"endColumn":37},{"ruleId":"1048","severity":1,"message":"1049","line":104,"column":35,"nodeType":"1050","messageId":"1051","endLine":104,"endColumn":37},{"ruleId":"1048","severity":1,"message":"1049","line":118,"column":35,"nodeType":"1050","messageId":"1051","endLine":118,"endColumn":37},{"ruleId":"1048","severity":1,"message":"1049","line":172,"column":75,"nodeType":"1050","messageId":"1051","endLine":172,"endColumn":77},{"ruleId":"1021","severity":1,"message":"1116","line":4,"column":8,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1070","line":5,"column":10,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":15},{"ruleId":"1021","severity":1,"message":"1118","line":10,"column":22,"nodeType":"1023","messageId":"1024","endLine":10,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":11,"column":5,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1028","line":13,"column":5,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":9},{"ruleId":"1021","severity":1,"message":"1121","line":14,"column":5,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":13},{"ruleId":"1021","severity":1,"message":"1065","line":20,"column":12,"nodeType":"1023","messageId":"1024","endLine":20,"endColumn":22},{"ruleId":"1048","severity":1,"message":"1049","line":68,"column":32,"nodeType":"1050","messageId":"1051","endLine":68,"endColumn":34},{"ruleId":"1021","severity":1,"message":"1116","line":4,"column":8,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1118","line":13,"column":22,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":14,"column":5,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":15,"column":5,"nodeType":"1023","messageId":"1024","endLine":15,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1121","line":17,"column":5,"nodeType":"1023","messageId":"1024","endLine":17,"endColumn":13},{"ruleId":"1021","severity":1,"message":"1062","line":18,"column":5,"nodeType":"1023","messageId":"1024","endLine":18,"endColumn":14},{"ruleId":"1044","severity":1,"message":"1126","line":34,"column":8,"nodeType":"1046","endLine":34,"endColumn":10,"suggestions":"1401"},{"ruleId":"1048","severity":1,"message":"1049","line":109,"column":31,"nodeType":"1050","messageId":"1051","endLine":109,"endColumn":33},{"ruleId":"1021","severity":1,"message":"1116","line":9,"column":8,"nodeType":"1023","messageId":"1024","endLine":9,"endColumn":14},{"ruleId":"1080","severity":1,"message":"1166","line":29,"column":54,"nodeType":"1082","messageId":"1083","endLine":29,"endColumn":83,"fix":"1402"},{"ruleId":"1080","severity":1,"message":"1168","line":29,"column":85,"nodeType":"1082","messageId":"1083","endLine":29,"endColumn":112,"fix":"1403"},{"ruleId":"1044","severity":1,"message":"1170","line":34,"column":8,"nodeType":"1046","endLine":34,"endColumn":10,"suggestions":"1404"},{"ruleId":"1080","severity":1,"message":"1166","line":52,"column":21,"nodeType":"1082","messageId":"1083","endLine":52,"endColumn":34,"fix":"1405"},{"ruleId":"1080","severity":1,"message":"1168","line":53,"column":21,"nodeType":"1082","messageId":"1083","endLine":53,"endColumn":33,"fix":"1406"},{"ruleId":"1021","severity":1,"message":"1116","line":4,"column":8,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1117","line":8,"column":17,"nodeType":"1023","messageId":"1024","endLine":8,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1118","line":10,"column":22,"nodeType":"1023","messageId":"1024","endLine":10,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":11,"column":5,"nodeType":"1023","messageId":"1024","endLine":11,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":12,"column":5,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1028","line":13,"column":5,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":9},{"ruleId":"1021","severity":1,"message":"1121","line":14,"column":5,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":13},{"ruleId":"1021","severity":1,"message":"1062","line":15,"column":5,"nodeType":"1023","messageId":"1024","endLine":15,"endColumn":14},{"ruleId":"1080","severity":1,"message":"1407","line":38,"column":25,"nodeType":"1082","messageId":"1083","endLine":38,"endColumn":49,"fix":"1408"},{"ruleId":"1080","severity":1,"message":"1409","line":39,"column":25,"nodeType":"1082","messageId":"1083","endLine":39,"endColumn":54,"fix":"1410"},{"ruleId":"1080","severity":1,"message":"1093","line":40,"column":25,"nodeType":"1082","messageId":"1083","endLine":40,"endColumn":50,"fix":"1411"},{"ruleId":"1080","severity":1,"message":"1081","line":41,"column":25,"nodeType":"1082","messageId":"1083","endLine":41,"endColumn":56,"fix":"1412"},{"ruleId":"1044","severity":1,"message":"1413","line":47,"column":8,"nodeType":"1046","endLine":47,"endColumn":27,"suggestions":"1414"},{"ruleId":"1080","severity":1,"message":"1093","line":64,"column":17,"nodeType":"1082","messageId":"1083","endLine":64,"endColumn":34,"fix":"1415"},{"ruleId":"1080","severity":1,"message":"1081","line":65,"column":17,"nodeType":"1082","messageId":"1083","endLine":65,"endColumn":43,"fix":"1416"},{"ruleId":"1080","severity":1,"message":"1085","line":72,"column":42,"nodeType":"1082","messageId":"1083","endLine":72,"endColumn":58,"fix":"1417"},{"ruleId":"1080","severity":1,"message":"1093","line":83,"column":13,"nodeType":"1082","messageId":"1083","endLine":83,"endColumn":26,"fix":"1418"},{"ruleId":"1080","severity":1,"message":"1081","line":84,"column":13,"nodeType":"1082","messageId":"1083","endLine":84,"endColumn":32,"fix":"1419"},{"ruleId":"1080","severity":1,"message":"1409","line":85,"column":13,"nodeType":"1082","messageId":"1083","endLine":85,"endColumn":28,"fix":"1420"},{"ruleId":"1080","severity":1,"message":"1407","line":86,"column":13,"nodeType":"1082","messageId":"1083","endLine":86,"endColumn":38,"fix":"1421"},{"ruleId":"1080","severity":1,"message":"1093","line":93,"column":13,"nodeType":"1082","messageId":"1083","endLine":93,"endColumn":26,"fix":"1422"},{"ruleId":"1080","severity":1,"message":"1081","line":94,"column":13,"nodeType":"1082","messageId":"1083","endLine":94,"endColumn":32,"fix":"1423"},{"ruleId":"1080","severity":1,"message":"1409","line":95,"column":13,"nodeType":"1082","messageId":"1083","endLine":95,"endColumn":28,"fix":"1424"},{"ruleId":"1080","severity":1,"message":"1407","line":96,"column":13,"nodeType":"1082","messageId":"1083","endLine":96,"endColumn":38,"fix":"1425"},{"ruleId":"1080","severity":1,"message":"1085","line":164,"column":58,"nodeType":"1082","messageId":"1083","endLine":164,"endColumn":75,"fix":"1426"},{"ruleId":"1021","severity":1,"message":"1115","line":3,"column":8,"nodeType":"1023","messageId":"1024","endLine":3,"endColumn":19},{"ruleId":"1021","severity":1,"message":"1116","line":4,"column":8,"nodeType":"1023","messageId":"1024","endLine":4,"endColumn":14},{"ruleId":"1021","severity":1,"message":"1070","line":5,"column":10,"nodeType":"1023","messageId":"1024","endLine":5,"endColumn":15},{"ruleId":"1021","severity":1,"message":"1174","line":6,"column":8,"nodeType":"1023","messageId":"1024","endLine":6,"endColumn":16},{"ruleId":"1021","severity":1,"message":"1117","line":9,"column":17,"nodeType":"1023","messageId":"1024","endLine":9,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1118","line":12,"column":22,"nodeType":"1023","messageId":"1024","endLine":12,"endColumn":28},{"ruleId":"1021","severity":1,"message":"1119","line":13,"column":5,"nodeType":"1023","messageId":"1024","endLine":13,"endColumn":11},{"ruleId":"1021","severity":1,"message":"1120","line":14,"column":5,"nodeType":"1023","messageId":"1024","endLine":14,"endColumn":10},{"ruleId":"1021","severity":1,"message":"1028","line":15,"column":5,"nodeType":"1023","messageId":"1024","endLine":15,"endColumn":9},{"ruleId":"1021","severity":1,"message":"1121","line":16,"column":5,"nodeType":"1023","messageId":"1024","endLine":16,"endColumn":13},{"ruleId":"1021","severity":1,"message":"1062","line":17,"column":5,"nodeType":"1023","messageId":"1024","endLine":17,"endColumn":14},{"ruleId":"1080","severity":1,"message":"1190","line":34,"column":42,"nodeType":"1082","messageId":"1083","endLine":34,"endColumn":70,"fix":"1427"},{"ruleId":"1080","severity":1,"message":"1407","line":44,"column":41,"nodeType":"1082","messageId":"1083","endLine":44,"endColumn":65,"fix":"1428"},{"ruleId":"1080","severity":1,"message":"1190","line":44,"column":67,"nodeType":"1082","messageId":"1083","endLine":44,"endColumn":94,"fix":"1429"},{"ruleId":"1080","severity":1,"message":"1195","line":44,"column":96,"nodeType":"1082","messageId":"1083","endLine":44,"endColumn":121,"fix":"1430"},{"ruleId":"1080","severity":1,"message":"1197","line":45,"column":25,"nodeType":"1082","messageId":"1083","endLine":45,"endColumn":52,"fix":"1431"},{"ruleId":"1080","severity":1,"message":"1210","line":45,"column":55,"nodeType":"1082","messageId":"1083","endLine":45,"endColumn":82,"fix":"1432"},{"ruleId":"1044","severity":1,"message":"1433","line":52,"column":8,"nodeType":"1046","endLine":52,"endColumn":27,"suggestions":"1434"},{"ruleId":"1080","severity":1,"message":"1190","line":63,"column":42,"nodeType":"1082","messageId":"1083","endLine":63,"endColumn":56,"fix":"1435"},{"ruleId":"1080","severity":1,"message":"1195","line":63,"column":59,"nodeType":"1082","messageId":"1083","endLine":63,"endColumn":72,"fix":"1436"},{"ruleId":"1080","severity":1,"message":"1197","line":63,"column":74,"nodeType":"1082","messageId":"1083","endLine":63,"endColumn":88,"fix":"1437"},{"ruleId":"1080","severity":1,"message":"1210","line":63,"column":90,"nodeType":"1082","messageId":"1083","endLine":63,"endColumn":104,"fix":"1438"},{"ruleId":"1080","severity":1,"message":"1407","line":63,"column":106,"nodeType":"1082","messageId":"1083","endLine":63,"endColumn":131,"fix":"1439"},{"ruleId":"1080","severity":1,"message":"1190","line":67,"column":42,"nodeType":"1082","messageId":"1083","endLine":67,"endColumn":56,"fix":"1440"},{"ruleId":"1080","severity":1,"message":"1195","line":67,"column":58,"nodeType":"1082","messageId":"1083","endLine":67,"endColumn":71,"fix":"1441"},{"ruleId":"1080","severity":1,"message":"1197","line":67,"column":73,"nodeType":"1082","messageId":"1083","endLine":67,"endColumn":87,"fix":"1442"},{"ruleId":"1080","severity":1,"message":"1210","line":67,"column":89,"nodeType":"1082","messageId":"1083","endLine":67,"endColumn":103,"fix":"1443"},{"ruleId":"1080","severity":1,"message":"1407","line":67,"column":105,"nodeType":"1082","messageId":"1083","endLine":67,"endColumn":130,"fix":"1444"},"no-native-reassign",["1445"],"no-negated-in-lhs",["1446"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","react/jsx-no-undef","'Redirect' is not defined.","JSXIdentifier","undefined","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1447","text":"1448"},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'useHistory' is defined but never used.","'id' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'host'. Either include them or remove the dependency array.","ArrayExpression",["1449"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'history' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'_' is defined but never used.","'data' is assigned a value but never used.","'getProductFeatureService' is defined but never used.","'useDispatch' is defined but never used.","'addItemCartStart' is defined but never used.","'Pagination' is defined but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","'useParams' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'numberPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'categoryId', 'keyword', 'limitPage', 'loadProduct', 'offset', 'sortName', and 'sortPrice'. Either include them or remove the dependency array.",["1450"],"React Hook useEffect has missing dependencies: 'keyword', 'limitPage', 'offset', 'sortName', and 'sortPrice'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCount' needs the current value of 'limitPage'.",["1451"],"'toast' is defined but never used.","'ImgDetailProduct' is defined but never used.","'CommentProduct' is defined but never used.","'NewProductFeature' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchDetailProduct'. Either include it or remove the dependency array.",["1452"],"React Hook useEffect has missing dependencies: 'dataProduct' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1453"],"React Hook useEffect has a missing dependency: 'loadAllReview'. Either include it or remove the dependency array.",["1454"],"no-useless-computed-key","Unnecessarily computed property [\"imageReview\"] found.","Property","unnecessarilyComputedProperty",{"range":"1455","text":"1456"},"Unnecessarily computed property [\"isOpen\"] found.",{"range":"1457","text":"1458"},"Unnecessarily computed property [\"dataReview\"] found.",{"range":"1459","text":"1460"},"Unnecessarily computed property [\"countStar\"] found.",{"range":"1461","text":"1462"},"Unnecessarily computed property [\"content\"] found.",{"range":"1463","text":"1464"},"Unnecessarily computed property [\"image\"] found.",{"range":"1465","text":"1466"},{"range":"1467","text":"1456"},"Unnecessarily computed property [\"activeStar\"] found.",{"range":"1468","text":"1469"},"Unnecessarily computed property [\"isOpenModal\"] found.",{"range":"1470","text":"1471"},{"range":"1472","text":"1469"},{"range":"1473","text":"1466"},{"range":"1474","text":"1456"},{"range":"1475","text":"1471"},"Unnecessarily computed property [\"parentId\"] found.",{"range":"1476","text":"1477"},{"range":"1478","text":"1471"},{"range":"1479","text":"1477"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"1480","text":"1458"},{"range":"1481","text":"1456"},"'CommonUtils' is defined but never used.","'moment' is defined but never used.","'ModalHeader' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.",{"range":"1482","text":"1464"},{"range":"1483","text":"1464"},"React Hook useEffect has missing dependencies: 'loadStatusOrder' and 'year'. Either include them or remove the dependency array.",["1484"],"React Hook useEffect has a missing dependency: 'keyword'. Either include it or remove the dependency array.",["1485"],"'localization' is defined but never used.","Unnecessarily computed property [\"firstName\"] found.",{"range":"1486","text":"1487"},"Unnecessarily computed property [\"lastName\"] found.",{"range":"1488","text":"1489"},"Unnecessarily computed property [\"address\"] found.",{"range":"1490","text":"1491"},"Unnecessarily computed property [\"phonenumber\"] found.",{"range":"1492","text":"1493"},"Unnecessarily computed property [\"genderId\"] found.",{"range":"1494","text":"1495"},"Unnecessarily computed property [\"roleId\"] found.",{"range":"1496","text":"1497"},"Unnecessarily computed property [\"email\"] found.",{"range":"1498","text":"1499"},"Unnecessarily computed property [\"id\"] found.",{"range":"1500","text":"1501"},"Unnecessarily computed property [\"dob\"] found.",{"range":"1502","text":"1503"},"React Hook useEffect has missing dependencies: 'id' and 'setStateUser'. Either include them or remove the dependency array.",["1504"],{"range":"1505","text":"1495"},{"range":"1506","text":"1497"},{"range":"1507","text":"1487"},{"range":"1508","text":"1489"},{"range":"1509","text":"1491"},{"range":"1510","text":"1493"},{"range":"1511","text":"1495"},{"range":"1512","text":"1497"},{"range":"1513","text":"1499"},"Unnecessarily computed property [\"newpassword\"] found.",{"range":"1514","text":"1515"},"Unnecessarily computed property [\"confirmpassword\"] found.",{"range":"1516","text":"1517"},"Unnecessarily computed property [\"oldpassword\"] found.",{"range":"1518","text":"1519"},"'useFetchAllcode' is defined but never used.",["1520"],"Unnecessarily computed property [\"value\"] found.",{"range":"1521","text":"1522"},"Unnecessarily computed property [\"code\"] found.",{"range":"1523","text":"1524"},"React Hook useEffect has missing dependencies: 'id' and 'inputValues'. Either include them or remove the dependency array. You can also do a functional update 'setInputValues(i => ...)' if you only need 'inputValues' in the 'setInputValues' call.",["1525"],{"range":"1526","text":"1522"},{"range":"1527","text":"1524"},"'Lightbox' is defined but never used.",["1528"],{"range":"1529","text":"1487"},{"range":"1530","text":"1489"},{"range":"1531","text":"1491"},{"range":"1532","text":"1493"},{"range":"1533","text":"1495"},{"range":"1534","text":"1497"},{"range":"1535","text":"1499"},{"range":"1536","text":"1501"},{"range":"1537","text":"1503"},{"range":"1538","text":"1466"},"Unnecessarily computed property [\"isActiveEmail\"] found.",{"range":"1539","text":"1540"},{"range":"1541","text":"1466"},{"range":"1542","text":"1456"},"Unnecessarily computed property [\"sizeId\"] found.",{"range":"1543","text":"1544"},{"range":"1545","text":"1466"},{"range":"1546","text":"1456"},{"range":"1547","text":"1458"},"Unnecessarily computed property [\"width\"] found.",{"range":"1548","text":"1549"},"Unnecessarily computed property [\"height\"] found.",{"range":"1550","text":"1551"},"Unnecessarily computed property [\"description\"] found.",{"range":"1552","text":"1553"},{"range":"1554","text":"1544"},"Unnecessarily computed property [\"originalPrice\"] found.",{"range":"1555","text":"1556"},"Unnecessarily computed property [\"discountPrice\"] found.",{"range":"1557","text":"1558"},{"range":"1559","text":"1466"},{"range":"1560","text":"1456"},"Unnecessarily computed property [\"nameDetail\"] found.",{"range":"1561","text":"1562"},"Unnecessarily computed property [\"weight\"] found.",{"range":"1563","text":"1564"},{"range":"1565","text":"1458"},"React Hook useEffect has missing dependencies: 'id' and 'setStateProductdetail'. Either include them or remove the dependency array.",["1566"],{"range":"1567","text":"1556"},"Unnecessarily computed property [\"stock\"] found.",{"range":"1568","text":"1569"},{"range":"1570","text":"1558"},{"range":"1571","text":"1562"},{"range":"1572","text":"1553"},"React Hook useEffect has missing dependencies: 'id' and 'setStateProduct'. Either include them or remove the dependency array.",["1573"],"Unnecessarily computed property [\"brandId\"] found.",{"range":"1574","text":"1575"},"Unnecessarily computed property [\"categoryId\"] found.",{"range":"1576","text":"1577"},"Unnecessarily computed property [\"name\"] found.",{"range":"1578","text":"1579"},"Unnecessarily computed property [\"contentMarkdown\"] found.",{"range":"1580","text":"1581"},"Unnecessarily computed property [\"contentHTML\"] found.",{"range":"1582","text":"1583"},"Unnecessarily computed property [\"madeby\"] found.",{"range":"1584","text":"1585"},"Unnecessarily computed property [\"material\"] found.",{"range":"1586","text":"1587"},{"range":"1588","text":"1581"},{"range":"1589","text":"1583"},["1590"],"React Hook useEffect has missing dependencies: 'id' and 'setStateBanner'. Either include them or remove the dependency array.",["1591"],{"range":"1592","text":"1579"},{"range":"1593","text":"1553"},{"range":"1594","text":"1466"},{"range":"1595","text":"1456"},"Unnecessarily computed property [\"isActionADD\"] found.",{"range":"1596","text":"1597"},{"range":"1598","text":"1466"},{"range":"1599","text":"1456"},{"range":"1600","text":"1458"},{"range":"1601","text":"1579"},{"range":"1602","text":"1466"},{"range":"1603","text":"1553"},{"range":"1604","text":"1456"},{"range":"1605","text":"1458"},{"range":"1606","text":"1575"},{"range":"1607","text":"1577"},{"range":"1608","text":"1544"},{"range":"1609","text":"1466"},{"range":"1610","text":"1456"},{"range":"1611","text":"1458"},{"range":"1612","text":"1579"},"Unnecessarily computed property [\"shortdescription\"] found.",{"range":"1613","text":"1614"},{"range":"1615","text":"1577"},{"range":"1616","text":"1585"},{"range":"1617","text":"1587"},{"range":"1618","text":"1575"},{"range":"1619","text":"1551"},{"range":"1620","text":"1549"},{"range":"1621","text":"1544"},{"range":"1622","text":"1556"},{"range":"1623","text":"1558"},{"range":"1624","text":"1466"},{"range":"1625","text":"1456"},{"range":"1626","text":"1562"},{"range":"1627","text":"1583"},"Unnecessarily computed property [\"contenMarkdown\"] found.",{"range":"1628","text":"1629"},{"range":"1630","text":"1564"},{"range":"1631","text":"1581"},{"range":"1632","text":"1583"},{"range":"1633","text":"1458"},"React Hook useEffect has a missing dependency: 'loadProductDetail'. Either include it or remove the dependency array.",["1634"],"React Hook useEffect has missing dependencies: 'loadProductDetailImage' and 'loadProductDetailSize'. Either include them or remove the dependency array.",["1635"],["1636"],["1637"],["1638"],"Unnecessarily computed property [\"type\"] found.",{"range":"1639","text":"1640"},"Unnecessarily computed property [\"price\"] found.",{"range":"1641","text":"1642"},["1643"],{"range":"1644","text":"1640"},{"range":"1645","text":"1642"},["1646"],"Unnecessarily computed property [\"typeVoucher\"] found.",{"range":"1647","text":"1648"},{"range":"1649","text":"1648"},{"range":"1650","text":"1522"},"Unnecessarily computed property [\"maxValue\"] found.",{"range":"1651","text":"1652"},"Unnecessarily computed property [\"minValue\"] found.",{"range":"1653","text":"1654"},["1655"],{"range":"1656","text":"1648"},{"range":"1657","text":"1522"},{"range":"1658","text":"1652"},{"range":"1659","text":"1654"},"Unnecessarily computed property [\"typeVoucherId\"] found.",{"range":"1660","text":"1661"},"React Hook useEffect has missing dependencies: 'id' and 'setStateVoucher'. Either include them or remove the dependency array.",["1662"],"Unnecessarily computed property [\"fromDate\"] found.",{"range":"1663","text":"1664"},"Unnecessarily computed property [\"toDate\"] found.",{"range":"1665","text":"1666"},{"range":"1667","text":"1661"},"Unnecessarily computed property [\"amount\"] found.",{"range":"1668","text":"1669"},"Unnecessarily computed property [\"codeVoucher\"] found.",{"range":"1670","text":"1671"},{"range":"1672","text":"1597"},"Unnecessarily computed property [\"fromDateUpdate\"] found.",{"range":"1673","text":"1674"},"Unnecessarily computed property [\"toDateUpdate\"] found.",{"range":"1675","text":"1676"},{"range":"1677","text":"1664"},"Unnecessarily computed property [\"isChangeFromDate\"] found.",{"range":"1678","text":"1679"},{"range":"1680","text":"1666"},"Unnecessarily computed property [\"isChangeToDate\"] found.",{"range":"1681","text":"1682"},{"range":"1683","text":"1664"},{"range":"1684","text":"1666"},{"range":"1685","text":"1661"},{"range":"1686","text":"1669"},{"range":"1687","text":"1671"},"React Hook useEffect has a missing dependency: 'host'. Either include it or remove the dependency array.",["1688"],"'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'loadDataOrder'. Either include it or remove the dependency array.",["1689"],{"range":"1690","text":"1579"},{"range":"1691","text":"1491"},{"range":"1692","text":"1493"},{"range":"1693","text":"1499"},["1694"],{"range":"1695","text":"1579"},{"range":"1696","text":"1491"},{"range":"1697","text":"1499"},{"range":"1698","text":"1493"},"Unnecessarily computed property [\"subjectId\"] found.",{"range":"1699","text":"1700"},"React Hook useEffect has missing dependencies: 'id' and 'setStateBlog'. Either include them or remove the dependency array.",["1701"],"Unnecessarily computed property [\"title\"] found.",{"range":"1702","text":"1703"},{"range":"1704","text":"1614"},{"range":"1705","text":"1466"},{"range":"1706","text":"1456"},{"range":"1707","text":"1597"},{"range":"1708","text":"1581"},{"range":"1709","text":"1583"},{"range":"1710","text":"1700"},{"range":"1711","text":"1466"},{"range":"1712","text":"1456"},{"range":"1713","text":"1458"},{"range":"1714","text":"1614"},{"range":"1715","text":"1703"},{"range":"1716","text":"1700"},{"range":"1717","text":"1466"},{"range":"1718","text":"1581"},{"range":"1719","text":"1583"},{"range":"1720","text":"1456"},{"range":"1721","text":"1581"},{"range":"1722","text":"1583"},{"range":"1723","text":"1458"},{"range":"1724","text":"1522"},{"range":"1725","text":"1524"},["1726"],{"range":"1727","text":"1522"},{"range":"1728","text":"1524"},["1729"],"Unnecessarily computed property [\"supplierId\"] found.",{"range":"1730","text":"1731"},"'name' is assigned a value but never used.","Unnecessarily computed property [\"quantity\"] found.",{"range":"1732","text":"1733"},{"range":"1734","text":"1642"},"'date' is assigned a value but never used.","'deleteReceiptService' is defined but never used.","Unnecessarily computed property [\"productId\"] found.",{"range":"1735","text":"1736"},"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1737"],{"range":"1738","text":"1733"},{"range":"1739","text":"1642"},["1740"],{"range":"1741","text":"1522"},{"range":"1742","text":"1524"},["1743"],{"range":"1744","text":"1522"},{"range":"1745","text":"1524"},"Unnecessarily computed property [\"isActionUpdate\"] found.",{"range":"1746","text":"1747"},"Unnecessarily computed property [\"caption\"] found.",{"range":"1748","text":"1749"},{"range":"1750","text":"1466"},{"range":"1751","text":"1456"},"React Hook useEffect has missing dependencies: 'inputValues' and 'props.productImageId'. Either include them or remove the dependency array. You can also do a functional update 'setInputValues(i => ...)' if you only need 'inputValues' in the 'setInputValues' call.",["1752"],{"range":"1753","text":"1466"},{"range":"1754","text":"1456"},{"range":"1755","text":"1458"},{"range":"1756","text":"1466"},{"range":"1757","text":"1456"},{"range":"1758","text":"1749"},{"range":"1759","text":"1747"},{"range":"1760","text":"1466"},{"range":"1761","text":"1456"},{"range":"1762","text":"1749"},{"range":"1763","text":"1747"},{"range":"1764","text":"1458"},{"range":"1765","text":"1544"},{"range":"1766","text":"1747"},{"range":"1767","text":"1544"},{"range":"1768","text":"1549"},{"range":"1769","text":"1551"},{"range":"1770","text":"1564"},"React Hook useEffect has missing dependencies: 'inputValues' and 'props.productSizeId'. Either include them or remove the dependency array. You can also do a functional update 'setInputValues(i => ...)' if you only need 'inputValues' in the 'setInputValues' call.",["1771"],{"range":"1772","text":"1544"},{"range":"1773","text":"1549"},{"range":"1774","text":"1551"},{"range":"1775","text":"1564"},{"range":"1776","text":"1747"},{"range":"1777","text":"1544"},{"range":"1778","text":"1549"},{"range":"1779","text":"1551"},{"range":"1780","text":"1564"},{"range":"1781","text":"1747"},"no-global-assign","no-unsafe-negation",[2107,2107]," rel=\"noreferrer\"",{"desc":"1782","fix":"1783"},{"desc":"1784","fix":"1785"},{"desc":"1786","fix":"1787"},{"desc":"1788","fix":"1789"},{"desc":"1790","fix":"1791"},{"desc":"1792","fix":"1793"},[1061,1076],"\"imageReview\"",[1083,1093],"\"isOpen\"",[1662,1676],"\"dataReview\"",[1688,1701],"\"countStar\"",[2289,2300],"\"content\"",[2306,2315],"\"image\"",[2321,2336],[2342,2356],"\"activeStar\"",[2362,2377],"\"isOpenModal\"",[2504,2518],[2935,2944],[2954,2969],[4010,4025],[4034,4046],"\"parentId\"",[4142,4157],[4165,4177],[14783,14793],[14802,14817],[808,819],[913,924],{"desc":"1794","fix":"1795"},{"desc":"1796","fix":"1797"},[1054,1067],"\"firstName\"",[1098,1110],"\"lastName\"",[1140,1151],"\"address\"",[1180,1195],"\"phonenumber\"",[1228,1240],"\"genderId\"",[1270,1280],"\"roleId\"",[1308,1317],"\"email\"",[1344,1350],"\"id\"",[1374,1381],"\"dob\"",{"desc":"1798","fix":"1799"},[2352,2364],[2386,2396],[3331,3344],[3371,3383],[3410,3421],[3448,3463],[3490,3502],[3529,3539],[3566,3575],[1346,1361],"\"newpassword\"",[1367,1386],"\"confirmpassword\"",[1392,1407],"\"oldpassword\"",{"desc":"1796","fix":"1800"},[897,906],"\"value\"",[928,936],"\"code\"",{"desc":"1801","fix":"1802"},[1672,1681],[1708,1716],{"desc":"1798","fix":"1803"},[1561,1574],[1605,1617],[1647,1658],[1687,1702],[1735,1747],[1777,1787],[1815,1824],[1851,1857],[1881,1888],[1913,1922],[2140,2157],"\"isActiveEmail\"",[4174,4183],[4210,4225],[1099,1109],"\"sizeId\"",[1726,1735],[1762,1777],[1953,1963],[2723,2732],"\"width\"",[2755,2765],"\"height\"",[2788,2803],"\"description\"",[2826,2836],[2861,2878],"\"originalPrice\"",[2901,2918],"\"discountPrice\"",[2941,2950],[2973,2988],[3011,3025],"\"nameDetail\"",[3048,3058],"\"weight\"",[12157,12167],{"desc":"1804","fix":"1805"},[1087,1104],[1139,1148],"\"stock\"",[1175,1192],[1227,1241],[1273,1288],{"desc":"1806","fix":"1807"},[1341,1352],"\"brandId\"",[1381,1395],"\"categoryId\"",[1427,1435],"\"name\"",[1461,1480],"\"contentMarkdown\"",[1517,1532],"\"contentHTML\"",[1565,1575],"\"madeby\"",[1603,1615],"\"material\"",[2556,2575],[2596,2611],{"desc":"1796","fix":"1808"},{"desc":"1809","fix":"1810"},[1264,1272],[1298,1313],[1346,1355],[1382,1397],[1424,1439],"\"isActionADD\"",[2088,2097],[2124,2139],[2315,2325],[2847,2855],[2882,2891],[2918,2933],[2960,2975],[7356,7366],[1874,1885],[1919,1933],[1970,1980],[2607,2616],[2643,2658],[2834,2844],[3924,3932],[3955,3975],"\"shortdescription\"",[3998,4012],[4035,4045],[4068,4080],[4103,4114],[4137,4147],[4170,4179],[4202,4212],[4237,4254],[4277,4294],[4317,4326],[4349,4364],[4387,4401],[4424,4439],[4462,4480],"\"contenMarkdown\"",[4503,4513],[4735,4754],[4775,4790],[19225,19235],{"desc":"1811","fix":"1812"},{"desc":"1813","fix":"1814"},{"desc":"1796","fix":"1815"},{"desc":"1796","fix":"1816"},{"desc":"1796","fix":"1817"},[921,929],"\"type\"",[951,960],"\"price\"",{"desc":"1801","fix":"1818"},[1669,1677],[1704,1713],{"desc":"1796","fix":"1819"},[903,918],"\"typeVoucher\"",[1313,1328],[1360,1369],[1420,1432],"\"maxValue\"",[1461,1473],"\"minValue\"",{"desc":"1801","fix":"1820"},[2329,2344],[2371,2380],[2407,2419],[2446,2458],[987,1004],"\"typeVoucherId\"",{"desc":"1821","fix":"1822"},[1804,1816],"\"fromDate\"",[1901,1911],"\"toDate\"",[1994,2011],[2046,2056],"\"amount\"",[2084,2099],"\"codeVoucher\"",[2132,2147],[2169,2187],"\"fromDateUpdate\"",[2217,2233],"\"toDateUpdate\"",[2546,2558],[2582,2602],"\"isChangeFromDate\"",[2752,2762],[2786,2804],"\"isChangeToDate\"",[3506,3518],[3545,3555],[3582,3599],[3626,3636],[3663,3678],{"desc":"1823","fix":"1824"},{"desc":"1825","fix":"1826"},[975,983],[1031,1042],[1092,1107],[1161,1170],{"desc":"1801","fix":"1827"},[2005,2013],[2040,2051],[2078,2087],[2114,2129],[1300,1313],"\"subjectId\"",{"desc":"1828","fix":"1829"},[1777,1786],"\"title\"",[1813,1833],[1871,1880],[1907,1922],[1949,1964],[1986,2005],[2042,2057],[2090,2103],[2727,2736],[2763,2778],[2954,2964],[3738,3758],[3785,3794],[3821,3834],[3861,3870],[3897,3916],[3943,3958],[3985,4000],[4831,4850],[4871,4886],[10615,10625],[894,903],[925,933],{"desc":"1801","fix":"1830"},[1667,1676],[1703,1711],{"desc":"1796","fix":"1831"},[1081,1095],"\"supplierId\"",[3967,3979],"\"quantity\"",[4006,4015],[1076,1089],"\"productId\"",{"desc":"1832","fix":"1833"},[3667,3679],[3702,3711],{"desc":"1796","fix":"1834"},[895,904],[926,934],{"desc":"1801","fix":"1835"},[1665,1674],[1701,1709],[1232,1250],"\"isActionUpdate\"",[1283,1294],"\"caption\"",[1339,1348],[1391,1406],{"desc":"1836","fix":"1837"},[2148,2157],[2184,2199],[2375,2385],[2741,2750],[2769,2784],[2803,2814],[2833,2851],[3014,3023],[3042,3057],[3076,3087],[3106,3124],[6038,6048],[1171,1181],[1545,1563],[1571,1581],[1600,1609],[1652,1662],[1682,1692],{"desc":"1838","fix":"1839"},[2243,2253],[2260,2269],[2275,2285],[2291,2301],[2307,2325],[2449,2459],[2465,2474],[2480,2490],[2496,2506],[2512,2530],"Update the dependencies array to be: [dispatch, host]",{"range":"1840","text":"1841"},"Update the dependencies array to be: [categoryId, keyword, limitPage, loadProduct, offset, sortName, sortPrice]",{"range":"1842","text":"1843"},"Update the dependencies array to be: [props.categoryId, props.brandId, sortPrice, sortName, limitPage, offset, keyword]",{"range":"1844","text":"1845"},"Update the dependencies array to be: [fetchDetailProduct]",{"range":"1846","text":"1847"},"Update the dependencies array to be: [dataProduct, props, props.dataProduct]",{"range":"1848","text":"1849"},"Update the dependencies array to be: [loadAllReview]",{"range":"1850","text":"1851"},"Update the dependencies array to be: [loadStatusOrder, year]",{"range":"1852","text":"1853"},"Update the dependencies array to be: [keyword]",{"range":"1854","text":"1855"},"Update the dependencies array to be: [id, setStateUser]",{"range":"1856","text":"1857"},{"range":"1858","text":"1855"},"Update the dependencies array to be: [id, inputValues]",{"range":"1859","text":"1860"},{"range":"1861","text":"1857"},"Update the dependencies array to be: [id, setStateProductdetail]",{"range":"1862","text":"1863"},"Update the dependencies array to be: [id, setStateProduct]",{"range":"1864","text":"1865"},{"range":"1866","text":"1855"},"Update the dependencies array to be: [id, setStateBanner]",{"range":"1867","text":"1868"},"Update the dependencies array to be: [loadProductDetail]",{"range":"1869","text":"1870"},"Update the dependencies array to be: [loadProductDetailImage, loadProductDetailSize]",{"range":"1871","text":"1872"},{"range":"1873","text":"1855"},{"range":"1874","text":"1855"},{"range":"1875","text":"1855"},{"range":"1876","text":"1860"},{"range":"1877","text":"1855"},{"range":"1878","text":"1860"},"Update the dependencies array to be: [id, setStateVoucher]",{"range":"1879","text":"1880"},"Update the dependencies array to be: [host]",{"range":"1881","text":"1882"},"Update the dependencies array to be: [loadDataOrder]",{"range":"1883","text":"1884"},{"range":"1885","text":"1860"},"Update the dependencies array to be: [id, setStateBlog]",{"range":"1886","text":"1887"},{"range":"1888","text":"1860"},{"range":"1889","text":"1855"},"Update the dependencies array to be: [id]",{"range":"1890","text":"1891"},{"range":"1892","text":"1855"},{"range":"1893","text":"1860"},"Update the dependencies array to be: [inputValues, props.isOpenModal, props.productImageId]",{"range":"1894","text":"1895"},"Update the dependencies array to be: [inputValues, props.isOpenModal, props.productSizeId]",{"range":"1896","text":"1897"},[1861,1863],"[dispatch, host]",[991,993],"[categoryId, keyword, limitPage, loadProduct, offset, sortName, sortPrice]",[1700,1733],"[props.categoryId, props.brandId, sortPrice, sortName, limitPage, offset, keyword]",[1397,1399],"[fetchDetailProduct]",[1288,1307],"[dataProduct, props, props.dataProduct]",[974,976],"[loadAllReview]",[1783,1785],"[loadStatusOrder, year]",[860,862],"[keyword]",[1853,1855],"[id, setStateUser]",[958,960],[1047,1049],"[id, inputValues]",[1452,1454],[970,972],"[id, setStateProductdetail]",[1230,1232],"[id, setStateProduct]",[988,990],[1153,1155],"[id, setStateBanner]",[951,953],"[loadProductDetail]",[1958,1960],"[loadProductDetailImage, loadProductDetailSize]",[1108,1110],[931,933],[1026,1028],[1073,1075],[961,963],[1613,1615],[1659,1661],"[id, setStateVoucher]",[1551,1553],"[host]",[998,1000],"[loadDataOrder]",[1304,1306],[1668,1670],"[id, setStateBlog]",[1044,1046],[1029,1031],[1445,1447],"[id]",[1110,1112],[1044,1046],[1537,1556],"[inputValues, props.isOpenModal, props.productImageId]",[1827,1846],"[inputValues, props.isOpenModal, props.productSizeId]"]